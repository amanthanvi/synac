{
  "meta": {
    "sources": {
      "nist": {
        "retrievedAt": "2025-09-02T01:17:50.856Z",
        "count": 0
      },
      "cwe": {
        "version": "4.17",
        "retrievedAt": "2025-09-02T01:17:49.533Z",
        "count": 968
      },
      "capec": {
        "version": "3.9",
        "retrievedAt": "2025-09-02T01:17:50.261Z",
        "count": 615
      },
      "attack": {
        "retrievedAt": "2025-09-02T01:17:48.429Z",
        "techniques": 823,
        "tactics": 14
      }
    }
  },
  "data": {
    "nist": [],
    "cwe": [
      {
        "id": 5,
        "name": "J2EE Misconfiguration: Data Transmission Without Encryption",
        "description": "Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 319
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Misconfiguration: Insecure Transport",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 6,
        "name": "J2EE Misconfiguration: Insufficient Session-ID Length",
        "description": "The J2EE application is configured to use an insufficient session ID length.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 334
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Misconfiguration: Insufficient Session-ID Length",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 7,
        "name": "J2EE Misconfiguration: Missing Custom Error Page",
        "description": "The default error page of a web application should not display sensitive information about the product.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 756
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Misconfiguration: Missing Error Handling",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 8,
        "name": "J2EE Misconfiguration: Entity Bean Declared Remote",
        "description": "When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Misconfiguration: Unsafe Bean Declaration",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 9,
        "name": "J2EE Misconfiguration: Weak Access Permissions for EJB Methods",
        "description": "If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 266
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Misconfiguration: Weak Access Permissions",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 11,
        "name": "ASP.NET Misconfiguration: Creating Debug Binary",
        "description": "Debugging messages help attackers learn about the system and plan a form of attack.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 489
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Build and Compilation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "ASP.NET Misconfiguration: Creating Debug Binary",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 12,
        "name": "ASP.NET Misconfiguration: Missing Custom Error Page",
        "description": "An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 756
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "ASP.NET Misconfiguration: Missing Custom Error Handling",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 13,
        "name": "ASP.NET Misconfiguration: Password in Configuration File",
        "description": "Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 260
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "ASP.NET Misconfiguration: Password in Configuration File",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 14,
        "name": "Compiler Removal of Code to Clear Buffers",
        "description": "Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka \"dead store removal.\"",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 733
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Build and Compilation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure Compiler Optimization",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Sensitive memory uncleared by compiler optimization",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "MSC06-C",
            "Entry_Name": "Be aware of compiler optimization when dealing with sensitive data",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 15,
        "name": "External Control of System or Configuration Setting",
        "description": "One or more system settings or configuration elements can be externally controlled by a user.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 642
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Setting Manipulation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 20,
        "name": "Improper Input Validation",
        "description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
        "status": "Stable",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "PeerOf",
            "targetId": 345
          },
          {
            "type": "CanPrecede",
            "targetId": 22
          },
          {
            "type": "CanPrecede",
            "targetId": 41
          },
          {
            "type": "CanPrecede",
            "targetId": 74
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 770
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Input validation and representation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ERR07-C",
            "Entry_Name": "Prefer functions that support error checking over equivalent functions that don't",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO30-C",
            "Entry_Name": "Exclude user input from format strings",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM10-C",
            "Entry_Name": "Define and use a pointer validation function",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "20",
            "Entry_Name": "Improper Input Handling",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 22,
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "CanPrecede",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A4",
            "Entry_Name": "Insecure Direct Object Reference",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Broken Access Control",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "FIO02-C",
            "Entry_Name": "Canonicalize path names originating from untrusted sources",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "IDS00-PL",
            "Entry_Name": "Canonicalize path names before validating them",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "33",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-22",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 23,
        "name": "Relative Path Traversal",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 22
          },
          {
            "type": "ChildOf",
            "targetId": 22
          },
          {
            "type": "ChildOf",
            "targetId": 22
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Relative Path Traversal",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 24,
        "name": "Path Traversal: '../filedir'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'../filedir",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 25,
        "name": "Path Traversal: '/../filedir'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/../\" sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'/../filedir",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 26,
        "name": "Path Traversal: '/dir/../filename'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/dir/../filename\" sequences that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'/directory/../filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 27,
        "name": "Path Traversal: 'dir/../../filename'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'directory/../../filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 28,
        "name": "Path Traversal: '..\\filedir'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'..\\filename' ('dot dot backslash')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 29,
        "name": "Path Traversal: '\\..\\filename'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'\\..\\filename' ('leading dot dot backslash')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 30,
        "name": "Path Traversal: '\\dir\\..\\filename'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "7 - '\\directory\\..\\filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 31,
        "name": "Path Traversal: 'dir\\..\\..\\filename'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "8 - 'directory\\..\\..\\filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 32,
        "name": "Path Traversal: '...' (Triple Dot)",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'...' (triple dot)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 33,
        "name": "Path Traversal: '....' (Multiple Dot)",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'....' (multiple dot)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 34,
        "name": "Path Traversal: '....//'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'....//' (doubled dot dot slash)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 35,
        "name": "Path Traversal: '.../...//'",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 23
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'.../...//'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 36,
        "name": "Absolute Path Traversal",
        "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 22
          },
          {
            "type": "ChildOf",
            "targetId": 22
          },
          {
            "type": "ChildOf",
            "targetId": 22
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Absolute Path Traversal",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 37,
        "name": "Path Traversal: '/absolute/pathname/here'",
        "description": "The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 36
          },
          {
            "type": "ChildOf",
            "targetId": 160
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "/absolute/pathname/here",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 38,
        "name": "Path Traversal: '\\absolute\\pathname\\here'",
        "description": "The product accepts input in the form of a backslash absolute path ('\\absolute\\pathname\\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 36
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "\\absolute\\pathname\\here ('backslash absolute path')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 39,
        "name": "Path Traversal: 'C:dirname'",
        "description": "The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 36
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'C:dirname' or C: (Windows volume or 'drive letter')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 40,
        "name": "Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)",
        "description": "The product accepts input that identifies a Windows UNC share ('\\\\UNC\\share\\name') that potentially redirects access to an unintended location or arbitrary file.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 36
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "'\\\\UNC\\share\\name\\' (Windows UNC share)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 41,
        "name": "Improper Resolution of Path Equivalence",
        "description": "The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Path Equivalence",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO02-C",
            "Entry_Name": "Canonicalize path names originating from untrusted sources",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 42,
        "name": "Path Equivalence: 'filename.' (Trailing Dot)",
        "description": "The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 162
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trailing Dot - 'filedir.'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 43,
        "name": "Path Equivalence: 'filename....' (Multiple Trailing Dot)",
        "description": "The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 42
          },
          {
            "type": "ChildOf",
            "targetId": 163
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Trailing Dot - 'filedir....'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 44,
        "name": "Path Equivalence: 'file.name' (Internal Dot)",
        "description": "The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Internal Dot - 'file.ordir'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 45,
        "name": "Path Equivalence: 'file...name' (Multiple Internal Dot)",
        "description": "The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 44
          },
          {
            "type": "ChildOf",
            "targetId": 165
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Internal Dot - 'file...dir'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 46,
        "name": "Path Equivalence: 'filename ' (Trailing Space)",
        "description": "The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 162
          },
          {
            "type": "CanPrecede",
            "targetId": 289
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trailing Space - 'filedir '",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 47,
        "name": "Path Equivalence: ' filename' (Leading Space)",
        "description": "The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Leading Space - ' filedir'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 48,
        "name": "Path Equivalence: 'file name' (Internal Whitespace)",
        "description": "The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "file(SPACE)name (internal space)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 49,
        "name": "Path Equivalence: 'filename/' (Trailing Slash)",
        "description": "The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 162
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "filedir/ (trailing slash, trailing /)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 50,
        "name": "Path Equivalence: '//multiple/leading/slash'",
        "description": "The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 161
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "//multiple/leading/slash ('multiple leading slash')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 51,
        "name": "Path Equivalence: '/multiple//internal/slash'",
        "description": "The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "/multiple//internal/slash ('multiple internal slash')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 52,
        "name": "Path Equivalence: '/multiple/trailing/slash//'",
        "description": "The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 163
          },
          {
            "type": "CanPrecede",
            "targetId": 289
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "/multiple/trailing/slash// ('multiple trailing slash')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 53,
        "name": "Path Equivalence: '\\multiple\\\\internal\\backslash'",
        "description": "The product accepts path input in the form of multiple internal backslash ('\\multiple\\trailing\\\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 165
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "\\multiple\\\\internal\\backslash",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 54,
        "name": "Path Equivalence: 'filedir\\' (Trailing Backslash)",
        "description": "The product accepts path input in the form of trailing backslash ('filedir\\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 162
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "filedir\\ (trailing backslash)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 55,
        "name": "Path Equivalence: '/./' (Single Dot Directory)",
        "description": "The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "/./ (single dot directory)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 56,
        "name": "Path Equivalence: 'filedir*' (Wildcard)",
        "description": "The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          },
          {
            "type": "ChildOf",
            "targetId": 155
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "filedir* (asterisk / wildcard)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 57,
        "name": "Path Equivalence: 'fakedir/../realdir/filename'",
        "description": "The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "dirname/fakechild/../realchild/filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 58,
        "name": "Path Equivalence: Windows 8.3 Filename",
        "description": "The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short \"8.3\" filename.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Windows 8.3 Filename",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 59,
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "ChildOf",
            "targetId": 706
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Link Following",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO02-C",
            "Entry_Name": "Canonicalize path names originating from untrusted sources",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS01-C",
            "Entry_Name": "Check for the existence of links when dealing with files",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO01-PL",
            "Entry_Name": "Do not operate on files that can be modified by untrusted users",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP18",
            "Entry_Name": "Link in resource name resolution",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 61,
        "name": "UNIX Symbolic Link (Symlink) Following",
        "description": "The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "status": "Incomplete",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 59
          },
          {
            "type": "Requires",
            "targetId": 362
          },
          {
            "type": "Requires",
            "targetId": 340
          },
          {
            "type": "Requires",
            "targetId": 386
          },
          {
            "type": "Requires",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "UNIX symbolic link following",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 62,
        "name": "UNIX Hard Link",
        "description": "The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "UNIX hard link",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP18",
            "Entry_Name": "Link in resource name resolution",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 64,
        "name": "Windows Shortcut Following (.LNK)",
        "description": "The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Windows Shortcut Following (.LNK)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP18",
            "Entry_Name": "Link in resource name resolution",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 65,
        "name": "Windows Hard Link",
        "description": "The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Windows hard link",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO05-C",
            "Entry_Name": "Identify files using multiple file attributes",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP18",
            "Entry_Name": "Link in resource name resolution",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 66,
        "name": "Improper Handling of File Names that Identify Virtual Resources",
        "description": "The product does not handle or incorrectly handles a file name that identifies a \"virtual\" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Virtual Files",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 67,
        "name": "Improper Handling of Windows Device Names",
        "description": "The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 66
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Windows MS-DOS device names",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO32-C",
            "Entry_Name": "Do not perform operations on devices that are only appropriate for files",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO00-J",
            "Entry_Name": "Do not operate on files in shared directories",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 69,
        "name": "Improper Handling of Windows ::DATA Alternate Data Stream",
        "description": "The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 66
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Windows ::DATA alternate data stream",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 71,
        "name": "DEPRECATED: Apple '.DS_Store'",
        "description": "This entry has been deprecated as it represents a specific observed example of a UNIX Hard Link weakness type rather than its own individual weakness type. Please refer to CWE-62.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 72,
        "name": "Improper Handling of Apple HFS+ Alternate Data Stream Path",
        "description": "The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 66
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 73,
        "name": "External Control of File Name or Path",
        "description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 642
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "CanPrecede",
            "targetId": 22
          },
          {
            "type": "CanPrecede",
            "targetId": 41
          },
          {
            "type": "CanPrecede",
            "targetId": 98
          },
          {
            "type": "CanPrecede",
            "targetId": 434
          },
          {
            "type": "CanPrecede",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Path Manipulation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP16",
            "Entry_Name": "Path Traversal",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 74,
        "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Injection problem ('data' used as something else)",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 75,
        "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)",
        "description": "The product does not adequately filter user-controlled input for special elements with control implications.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Special Element Injection",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 76,
        "name": "Improper Neutralization of Equivalent Special Elements",
        "description": "The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 75
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Equivalent Special Element Injection",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 77,
        "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Command Injection",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Command injection",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "IDS34-PL",
            "Entry_Name": "Do not pass untrusted, unsanitized data to a command interpreter",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 78,
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "CanAlsoBe",
            "targetId": 88
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "OS Command Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Malicious File Execution",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ENV03-C",
            "Entry_Name": "Sanitize the environment when invoking external programs",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ENV33-C",
            "Entry_Name": "Do not call system()",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR02-C",
            "Entry_Name": "Sanitize data passed to complex subsystems",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "31",
            "Entry_Name": "OS Commanding",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "IDS07-J",
            "Entry_Name": "Do not pass untrusted, unsanitized data to the Runtime.exec() method",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-78",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 79,
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "CanPrecede",
            "targetId": 494
          },
          {
            "type": "PeerOf",
            "targetId": 352
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Cross-site scripting (XSS)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Cross-site Scripting",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Cross-site scripting",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Cross Site Scripting (XSS)",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A4",
            "Entry_Name": "Cross-Site Scripting (XSS) Flaws",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "8",
            "Entry_Name": "Cross-site Scripting",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-79",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 80,
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \" \", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Basic XSS",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 81,
        "name": "Improper Neutralization of Script in an Error Message Web Page",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          },
          {
            "type": "CanAlsoBe",
            "targetId": 209
          },
          {
            "type": "CanAlsoBe",
            "targetId": 390
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "XSS in error pages",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 82,
        "name": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
        "description": "The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 83
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Script in IMG tags",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 83,
        "name": "Improper Neutralization of Script in Attributes in a Web Page",
        "description": "The product does not neutralize or incorrectly neutralizes \"javascript:\" or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "XSS using Script in Attributes",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 84,
        "name": "Improper Neutralization of Encoded URI Schemes in a Web Page",
        "description": "The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "XSS using Script Via Encoded URI Schemes",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 85,
        "name": "Doubled Character XSS Manipulations",
        "description": "The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          },
          {
            "type": "PeerOf",
            "targetId": 675
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "DOUBLE - Doubled character XSS manipulations, e.g. \"<script\"",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 86,
        "name": "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
        "description": "The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          },
          {
            "type": "PeerOf",
            "targetId": 184
          },
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Invalid Characters in Identifiers",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 87,
        "name": "Improper Neutralization of Alternate XSS Syntax",
        "description": "The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 79
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Alternate XSS syntax",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 88,
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "description": "The product constructs a string for a command to be executed by a separate component in another control sphere, but it does not properly delimit the intended arguments, options, or switches within that command string.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 77
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Argument Injection or Modification",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ENV03-C",
            "Entry_Name": "Sanitize the environment when invoking external programs",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ENV33-C",
            "Entry_Name": "Do not call system()",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR02-C",
            "Entry_Name": "Sanitize data passed to complex subsystems",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "30",
            "Entry_Name": "Mail Command Injection",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 89,
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 943
          },
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "SQL injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "SQL Injection",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "SQL injection",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "19",
            "Entry_Name": "SQL Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-89",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "IDS00-J",
            "Entry_Name": "Prevent SQL injection",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          }
        ]
      },
      {
        "id": 90,
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "description": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 943
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "LDAP injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "29",
            "Entry_Name": "LDAP Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 91,
        "name": "XML Injection (aka Blind XPath Injection)",
        "description": "The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "XML injection (aka Blind Xpath injection)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "23",
            "Entry_Name": "XML Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 92,
        "name": "DEPRECATED: Improper Sanitization of Custom Special Characters",
        "description": "This entry has been deprecated. It originally came from PLOVER, which sometimes defined \"other\" and \"miscellaneous\" categories in order to satisfy exhaustiveness requirements for taxonomies. Within the context of CWE, the use of a more abstract entry is preferred in mapping situations. CWE-75 is a more appropriate mapping.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 93,
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "description": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "CanPrecede",
            "targetId": 117
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "CRLF Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "24",
            "Entry_Name": "HTTP Request Splitting",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 94,
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 913
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "CODE",
            "Entry_Name": "Code Evaluation and Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 95,
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 94
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Direct Dynamic Code Evaluation ('Eval Injection')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Malicious File Execution",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Injection Flaws",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "IDS35-PL",
            "Entry_Name": "Do not invoke the eval form with a string argument",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 96,
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 94
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Direct Static Code Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted Input to Command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 97,
        "name": "Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
        "description": "The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 96
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Server-Side Includes (SSI) Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "36",
            "Entry_Name": "SSI Injection",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 98,
        "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "description": "The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "ChildOf",
            "targetId": 829
          },
          {
            "type": "CanPrecede",
            "targetId": 94
          },
          {
            "type": "CanAlsoBe",
            "targetId": 426
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "PHP File Include",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Malicious File Execution",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "5",
            "Entry_Name": "Remote File Inclusion",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 99,
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "description": "The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "PeerOf",
            "targetId": 706
          },
          {
            "type": "CanAlsoBe",
            "targetId": 73
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Resource Injection",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-99",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 102,
        "name": "Struts: Duplicate Validation Forms",
        "description": "The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 694
          },
          {
            "type": "ChildOf",
            "targetId": 1173
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Duplicate Validation Forms",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 103,
        "name": "Struts: Incomplete validate() Method Definition",
        "description": "The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Erroneous validate() Method",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 104,
        "name": "Struts: Form Bean Does Not Extend Validation Class",
        "description": "If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Form Bean Does Not Extend Validation Class",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 105,
        "name": "Struts: Form Field Without Validator",
        "description": "The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Form Field Without Validator",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 106,
        "name": "Struts: Plug-in Framework not in Use",
        "description": "When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Plug-in Framework Not In Use",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 107,
        "name": "Struts: Unused Validation Form",
        "description": "An unused validation form indicates that validation logic is not up-to-date.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1164
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Unused Validation Form",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 108,
        "name": "Struts: Unvalidated Action Form",
        "description": "Every Action Form must have a corresponding validation form.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Unvalidated Action Form",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 109,
        "name": "Struts: Validator Turned Off",
        "description": "Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Validator Turned Off",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 110,
        "name": "Struts: Validator Without Form Field",
        "description": "Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1164
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Struts: Validator Without Form Field",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 111,
        "name": "Direct Use of Unsafe JNI",
        "description": "When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unsafe JNI",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SEC08-J",
            "Entry_Name": "Define wrappers around native methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "JNI01-J",
            "Entry_Name": "Safely invoke standard APIs that perform tasks using the immediate caller's class loader instance (loadLibrary)",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          },
          {
            "Entry_ID": "JNI00-J",
            "Entry_Name": "Define wrappers around native methods",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 112,
        "name": "Missing XML Validation",
        "description": "The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1286
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing XML Validation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 113,
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "description": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 93
          },
          {
            "type": "CanPrecede",
            "targetId": 79
          },
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "HTTP response splitting",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "HTTP Response Splitting",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "25",
            "Entry_Name": "HTTP Response Splitting",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 114,
        "name": "Process Control",
        "description": "Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 73
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Process Control",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 115,
        "name": "Misinterpretation of Input",
        "description": "The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Misinterpretation Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 116,
        "name": "Improper Encoding or Escaping of Output",
        "description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "CanPrecede",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "22",
            "Entry_Name": "Improper Output Handling",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "IDS00-J",
            "Entry_Name": "Sanitize untrusted data passed across a trust boundary",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS05-J",
            "Entry_Name": "Use a subset of ASCII for file and path names",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS00-J",
            "Entry_Name": "Prevent SQL injection",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          },
          {
            "Entry_ID": "IDS33-PL",
            "Entry_Name": "Sanitize untrusted data passed across a trust boundary",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 117,
        "name": "Improper Output Neutralization for Logs",
        "description": "The product constructs a log message from external input, but it does not neutralize or incorrectly neutralizes special elements when the message is written to a log file.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 116
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Log Forging",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "IDS03-J",
            "Entry_Name": "Do not log unsanitized user input",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS03-J",
            "Entry_Name": "Do not log unsanitized user input",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          }
        ]
      },
      {
        "id": 118,
        "name": "Incorrect Access of Indexable Resource ('Range Error')",
        "description": "The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 119,
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
        "status": "Stable",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 118
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "A5",
            "Entry_Name": "Buffer Overflows",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ARR00-C",
            "Entry_Name": "Understand how arrays work",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR30-C",
            "Entry_Name": "Do not form or use out-of-bounds pointers or array subscripts",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Guarantee that library functions do not form invalid pointers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ENV01-C",
            "Entry_Name": "Do not make assumptions about the size of an environment variable",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP39-C",
            "Entry_Name": "Do not access a variable through a pointer of an incompatible type",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO37-C",
            "Entry_Name": "Do not assume character data has been read",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR32-C",
            "Entry_Name": "Do not pass a non-null-terminated character sequence to a library function that expects a string",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "7",
            "Entry_Name": "Buffer Overflow",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 120,
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 787
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 787
          },
          {
            "type": "ChildOf",
            "targetId": 787
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unbounded Transfer ('classic overflow')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Buffer Overflow",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Buffer overflow",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A5",
            "Entry_Name": "Buffer Overflows",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "7",
            "Entry_Name": "Buffer Overflow",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-120",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-120",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 121,
        "name": "Stack-based Buffer Overflow",
        "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 788
          },
          {
            "type": "ChildOf",
            "targetId": 787
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Stack overflow",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Guarantee that library functions do not form invalid pointers",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 122,
        "name": "Heap-based Buffer Overflow",
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 788
          },
          {
            "type": "ChildOf",
            "targetId": 787
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Heap overflow",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 123,
        "name": "Write-what-where Condition",
        "description": "Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 787
          },
          {
            "type": "ChildOf",
            "targetId": 787
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Write-what-where condition",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ARR30-C",
            "Entry_Name": "Do not form or use out-of-bounds pointers or array subscripts",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Guarantee that library functions do not form invalid pointers",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR32-C",
            "Entry_Name": "Do not pass a non-null-terminated character sequence to a library function that expects a string",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 124,
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "description": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 786
          },
          {
            "type": "ChildOf",
            "targetId": 787
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "UNDER - Boundary beginning violation ('buffer underflow'?)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Buffer underwrite",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 125,
        "name": "Out-of-bounds Read",
        "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Out-of-bounds Read",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ARR30-C",
            "Entry_Name": "Do not form or use out-of-bounds pointers or array subscripts",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Guarantee that library functions do not form invalid pointers",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP39-C",
            "Entry_Name": "Do not access a variable through a pointer of an incompatible type",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR32-C",
            "Entry_Name": "Do not pass a non-null-terminated character sequence to a library function that expects a string",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 126,
        "name": "Buffer Over-read",
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 125
          },
          {
            "type": "ChildOf",
            "targetId": 788
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Buffer over-read",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 127,
        "name": "Buffer Under-read",
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 125
          },
          {
            "type": "ChildOf",
            "targetId": 786
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Buffer under-read",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 128,
        "name": "Wrap-around Error",
        "description": "Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          },
          {
            "type": "PeerOf",
            "targetId": 190
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Wrap-around error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MEM07-C",
            "Entry_Name": "Ensure that the arguments to calloc(), when multiplied, can be represented as a size_t",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 129,
        "name": "Improper Validation of Array Index",
        "description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1285
          },
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 823
          },
          {
            "type": "CanPrecede",
            "targetId": 789
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unchecked array indexing",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_Name": "INDEX - Array index overflow",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ARR00-C",
            "Entry_Name": "Understand how arrays work",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR30-C",
            "Entry_Name": "Do not form or use out-of-bounds pointers or array subscripts",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Do not add or subtract an integer to a pointer if the resulting value does not refer to a valid array element",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT32-C",
            "Entry_Name": "Ensure that operations on signed integers do not result in overflow",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "IDS32-PL",
            "Entry_Name": "Validate any integer that is used as an array index",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "ASCSM-CWE-129",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "SFP8",
            "Entry_Name": "Faulty Buffer Access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 130,
        "name": "Improper Handling of Length Parameter Inconsistency",
        "description": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 240
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 805
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Length Parameter Inconsistency",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted Input to Command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 131,
        "name": "Incorrect Calculation of Buffer Size",
        "description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Other length calculation error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "INT30-C",
            "Entry_Name": "Ensure that unsigned integer operations do not wrap",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM35-C",
            "Entry_Name": "Allocate sufficient memory for an object",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 132,
        "name": "DEPRECATED: Miscalculated Null Termination",
        "description": "This entry has been deprecated because it was a duplicate of CWE-170. All content has been transferred to CWE-170.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 134,
        "name": "Use of Externally-Controlled Format String",
        "description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Format string vulnerability",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Format String",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Format string problem",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "FIO30-C",
            "Entry_Name": "Exclude user input from format strings",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO47-C",
            "Entry_Name": "Use valid format strings",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "6",
            "Entry_Name": "Format String",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "IDS06-J",
            "Entry_Name": "Exclude user input from format strings",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS30-PL",
            "Entry_Name": "Exclude user input from format strings",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-134",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 135,
        "name": "Incorrect Calculation of Multi-Byte String Length",
        "description": "The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper string length checking",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "FIO10-J",
            "Entry_Name": "Ensure the array is filled when using read() to fill an array",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP10",
            "Entry_Name": "Incorrect Buffer Length Computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 138,
        "name": "Improper Neutralization of Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Special Elements (Characters or Reserved Words)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Custom Special Character Injection",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 140,
        "name": "Improper Neutralization of Delimiters",
        "description": "The product does not neutralize or incorrectly neutralizes delimiters.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Delimiter Problems",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 141,
        "name": "Improper Neutralization of Parameter/Argument Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Parameter Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 142,
        "name": "Improper Neutralization of Value Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Value Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 143,
        "name": "Improper Neutralization of Record Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Record Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 144,
        "name": "Improper Neutralization of Line Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          },
          {
            "type": "CanAlsoBe",
            "targetId": 93
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Line Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "IDS03-J",
            "Entry_Name": "Do not log unsanitized user input",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 145,
        "name": "Improper Neutralization of Section Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          },
          {
            "type": "CanAlsoBe",
            "targetId": 93
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Section Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 146,
        "name": "Improper Neutralization of Expression/Command Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 140
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Delimiter between Expressions or Commands",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 147,
        "name": "Improper Neutralization of Input Terminators",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Input Terminator",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 148,
        "name": "Improper Neutralization of Input Leaders",
        "description": "The product does not properly handle when a leading character or sequence (\"leader\") is missing or malformed, or if multiple leaders are used when only one should be allowed.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Input Leader",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 149,
        "name": "Improper Neutralization of Quoting Syntax",
        "description": "Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Quoting Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 150,
        "name": "Improper Neutralization of Escape, Meta, or Control Sequences",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Escape, Meta, or Control Character / Sequence",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "IDS03-J",
            "Entry_Name": "Do not log unsanitized user input",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 151,
        "name": "Improper Neutralization of Comment Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Comment Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 152,
        "name": "Improper Neutralization of Macro Symbols",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Macro Symbol",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 153,
        "name": "Improper Neutralization of Substitution Characters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Substitution Character",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 154,
        "name": "Improper Neutralization of Variable Name Delimiters",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Variable Name Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 155,
        "name": "Improper Neutralization of Wildcards or Matching Symbols",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Wildcard or Matching Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 156,
        "name": "Improper Neutralization of Whitespace",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SPEC.WHITESPACE",
            "Entry_Name": "Whitespace",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 157,
        "name": "Failure to Sanitize Paired Delimiters",
        "description": "The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Grouping Element / Paired Delimiter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 158,
        "name": "Improper Neutralization of Null Byte or NUL Character",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Null Character / Null Byte",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "28",
            "Entry_Name": "Null Byte Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 159,
        "name": "Improper Handling of Invalid Use of Special Elements",
        "description": "The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Common Special Element Manipulations",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 160,
        "name": "Improper Neutralization of Leading Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Leading Special Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 161,
        "name": "Improper Neutralization of Multiple Leading Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 160
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Leading Special Elements",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 162,
        "name": "Improper Neutralization of Trailing Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trailing Special Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 163,
        "name": "Improper Neutralization of Multiple Trailing Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 162
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Trailing Special Elements",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 164,
        "name": "Improper Neutralization of Internal Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Internal Special Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 165,
        "name": "Improper Neutralization of Multiple Internal Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 164
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Internal Special Element",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 166,
        "name": "Improper Handling of Missing Special Element",
        "description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 159
          },
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Special Element",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 167,
        "name": "Improper Handling of Additional Special Element",
        "description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 159
          },
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Extra Special Element",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 168,
        "name": "Improper Handling of Inconsistent Special Elements",
        "description": "The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 159
          },
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Inconsistent Special Elements",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 170,
        "name": "Improper Null Termination",
        "description": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "CanPrecede",
            "targetId": 120
          },
          {
            "type": "CanPrecede",
            "targetId": 126
          },
          {
            "type": "CanAlsoBe",
            "targetId": 147
          },
          {
            "type": "PeerOf",
            "targetId": 464
          },
          {
            "type": "PeerOf",
            "targetId": 463
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper Null Termination",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "String Termination Error",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Miscalculated null termination",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "POS30-C",
            "Entry_Name": "Use the readlink() function properly",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR03-C",
            "Entry_Name": "Do not inadvertently truncate a null-terminated byte string",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR32-C",
            "Entry_Name": "Do not pass a non-null-terminated character sequence to a library function that expects a string",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP11",
            "Entry_Name": "Improper Null Termination",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 172,
        "name": "Encoding Error",
        "description": "The product does not properly encode or decode the data, resulting in unexpected values.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "CanPrecede",
            "targetId": 22
          },
          {
            "type": "CanPrecede",
            "targetId": 41
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Encoding Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 173,
        "name": "Improper Handling of Alternate Encoding",
        "description": "The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 172
          },
          {
            "type": "CanPrecede",
            "targetId": 289
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Alternate Encoding",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 174,
        "name": "Double Decoding of the Same Data",
        "description": "The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 172
          },
          {
            "type": "ChildOf",
            "targetId": 675
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Double Encoding",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 175,
        "name": "Improper Handling of Mixed Encoding",
        "description": "The product does not properly handle when the same input uses several different (mixed) encodings.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 172
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Mixed Encoding",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 176,
        "name": "Improper Handling of Unicode Encoding",
        "description": "The product does not properly handle when an input contains Unicode encoding.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 172
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unicode Encoding",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "MSC10-C",
            "Entry_Name": "Character Encoding - UTF8 Related Issues",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 177,
        "name": "Improper Handling of URL Encoding (Hex Encoding)",
        "description": "The product does not properly handle when all or part of an input has been URL encoded.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 172
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "URL Encoding (Hex Encoding)",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 178,
        "name": "Improper Handling of Case Sensitivity",
        "description": "The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "CanPrecede",
            "targetId": 433
          },
          {
            "type": "CanPrecede",
            "targetId": 289
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Case Sensitivity (lowercase, uppercase, mixed case)",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 179,
        "name": "Incorrect Behavior Order: Early Validation",
        "description": "The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "ChildOf",
            "targetId": 696
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Early Validation Errors",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 180,
        "name": "Incorrect Behavior Order: Validate Before Canonicalize",
        "description": "The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 179
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Validate-Before-Canonicalize",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "IDS01-J",
            "Entry_Name": "Normalize strings before validating them",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS01-J",
            "Entry_Name": "Normalize strings before validating them",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          }
        ]
      },
      {
        "id": 181,
        "name": "Incorrect Behavior Order: Validate Before Filter",
        "description": "The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 179
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Validate-Before-Filter",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 182,
        "name": "Collapse of Data into Unsafe Value",
        "description": "The product filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "CanPrecede",
            "targetId": 33
          },
          {
            "type": "CanPrecede",
            "targetId": 34
          },
          {
            "type": "CanPrecede",
            "targetId": 35
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Collapse of Data into Unsafe Value",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "IDS11-J",
            "Entry_Name": "Eliminate noncharacter code points before validation",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 183,
        "name": "Permissive List of Allowed Inputs",
        "description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          },
          {
            "type": "CanPrecede",
            "targetId": 434
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Permissive Whitelist",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 184,
        "name": "Incomplete List of Disallowed Inputs",
        "description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "ChildOf",
            "targetId": 1023
          },
          {
            "type": "CanPrecede",
            "targetId": 79
          },
          {
            "type": "CanPrecede",
            "targetId": 78
          },
          {
            "type": "CanPrecede",
            "targetId": 434
          },
          {
            "type": "CanPrecede",
            "targetId": 98
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incomplete Blacklist",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 185,
        "name": "Incorrect Regular Expression",
        "description": "The product specifies a regular expression in a way that causes data to be improperly matched or compared.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          },
          {
            "type": "CanPrecede",
            "targetId": 187
          },
          {
            "type": "CanPrecede",
            "targetId": 182
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Regular Expression Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 186,
        "name": "Overly Restrictive Regular Expression",
        "description": "A regular expression is overly restrictive, which prevents dangerous values from being detected.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 185
          },
          {
            "type": "CanAlsoBe",
            "targetId": 184
          },
          {
            "type": "CanAlsoBe",
            "targetId": 183
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Overly Restrictive Regular Expression",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 187,
        "name": "Partial String Comparison",
        "description": "The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1023
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Partial Comparison",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 188,
        "name": "Reliance on Data/Memory Layout",
        "description": "The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1105
          },
          {
            "type": "ChildOf",
            "targetId": 435
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Reliance on data layout",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 190,
        "name": "Integer Overflow or Wraparound",
        "description": "The product performs a calculation that can produce an integer overflow or wraparound when the logic assumes that the resulting value will always be larger than the original value. This occurs when an integer value is incremented to a value that is too large to store in the associated representation. When this occurs, the value may become a very small or negative number.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Integer overflow (wrap or wraparound)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Integer Overflow",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Integer overflow",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "INT18-C",
            "Entry_Name": "Evaluate integer expressions in a larger size before comparing or assigning to that size",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT30-C",
            "Entry_Name": "Ensure that unsigned integer operations do not wrap",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT32-C",
            "Entry_Name": "Ensure that operations on signed integers do not result in overflow",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT35-C",
            "Entry_Name": "Evaluate integer expressions in a larger size before comparing or assigning to that size",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM07-C",
            "Entry_Name": "Ensure that the arguments to calloc(), when multiplied, do not wrap",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM35-C",
            "Entry_Name": "Allocate sufficient memory for an object",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "3",
            "Entry_Name": "Integer Overflows",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SR-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 191,
        "name": "Integer Underflow (Wrap or Wraparound)",
        "description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Integer underflow (wrap or wraparound)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "INT30-C",
            "Entry_Name": "Ensure that unsigned integer operations do not wrap",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT32-C",
            "Entry_Name": "Ensure that operations on signed integers do not result in overflow",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 192,
        "name": "Integer Coercion Error",
        "description": "Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 681
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Integer coercion error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "INT02-C",
            "Entry_Name": "Understand integer conversion rules",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT05-C",
            "Entry_Name": "Do not use input functions to convert character data if they cannot handle all possible inputs",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 193,
        "name": "Off-by-one Error",
        "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "CanPrecede",
            "targetId": 617
          },
          {
            "type": "CanPrecede",
            "targetId": 170
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Off-by-one Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 194,
        "name": "Unexpected Sign Extension",
        "description": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Sign extension error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 195,
        "name": "Signed to Unsigned Conversion Error",
        "description": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Signed to unsigned conversion error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 196,
        "name": "Unsigned to Signed Conversion Error",
        "description": "The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "CanAlsoBe",
            "targetId": 124
          },
          {
            "type": "CanAlsoBe",
            "targetId": 120
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unsigned to signed conversion error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 197,
        "name": "Numeric Truncation Error",
        "description": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "ChildOf",
            "targetId": 681
          },
          {
            "type": "CanAlsoBe",
            "targetId": 195
          },
          {
            "type": "CanAlsoBe",
            "targetId": 196
          },
          {
            "type": "CanAlsoBe",
            "targetId": 192
          },
          {
            "type": "CanAlsoBe",
            "targetId": 194
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Numeric truncation error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Truncation error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "FIO34-C",
            "Entry_Name": "Distinguish between characters read from a file and EOF or WEOF",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FLP34-C",
            "Entry_Name": "Ensure that floating point conversions are within range of the new type",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT02-C",
            "Entry_Name": "Understand integer conversion rules",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT05-C",
            "Entry_Name": "Do not use input functions to convert character data if they cannot handle all possible inputs",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "NUM12-J",
            "Entry_Name": "Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 198,
        "name": "Use of Incorrect Byte Ordering",
        "description": "The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 188
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Numeric Byte Ordering Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO12-J",
            "Entry_Name": "Provide methods to read and write little-endian data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 200,
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Information Leak (information disclosure)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Information Leakage and Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "13",
            "Entry_Name": "Information Leakage",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 201,
        "name": "Insertion of Sensitive Information Into Sent Data",
        "description": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "CanAlsoBe",
            "targetId": 209
          },
          {
            "type": "CanAlsoBe",
            "targetId": 202
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Accidental leaking of sensitive information through sent data",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 202,
        "name": "Exposure of Sensitive Information Through Data Queries",
        "description": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1230
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Accidental leaking of sensitive information through data queries",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 203,
        "name": "Observable Discrepancy",
        "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Discrepancy Information Leaks",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Information Leakage and Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 204,
        "name": "Observable Response Discrepancy",
        "description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 203
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Response discrepancy infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 205,
        "name": "Observable Behavioral Discrepancy",
        "description": "The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 203
          },
          {
            "type": "CanPrecede",
            "targetId": 514
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Behavioral Discrepancy Infoleak",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "45",
            "Entry_Name": "Fingerprinting",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 206,
        "name": "Observable Internal Behavioral Discrepancy",
        "description": "The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 205
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Internal behavioral inconsistency infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 207,
        "name": "Observable Behavioral Discrepancy With Equivalent Products",
        "description": "The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 205
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "External behavioral inconsistency infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 208,
        "name": "Observable Timing Discrepancy",
        "description": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 203
          },
          {
            "type": "CanPrecede",
            "targetId": 385
          },
          {
            "type": "CanPrecede",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Timing discrepancy infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 209,
        "name": "Generation of Error Message Containing Sensitive Information",
        "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "System Configuration",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Accidental leaking of sensitive information through error messages",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Information Leakage and Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ERR01-J",
            "Entry_Name": "Do not allow exceptions to expose sensitive information",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 210,
        "name": "Self-generated Error Message Containing Sensitive Information",
        "description": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 209
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Product-Generated Error Message Infoleak",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 211,
        "name": "Externally-Generated Error Message Containing Sensitive Information",
        "description": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 209
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Product-External Error Message Infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 212,
        "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
        "description": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "CanPrecede",
            "targetId": 201
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Cross-Boundary Cleansing Infoleak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 213,
        "name": "Exposure of Sensitive Information Due to Incompatible Policies",
        "description": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Policy",
          "Requirements",
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Intended information leak",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 214,
        "name": "Invocation of Process Using Visible Sensitive Information",
        "description": "A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 497
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Process information infoleak to other processes",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 215,
        "name": "Insertion of Sensitive Information Into Debugging Code",
        "description": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Infoleak Using Debug Information",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A6",
            "Entry_Name": "Information Leakage and Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 216,
        "name": "DEPRECATED: Containment Errors (Container Errors)",
        "description": "This entry has been deprecated, as it was not effective as a weakness and was structured more like a category. In addition, the name is inappropriate, since the \"container\" term is widely understood by developers in different ways than originally intended by PLOVER, the original source for this entry.",
        "status": "Deprecated",
        "abstraction": "Class"
      },
      {
        "id": 217,
        "name": "DEPRECATED: Failure to Protect Stored Data from Modification",
        "description": "This entry has been deprecated because it incorporated and confused multiple weaknesses. The issues formerly covered in this entry can be found at CWE-766 and CWE-767.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 218,
        "name": "DEPRECATED: Failure to provide confidentiality for stored data",
        "description": "This weakness has been deprecated because it was a duplicate of CWE-493. All content has been transferred to CWE-493.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 219,
        "name": "Storage of File with Sensitive Data Under Web Root",
        "description": "The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Sensitive Data Under Web Root",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 220,
        "name": "Storage of File With Sensitive Data Under FTP Root",
        "description": "The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation",
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Sensitive Data Under FTP Root",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 221,
        "name": "Information Loss or Omission",
        "description": "The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Information loss or omission",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 222,
        "name": "Truncation of Security-relevant Information",
        "description": "The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 221
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Truncation of Security-relevant Information",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 223,
        "name": "Omission of Security-relevant Information",
        "description": "The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 221
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Omission of Security-relevant Information",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 224,
        "name": "Obscured Security-relevant Information by Alternate Name",
        "description": "The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 221
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Obscured Security-relevant Information by Alternate Name",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 225,
        "name": "DEPRECATED: General Information Management Problems",
        "description": "This weakness can be found at CWE-199.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 226,
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 459
          },
          {
            "type": "ChildOf",
            "targetId": 212
          },
          {
            "type": "CanPrecede",
            "targetId": 201
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Sensitive Information Uncleared Before Use",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "MEM03-C",
            "Entry_Name": "Clear sensitive information stored in reusable resources returned for reuse",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 228,
        "name": "Improper Handling of Syntactically Invalid Structure",
        "description": "The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 703
          },
          {
            "type": "ChildOf",
            "targetId": 707
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Structure and Validity Problems",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 229,
        "name": "Improper Handling of Values",
        "description": "The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 230,
        "name": "Improper Handling of Missing Values",
        "description": "The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 229
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Value Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ERR08-J",
            "Entry_Name": "Do not catch NullPointerException or any of its ancestors",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 231,
        "name": "Improper Handling of Extra Values",
        "description": "The product does not handle or incorrectly handles when more values are provided than expected.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 229
          },
          {
            "type": "CanPrecede",
            "targetId": 120
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Extra Value Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 232,
        "name": "Improper Handling of Undefined Values",
        "description": "The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 229
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Undefined Value Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ERR08-J",
            "Entry_Name": "Do not catch NullPointerException or any of its ancestors",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 233,
        "name": "Improper Handling of Parameters",
        "description": "The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Parameter Problems",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 234,
        "name": "Failure to Handle Missing Parameter",
        "description": "If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 233
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Parameter Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Missing parameter",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 235,
        "name": "Improper Handling of Extra Parameters",
        "description": "The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 233
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Extra Parameter Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 236,
        "name": "Improper Handling of Undefined Parameters",
        "description": "The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 233
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Undefined Parameter Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 237,
        "name": "Improper Handling of Structural Elements",
        "description": "The product does not handle or incorrectly handles inputs that are related to complex structures.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Element Problems",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 238,
        "name": "Improper Handling of Incomplete Structural Elements",
        "description": "The product does not handle or incorrectly handles when a particular structural element is not completely specified.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 237
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Element Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 239,
        "name": "Failure to Handle Incomplete Element",
        "description": "The product does not properly handle when a particular element is not completely specified.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 237
          },
          {
            "type": "PeerOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incomplete Element",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 240,
        "name": "Improper Handling of Inconsistent Structural Elements",
        "description": "The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 237
          },
          {
            "type": "ChildOf",
            "targetId": 707
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Inconsistent Elements",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 241,
        "name": "Improper Handling of Unexpected Data Type",
        "description": "The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z).",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 228
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Wrong Data Type",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO37-C",
            "Entry_Name": "Do not assume that fgets() or fgetws() returns a nonempty string when successful",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 242,
        "name": "Use of Inherently Dangerous Function",
        "description": "The product calls a function that can never be guaranteed to work safely.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1177
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Dangerous Functions",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "POS33-C",
            "Entry_Name": "Do not use vfork()",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 243,
        "name": "Creation of chroot Jail Without Changing Working Directory",
        "description": "The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 669
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Directory Restriction",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP17",
            "Entry_Name": "Failed chroot jail",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 244,
        "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
        "description": "Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 226
          },
          {
            "type": "CanPrecede",
            "targetId": 669
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Heap Inspection",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "MEM03-C",
            "Entry_Name": "Clear sensitive information stored in reusable resources returned for reuse",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 245,
        "name": "J2EE Bad Practices: Direct Management of Connections",
        "description": "The J2EE application directly manages connections, instead of using the container's connection management facilities.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Bad Practices: getConnection()",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 246,
        "name": "J2EE Bad Practices: Direct Use of Sockets",
        "description": "The J2EE application directly uses sockets instead of using framework method calls.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Bad Practices: Sockets",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 247,
        "name": "DEPRECATED: Reliance on DNS Lookups in a Security Decision",
        "description": "This entry has been deprecated because it was a duplicate of CWE-350. All content has been transferred to CWE-350.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 248,
        "name": "Uncaught Exception",
        "description": "An exception is thrown from a function, but it is not caught.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "ChildOf",
            "targetId": 703
          },
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Often Misused: Exception Handling",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "ERR05-J",
            "Entry_Name": "Do not let checked exceptions escape from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ERR06-J",
            "Entry_Name": "Do not throw undeclared checked exceptions",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP31-PL",
            "Entry_Name": "Do not suppress or ignore exceptions",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 249,
        "name": "DEPRECATED: Often Misused: Path Manipulation",
        "description": "This entry has been deprecated because of name confusion and an accidental combination of multiple weaknesses. Most of its content has been transferred to CWE-785.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 250,
        "name": "Execution with Unnecessary Privileges",
        "description": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          },
          {
            "type": "ChildOf",
            "targetId": 657
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Installation",
          "Architecture and Design",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Often Misused: Privilege Management",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SER09-J",
            "Entry_Name": "Minimize privileges before deserializing from a privilege context",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.05 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.08 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.08 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.05.07 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.09.02 RE(4)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.09.03 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.09.04 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.1 RE 1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CCSC 3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 252,
        "name": "Unchecked Return Value",
        "description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "CanPrecede",
            "targetId": 476
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unchecked Return Value",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Ignored function return value",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ERR33-C",
            "Entry_Name": "Detect and handle standard library errors",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS54-C",
            "Entry_Name": "Detect and handle POSIX library errors",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP00-J",
            "Entry_Name": "Do not ignore values returned by methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP32-PL",
            "Entry_Name": "Do not ignore function return values",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-252-resource",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-252-data",
            "Taxonomy_Name": "OMG ASCRM"
          },
          {
            "Entry_ID": "ASCRM-CWE-252-resource",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 253,
        "name": "Incorrect Check of Function Return Value",
        "description": "The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 754
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Misinterpreted function return value",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ERR33-C",
            "Entry_Name": "Detect and handle standard library errors",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS54-C",
            "Entry_Name": "Detect and handle POSIX library errors",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 256,
        "name": "Plaintext Storage of a Password",
        "description": "Storing a password in plaintext may result in a system compromise.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Password Management",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 257,
        "name": "Storing Passwords in a Recoverable Format",
        "description": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          },
          {
            "type": "PeerOf",
            "targetId": 259
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Storing passwords in a recoverable format",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 258,
        "name": "Empty Password in Configuration File",
        "description": "Using an empty string as a password is insecure.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 260
          },
          {
            "type": "ChildOf",
            "targetId": 521
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Password Management: Empty Password in Configuration File",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 259,
        "name": "Use of Hard-coded Password",
        "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 798
          },
          {
            "type": "ChildOf",
            "targetId": 798
          },
          {
            "type": "ChildOf",
            "targetId": 798
          },
          {
            "type": "PeerOf",
            "targetId": 321
          },
          {
            "type": "PeerOf",
            "targetId": 257
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Password Management: Hard-Coded Password",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Use of hard-coded password",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "MSC03-J",
            "Entry_Name": "Never hard code sensitive information",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP33",
            "Entry_Name": "Hardcoded sensitive data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 260,
        "name": "Password in Configuration File",
        "description": "The product stores a password in a configuration file that might be accessible to actors who do not know the password.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Password Management: Password in Configuration File",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 261,
        "name": "Weak Encoding for Password",
        "description": "Obscuring a password with a trivial encoding does not protect the password.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Password Management: Weak Cryptography",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 262,
        "name": "Not Using Password Aging",
        "description": "The product does not have a mechanism in place for managing password aging.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "PeerOf",
            "targetId": 309
          },
          {
            "type": "PeerOf",
            "targetId": 324
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Not allowing password aging",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 263,
        "name": "Password Aging with Long Expiration",
        "description": "The product supports password aging, but the expiration period is too long.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Allowing password aging",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 266,
        "name": "Incorrect Privilege Assignment",
        "description": "A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          },
          {
            "type": "CanAlsoBe",
            "targetId": 286
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incorrect Privilege Assignment",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SEC00-J",
            "Entry_Name": "Do not allow privileged blocks to leak sensitive information across a trust boundary",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SEC01-J",
            "Entry_Name": "Do not allow tainted variables in privileged blocks",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 267,
        "name": "Privilege Defined With Unsafe Actions",
        "description": "A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unsafe Privilege",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 268,
        "name": "Privilege Chaining",
        "description": "Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Privilege Chaining",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 269,
        "name": "Improper Privilege Management",
        "description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Privilege Management Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.08 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-2",
            "Entry_Name": "Req CR 3.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 270,
        "name": "Privilege Context Switching Error",
        "description": "The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Privilege Context Switching Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 271,
        "name": "Privilege Dropping / Lowering Errors",
        "description": "The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Privilege Dropping / Lowering Errors",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 272,
        "name": "Least Privilege Violation",
        "description": "The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 271
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Least Privilege Violation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Failure to drop privileges when reasonable",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "POS02-C",
            "Entry_Name": "Follow the principle of least privilege",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SEC00-J",
            "Entry_Name": "Do not allow privileged blocks to leak sensitive information across a trust boundary",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SEC01-J",
            "Entry_Name": "Do not allow tainted variables in privileged blocks",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP36",
            "Entry_Name": "Privilege",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 273,
        "name": "Improper Check for Dropped Privileges",
        "description": "The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "ChildOf",
            "targetId": 271
          },
          {
            "type": "PeerOf",
            "targetId": 252
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to check whether privileges were dropped successfully",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "POS37-C",
            "Entry_Name": "Ensure that privilege relinquishment is successful",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 274,
        "name": "Improper Handling of Insufficient Privileges",
        "description": "The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "ChildOf",
            "targetId": 269
          },
          {
            "type": "PeerOf",
            "targetId": 271
          },
          {
            "type": "CanAlsoBe",
            "targetId": 280
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient privileges",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 276,
        "name": "Incorrect Default Permissions",
        "description": "During installation, installed file permissions are set to allow anyone to modify those files.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          },
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Installation",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure Default Permissions",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO06-C",
            "Entry_Name": "Create files with appropriate access permissions",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO01-J",
            "Entry_Name": "Create files with appropriate access permission",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.08",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 277,
        "name": "Insecure Inherited Permissions",
        "description": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure inherited permissions",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 278,
        "name": "Insecure Preserved Inherited Permissions",
        "description": "A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure preserved inherited permissions",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 279,
        "name": "Incorrect Execution-Assigned Permissions",
        "description": "While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure execution-assigned permissions",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO06-C",
            "Entry_Name": "Create files with appropriate access permissions",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO01-J",
            "Entry_Name": "Create files with appropriate access permission",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 280,
        "name": "Improper Handling of Insufficient Permissions or Privileges",
        "description": "The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Fails poorly due to insufficient permissions",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "17",
            "Entry_Name": "Improper Filesystem Permissions",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 281,
        "name": "Improper Preservation of Permissions",
        "description": "The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          },
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Permission preservation failure",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 282,
        "name": "Improper Ownership Management",
        "description": "The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Ownership errors",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 283,
        "name": "Unverified Ownership",
        "description": "The product does not properly verify that a critical resource is owned by the proper entity.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 282
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unverified Ownership",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 284,
        "name": "Improper Access Control",
        "description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
        "status": "Incomplete",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Access Control List (ACL) errors",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "2",
            "Entry_Name": "Insufficient Authorization",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_Name": "Missing Access Control",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 285,
        "name": "Improper Authorization",
        "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Access Control",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Failure to Restrict URL Access",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Broken Access Control",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP35",
            "Entry_Name": "Insecure resource access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 286,
        "name": "Incorrect User Management",
        "description": "The product does not properly manage a user within its environment.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "User management errors",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 287,
        "name": "Improper Authentication",
        "description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "1",
            "Entry_Name": "Insufficient Authentication",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 288,
        "name": "Authentication Bypass Using an Alternate Path or Channel",
        "description": "The product requires authentication, but the product has an alternate path or channel that does not require authentication.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 306
          },
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "PeerOf",
            "targetId": 420
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication Bypass by Alternate Path/Channel",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Failure to Restrict URL Access",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          }
        ]
      },
      {
        "id": 289,
        "name": "Authentication Bypass by Alternate Name",
        "description": "The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication bypass by alternate name",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "IDS01-J",
            "Entry_Name": "Normalize strings before validating them",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "IDS01-J",
            "Entry_Name": "Normalize strings before validating them",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          }
        ]
      },
      {
        "id": 290,
        "name": "Authentication Bypass by Spoofing",
        "description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication bypass by spoofing",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 291,
        "name": "Reliance on IP Address for Authentication",
        "description": "The product uses an IP address for authentication.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 290
          },
          {
            "type": "ChildOf",
            "targetId": 923
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Trusting self-reported IP address",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 292,
        "name": "DEPRECATED: Trusting Self-reported DNS Name",
        "description": "This entry has been deprecated because it was a duplicate of CWE-350. All content has been transferred to CWE-350.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 293,
        "name": "Using Referer Field for Authentication",
        "description": "The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 290
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using referrer field for authentication",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP29",
            "Entry_Name": "Faulty endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 294,
        "name": "Authentication Bypass by Capture-replay",
        "description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication bypass by replay",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Capture-replay",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 295,
        "name": "Improper Certificate Validation",
        "description": "The product does not validate, or incorrectly validates, a certificate.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "PeerOf",
            "targetId": 322
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 296,
        "name": "Improper Following of a Certificate's Chain of Trust",
        "description": "The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 295
          },
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to follow chain of trust in certificate validation",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 297,
        "name": "Improper Validation of Certificate with Host Mismatch",
        "description": "The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          },
          {
            "type": "ChildOf",
            "targetId": 295
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to validate host-specific certificate data",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 298,
        "name": "Improper Validation of Certificate Expiration",
        "description": "A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 295
          },
          {
            "type": "ChildOf",
            "targetId": 672
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to validate certificate expiration",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 299,
        "name": "Improper Check for Certificate Revocation",
        "description": "The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 295
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to check for certificate revocation",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 300,
        "name": "Channel Accessible by Non-Endpoint",
        "description": "The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Man-in-the-middle (MITM)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "32",
            "Entry_Name": "Routing Detour",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SEC06-J",
            "Entry_Name": "Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 301,
        "name": "Reflection Attack in an Authentication Protocol",
        "description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "PeerOf",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Reflection attack in an auth protocol",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          }
        ]
      },
      {
        "id": 302,
        "name": "Authentication Bypass by Assumed-Immutable Data",
        "description": "The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 807
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication Bypass via Assumed-Immutable Data",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SEC02-J",
            "Entry_Name": "Do not base security checks on untrusted sources",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 303,
        "name": "Incorrect Implementation of Authentication Algorithm",
        "description": "The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication Logic Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 304,
        "name": "Missing Critical Step in Authentication",
        "description": "The product implements an authentication technique, but it skips a step that weakens the technique.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 303
          },
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Critical Step in Authentication",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 305,
        "name": "Authentication Bypass by Primary Weakness",
        "description": "The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Authentication Bypass by Primary Weakness",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 306,
        "name": "Missing Authentication for Critical Function",
        "description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Architecture and Design",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "No Authentication for Critical Function",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP31",
            "Entry_Name": "Missing authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SR-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 307,
        "name": "Improper Restriction of Excessive Authentication Attempts",
        "description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "ChildOf",
            "targetId": 799
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "AUTHENT.MULTFAIL",
            "Entry_Name": "Multiple Failed Authentication Attempts not Prevented",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP34",
            "Entry_Name": "Unrestricted authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 308,
        "name": "Use of Single-factor Authentication",
        "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 654
          },
          {
            "type": "PeerOf",
            "targetId": 309
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using single-factor authentication",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 309,
        "name": "Use of Password System for Primary Authentication",
        "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 654
          },
          {
            "type": "PeerOf",
            "targetId": 308
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using password systems",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 311,
        "name": "Missing Encryption of Sensitive Data",
        "description": "The product does not encrypt sensitive or critical information before storage or transmission.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to encrypt data",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Cryptographic Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Insecure Communications",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "4",
            "Entry_Name": "Insufficient Transport Layer Protection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "MSC00-J",
            "Entry_Name": "Use SSLSocket rather than Socket for secure data exchange",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 4.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 312,
        "name": "Cleartext Storage of Sensitive Information",
        "description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 311
          },
          {
            "type": "ChildOf",
            "targetId": 311
          },
          {
            "type": "ChildOf",
            "targetId": 922
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage of Sensitive Information",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 4.1 a)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 313,
        "name": "Cleartext Storage in a File or on Disk",
        "description": "The product stores sensitive information in cleartext in a file, or on disk.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in File or on Disk",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 314,
        "name": "Cleartext Storage in the Registry",
        "description": "The product stores sensitive information in cleartext in the registry.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in Registry",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 315,
        "name": "Cleartext Storage of Sensitive Information in a Cookie",
        "description": "The product stores sensitive information in cleartext in a cookie.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in Cookie",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 316,
        "name": "Cleartext Storage of Sensitive Information in Memory",
        "description": "The product stores sensitive information in cleartext in memory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in Memory",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 317,
        "name": "Cleartext Storage of Sensitive Information in GUI",
        "description": "The product stores sensitive information in cleartext within the GUI.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in GUI",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 318,
        "name": "Cleartext Storage of Sensitive Information in Executable",
        "description": "The product stores sensitive information in cleartext in an executable.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Storage in Executable",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 319,
        "name": "Cleartext Transmission of Sensitive Information",
        "description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 311
          },
          {
            "type": "ChildOf",
            "targetId": 311
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Architecture and Design",
          "Operation",
          "System Configuration"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Plaintext Transmission of Sensitive Information",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SEC06-J",
            "Entry_Name": "Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER02-J",
            "Entry_Name": "Sign then seal sensitive objects before sending them outside a trust boundary",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 4.1B",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 321,
        "name": "Use of Hard-coded Cryptographic Key",
        "description": "The product uses a hard-coded, unchangeable cryptographic key.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 798
          },
          {
            "type": "ChildOf",
            "targetId": 798
          },
          {
            "type": "ChildOf",
            "targetId": 798
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Use of hard-coded cryptographic key",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Cryptographic Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Insecure Communications",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP33",
            "Entry_Name": "Hardcoded sensitive data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.10 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.10 RE(3)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req SR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 322,
        "name": "Key Exchange without Entity Authentication",
        "description": "The product performs a key exchange with an actor without verifying the identity of that actor.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 306
          },
          {
            "type": "CanPrecede",
            "targetId": 923
          },
          {
            "type": "PeerOf",
            "targetId": 295
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Key exchange without entity authentication",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 323,
        "name": "Reusing a Nonce, Key Pair in Encryption",
        "description": "Nonces should be used for the present occasion and only once.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 344
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Reusing a nonce, key pair in encryption",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 324,
        "name": "Use of a Key Past its Expiration Date",
        "description": "The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "PeerOf",
            "targetId": 298
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using a key past its expiration date",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 325,
        "name": "Missing Cryptographic Step",
        "description": "The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "PeerOf",
            "targetId": 358
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Requirements"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Required Cryptographic Step",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Cryptographic Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Insecure Communications",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          }
        ]
      },
      {
        "id": 326,
        "name": "Inadequate Encryption Strength",
        "description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Weak Encryption",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Cryptographic Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Insecure Communications",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 327,
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "description": "The product uses a broken or risky cryptographic algorithm or protocol.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "PeerOf",
            "targetId": 311
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using a broken or risky cryptographic algorithm",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "MSC30-C",
            "Entry_Name": "Do not use the rand() function for generating pseudorandom numbers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC32-C",
            "Entry_Name": "Properly seed pseudorandom number generators",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ASCSM-CWE-327",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 328,
        "name": "Use of Weak Hash",
        "description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 326
          },
          {
            "type": "ChildOf",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Reversible One-Way Hash",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 329,
        "name": "Generation of Predictable IV with CBC Mode",
        "description": "The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1204
          },
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Not using a random IV with CBC mode",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 330,
        "name": "Use of Insufficiently Random Values",
        "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
        "status": "Stable",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "CanPrecede",
            "targetId": 804
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Randomness and Predictability",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Insecure Randomness",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Broken Access Control",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "CON33-C",
            "Entry_Name": "Avoid race conditions when using library functions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC30-C",
            "Entry_Name": "Do not use the rand() function for generating pseudorandom numbers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC32-C",
            "Entry_Name": "Properly seed pseudorandom number generators",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "11",
            "Entry_Name": "Brute Force",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "18",
            "Entry_Name": "Credential/Session Prediction",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 331,
        "name": "Insufficient Entropy",
        "description": "The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          },
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient Entropy",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "11",
            "Entry_Name": "Brute Force",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "MSC32-C",
            "Entry_Name": "Properly seed pseudorandom number generators",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 332,
        "name": "Insufficient Entropy in PRNG",
        "description": "The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 331
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient entropy in PRNG",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 333,
        "name": "Improper Handling of Insufficient Entropy in TRNG",
        "description": "True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 331
          },
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure of TRNG",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 334,
        "name": "Small Space of Random Values",
        "description": "The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Small Space of Random Values",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 335,
        "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
        "description": "The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          },
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "PRNG Seed Error",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 336,
        "name": "Same Seed in Pseudo-Random Number Generator (PRNG)",
        "description": "A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 335
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Same Seed in PRNG",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 337,
        "name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
        "description": "A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 335
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Predictable Seed in PRNG",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "MSC02-J",
            "Entry_Name": "Generate strong random numbers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 338,
        "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
        "description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          },
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Non-cryptographic PRNG",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MSC30-C",
            "Entry_Name": "Do not use the rand() function for generating pseudorandom numbers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 339,
        "name": "Small Seed Space in PRNG",
        "description": "A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 335
          },
          {
            "type": "PeerOf",
            "targetId": 341
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Small Seed Space in PRNG",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 340,
        "name": "Generation of Predictable Numbers or Identifiers",
        "description": "The product uses a scheme that generates numbers or identifiers that are more predictable than required.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          },
          {
            "type": "CanPrecede",
            "targetId": 384
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Predictability problems",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "11",
            "Entry_Name": "Brute Force",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 341,
        "name": "Predictable from Observable State",
        "description": "A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 340
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Predictable from Observable State",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 342,
        "name": "Predictable Exact Value from Previous Values",
        "description": "An exact value or random number can be precisely predicted by observing previous values.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 340
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Predictable Exact Value from Previous Values",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 343,
        "name": "Predictable Value Range from Previous Values",
        "description": "The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 340
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Predictable Value Range from Previous Values",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 344,
        "name": "Use of Invariant Value in Dynamically Changing Context",
        "description": "The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Static Value in Unpredictable Context",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 345,
        "name": "Insufficient Verification of Data Authenticity",
        "description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient Verification of Data",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "12",
            "Entry_Name": "Content Spoofing",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 346,
        "name": "Origin Validation Error",
        "description": "The product does not properly verify that the source of data or communication is valid.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Origin Validation Error",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.12 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SR-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.12 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.1 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 347,
        "name": "Improper Verification of Cryptographic Signature",
        "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Improperly Verified Signature",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SEC06-J",
            "Entry_Name": "Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.9",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-6",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req EDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req NDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req HDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 348,
        "name": "Use of Less Trusted Source",
        "description": "The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Use of Less Trusted Source",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 349,
        "name": "Acceptance of Extraneous Untrusted Data With Trusted Data",
        "description": "The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Untrusted Data Appended with Trusted Data",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ENV01-J",
            "Entry_Name": "Place all security-sensitive code in a single JAR and sign and seal it",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 350,
        "name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
        "description": "The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 290
          },
          {
            "type": "ChildOf",
            "targetId": 807
          },
          {
            "type": "CanPrecede",
            "targetId": 923
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Improperly Trusted Reverse DNS",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Trusting self-reported DNS name",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP29",
            "Entry_Name": "Faulty endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 351,
        "name": "Insufficient Type Distinction",
        "description": "The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "PeerOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient Type Distinction",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 352,
        "name": "Cross-Site Request Forgery (CSRF)",
        "description": "The web application does not, or cannot, sufficiently verify whether a request was intentionally provided by the user who sent the request, which could have originated from an unauthorized actor.",
        "status": "Stable",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "Requires",
            "targetId": 346
          },
          {
            "type": "Requires",
            "targetId": 441
          },
          {
            "type": "Requires",
            "targetId": 642
          },
          {
            "type": "Requires",
            "targetId": 613
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Cross-Site Request Forgery (CSRF)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A5",
            "Entry_Name": "Cross Site Request Forgery (CSRF)",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "9",
            "Entry_Name": "Cross-site Request Forgery",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 353,
        "name": "Missing Support for Integrity Check",
        "description": "The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "PeerOf",
            "targetId": 354
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to add integrity check value",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.03 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.04.02 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.11.06 RE(2)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 354,
        "name": "Improper Validation of Integrity Check Value",
        "description": "The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "PeerOf",
            "targetId": 353
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_Name": "Failure to check integrity check value",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 356,
        "name": "Product UI does not Warn User of Unsafe Actions",
        "description": "The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 221
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Product UI does not warn user of unsafe actions",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 357,
        "name": "Insufficient UI Warning of Dangerous Operations",
        "description": "The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient UI warning of dangerous operations",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 358,
        "name": "Improperly Implemented Security Check for Standard",
        "description": "The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "CanAlsoBe",
            "targetId": 345
          },
          {
            "type": "CanAlsoBe",
            "targetId": 290
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Improperly Implemented Security Check for Standard",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 359,
        "name": "Exposure of Private Personal Information to an Unauthorized Actor",
        "description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Privacy Violation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "FIO13-J",
            "Entry_Name": "Do not log sensitive information outside a trust boundary",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 360,
        "name": "Trust of System Event Data",
        "description": "Security based on event locations are insecure and can be spoofed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Trust of system event data",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP29",
            "Entry_Name": "Faulty endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 362,
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          },
          {
            "type": "CanPrecede",
            "targetId": 416
          },
          {
            "type": "CanPrecede",
            "targetId": 476
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Race Conditions",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "VNA03-J",
            "Entry_Name": "Do not assume that a group of calls to independently atomic methods is atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 363,
        "name": "Race Condition Enabling Link Following",
        "description": "The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 367
          },
          {
            "type": "CanPrecede",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Race condition enabling link following",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "POS35-C",
            "Entry_Name": "Avoid race conditions while checking for the existence of a symbolic link",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP20",
            "Entry_Name": "Race Condition Window",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 364,
        "name": "Signal Handler Race Condition",
        "description": "The product uses a signal handler that introduces a race condition.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          },
          {
            "type": "CanPrecede",
            "targetId": 415
          },
          {
            "type": "CanPrecede",
            "targetId": 416
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Signal handler race condition",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Signal Handling Race Conditions",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Race condition in signal handler",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 365,
        "name": "DEPRECATED: Race Condition in Switch",
        "description": "This entry has been deprecated. There are no documented cases in which a switch's control expression is evaluated more than once.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 366,
        "name": "Race Condition within a Thread",
        "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Race condition within a thread",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "CON32-C",
            "Entry_Name": "Prevent data races when accessing bit-fields from multiple threads",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "CON40-C",
            "Entry_Name": "Do not refer to an atomic variable twice in an expression",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "CON43-C",
            "Entry_Name": "Do not allow data races in multithreaded code",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "VNA02-J",
            "Entry_Name": "Ensure that compound operations on shared variables are atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "VNA03-J",
            "Entry_Name": "Do not assume that a group of calls to independently atomic methods is atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 367,
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          },
          {
            "type": "ChildOf",
            "targetId": 362
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Time-of-check Time-of-use race condition",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "File Access Race Conditions: TOCTOU",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Time of check, time of use race condition",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_Name": "Race condition in switch",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "FIO01-C",
            "Entry_Name": "Be careful using functions that use file names for identification",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP20",
            "Entry_Name": "Race Condition Window",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 368,
        "name": "Context Switching Race Condition",
        "description": "A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          },
          {
            "type": "CanAlsoBe",
            "targetId": 364
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Context Switching Race Condition",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 369,
        "name": "Divide By Zero",
        "description": "The product divides a value by zero.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "FLP03-C",
            "Entry_Name": "Detect and handle floating point errors",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT33-C",
            "Entry_Name": "Ensure that division and remainder operations do not result in divide-by-zero errors",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "NUM02-J",
            "Entry_Name": "Ensure that division and modulo operations do not result in divide-by-zero errors",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 370,
        "name": "Missing Check for Certificate Revocation after Initial Check",
        "description": "The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 299
          },
          {
            "type": "PeerOf",
            "targetId": 296
          },
          {
            "type": "PeerOf",
            "targetId": 297
          },
          {
            "type": "PeerOf",
            "targetId": 298
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Race condition in checking for certificate revocation",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP20",
            "Entry_Name": "Race Condition Window",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 372,
        "name": "Incomplete Internal State Distinction",
        "description": "The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incomplete Internal State Distinction",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 373,
        "name": "DEPRECATED: State Synchronization Error",
        "description": "This entry was deprecated because it overlapped the same concepts as race condition (CWE-362) and Improper Synchronization (CWE-662).",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 374,
        "name": "Passing Mutable Objects to an Untrusted Method",
        "description": "The product sends non-cloned mutable data as an argument to a method or function.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Passing mutable objects to an untrusted method",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ04-J",
            "Entry_Name": "Provide mutable classes with copy functionality to safely allow passing instances to untrusted code",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 375,
        "name": "Returning a Mutable Object to an Untrusted Caller",
        "description": "Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Mutable object returned",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ04-J",
            "Entry_Name": "Provide mutable classes with copy functionality to safely allow passing instances to untrusted code",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "OBJ05-J",
            "Entry_Name": "Defensively copy private mutable class members before returning their references",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP34-PL",
            "Entry_Name": "Do not modify $_ in list or sorting functions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 377,
        "name": "Insecure Temporary File",
        "description": "Creating and using insecure temporary files can leave application and system data vulnerable to attack.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure Temporary File",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "CON33-C",
            "Entry_Name": "Avoid race conditions when using library functions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO00-J",
            "Entry_Name": "Do not operate on files in shared directories",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 378,
        "name": "Creation of Temporary File With Insecure Permissions",
        "description": "Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 377
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper temp file opening",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 379,
        "name": "Creation of Temporary File in Directory with Insecure Permissions",
        "description": "The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 377
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Guessed or visible temporary file",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "FIO15-C",
            "Entry_Name": "Ensure that file operations are performed in a secure directory",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 382,
        "name": "J2EE Bad Practices: Use of System.exit()",
        "description": "A J2EE application uses System.exit(), which also shuts down its container.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Bad Practices: System.exit()",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ERR09-J",
            "Entry_Name": "Do not allow untrusted code to terminate the JVM",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 383,
        "name": "J2EE Bad Practices: Direct Use of Threads",
        "description": "Thread management in a Web application is forbidden in some circumstances and is always highly error prone.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "J2EE Bad Practices: Threads",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 384,
        "name": "Session Fixation",
        "description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
        "status": "Incomplete",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "Requires",
            "targetId": 346
          },
          {
            "type": "Requires",
            "targetId": 472
          },
          {
            "type": "Requires",
            "targetId": 441
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Session Fixation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "37",
            "Entry_Name": "Session Fixation",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 385,
        "name": "Covert Timing Channel",
        "description": "Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 514
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Timing",
            "Taxonomy_Name": "Landwehr"
          },
          {
            "Entry_Name": "Covert Timing Channel",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 386,
        "name": "Symbolic Name not Mapping to Correct Object",
        "description": "A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "PeerOf",
            "targetId": 367
          },
          {
            "type": "PeerOf",
            "targetId": 610
          },
          {
            "type": "PeerOf",
            "targetId": 486
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Symbolic name not mapping to correct object",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 390,
        "name": "Detection of Error Condition Without Action",
        "description": "The product detects a specific error, but takes no actions to handle the error.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "CanPrecede",
            "targetId": 401
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper error handling",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ERR00-J",
            "Entry_Name": "Do not suppress or ignore checked exceptions",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 391,
        "name": "Unchecked Error Condition",
        "description": "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "ChildOf",
            "targetId": 703
          },
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unchecked Return Value",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Empty Catch Block",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Uncaught exception",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "ERR00-C",
            "Entry_Name": "Adopt and implement a consistent and comprehensive error-handling policy",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR33-C",
            "Entry_Name": "Detect and handle standard library errors",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR34-C",
            "Entry_Name": "Detect errors when converting a string to a number",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FLP32-C",
            "Entry_Name": "Prevent or detect domain and range errors in math functions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS54-C",
            "Entry_Name": "Detect and handle POSIX library errors",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP31-PL",
            "Entry_Name": "Do not suppress or ignore exceptions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 392,
        "name": "Missing Report of Error Condition",
        "description": "The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "ChildOf",
            "targetId": 684
          },
          {
            "type": "ChildOf",
            "targetId": 703
          },
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Error Status Code",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "TPS03-J",
            "Entry_Name": "Ensure that tasks executing in a thread pool do not fail silently",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP6",
            "Entry_Name": "Incorrect Exception Behavior",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 393,
        "name": "Return of Wrong Status Code",
        "description": "A function or operation returns an incorrect return value or status code that does not indicate the true result of execution, causing the product to modify its behavior based on the incorrect result.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          },
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Wrong Status Code",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP6",
            "Entry_Name": "Incorrect Exception Behavior",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 394,
        "name": "Unexpected Status Code or Return Value",
        "description": "The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 754
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unexpected Status Code or Return Value",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "EXP00-PL",
            "Entry_Name": "Do not return undef",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 395,
        "name": "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
        "description": "Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Catching NullPointerException",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "ERR08-J",
            "Entry_Name": "Do not catch NullPointerException or any of its ancestors",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 396,
        "name": "Declaration of Catch for Generic Exception",
        "description": "Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "ChildOf",
            "targetId": 221
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Overly-Broad Catch Block",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP5",
            "Entry_Name": "Ambiguous Exception Type",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-396",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-396",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 397,
        "name": "Declaration of Throws for Generic Exception",
        "description": "The product throws or raises an overly broad exceptions that can hide important details and produce inappropriate responses to certain conditions.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 221
          },
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Overly-Broad Throws Declaration",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "ERR07-J",
            "Entry_Name": "Do not throw RuntimeException, Exception, or Throwable",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP5",
            "Entry_Name": "Ambiguous Exception Type",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-397",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-397",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 400,
        "name": "Uncontrolled Resource Consumption",
        "description": "The product does not properly control the allocation and maintenance of a limited resource.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Operation",
          "System Configuration",
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Resource exhaustion (file descriptor, disk space, sockets, ...)",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "10",
            "Entry_Name": "Denial of Service",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "41",
            "Entry_Name": "XML Attribute Blowup",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SER12-J",
            "Entry_Name": "Avoid memory and resource leaks during serialization",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "MSC05-J",
            "Entry_Name": "Do not exhaust heap space",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP13",
            "Entry_Name": "Unrestricted Consumption",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 401,
        "name": "Missing Release of Memory after Effective Lifetime",
        "description": "The product does not sufficiently track and release allocated memory after it has been used, making the memory unavailable for reallocation and reuse.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 772
          },
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Memory leak",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Memory Leak",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Failure to deallocate data",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory when no longer needed",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC04-J",
            "Entry_Name": "Do not leak memory",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to Release Resource",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCPEM-PRF-14",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 402,
        "name": "Transmission of Private Resources into a New Sphere ('Resource Leak')",
        "description": "The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Resource leaks",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 403,
        "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
        "description": "A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 402
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "UNIX file descriptor leak",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Ensure files are properly closed when they are no longer needed",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 404,
        "name": "Improper Resource Shutdown or Release",
        "description": "The product does not release or incorrectly releases a resource before it is made available for re-use.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "PeerOf",
            "targetId": 405
          },
          {
            "type": "CanPrecede",
            "targetId": 619
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper resource shutdown or release",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Unreleased Resource",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory when no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO04-J",
            "Entry_Name": "Release resources when they are no longer needed",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to release resource",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 405,
        "name": "Asymmetric Resource Consumption (Amplification)",
        "description": "The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is \"asymmetric.\"",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Asymmetric resource consumption (amplification)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "41",
            "Entry_Name": "XML Attribute Blowup",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "TPS00-J",
            "Entry_Name": "Use thread pools to enable graceful degradation of service during traffic bursts",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "FIO04-J",
            "Entry_Name": "Release resources when they are no longer needed",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 406,
        "name": "Insufficient Control of Network Message Volume (Network Amplification)",
        "description": "The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "modesOfIntroduction": [
          "Operation",
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Network Amplification",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 407,
        "name": "Inefficient Algorithmic Complexity",
        "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Algorithmic Complexity",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 408,
        "name": "Incorrect Behavior Order: Early Amplification",
        "description": "The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          },
          {
            "type": "ChildOf",
            "targetId": 696
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Early Amplification",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 409,
        "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
        "description": "The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Data Amplification",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "IDS04-J",
            "Entry_Name": "Limit the size of files passed to ZipInputStream",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 410,
        "name": "Insufficient Resource Pool",
        "description": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "CanPrecede",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient Resource Pool",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "TPS00-J",
            "Entry_Name": "Use thread pools to enable graceful degradation of service during traffic bursts",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 412,
        "name": "Unrestricted Externally Accessible Lock",
        "description": "The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          },
          {
            "type": "CanAlsoBe",
            "targetId": 410
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unrestricted Critical Resource Lock",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Deadlock",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "LCK00-J",
            "Entry_Name": "Use private final lock objects to synchronize classes that may interact with untrusted code",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "LCK07-J",
            "Entry_Name": "Avoid deadlock by requesting and releasing locks in the same order",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP22",
            "Entry_Name": "Unrestricted lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 413,
        "name": "Improper Resource Locking",
        "description": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insufficient Resource Locking",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "VNA00-J",
            "Entry_Name": "Ensure visibility when accessing shared primitive variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "VNA02-J",
            "Entry_Name": "Ensure that compound operations on shared variables are atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "LCK00-J",
            "Entry_Name": "Use private final lock objects to synchronize classes that may interact with untrusted code",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 414,
        "name": "Missing Lock Check",
        "description": "A product does not check to see if a lock is present before performing sensitive operations on a resource.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Lock Check",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 415,
        "name": "Double Free",
        "description": "The product calls free() twice on the same memory address.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 825
          },
          {
            "type": "ChildOf",
            "targetId": 1341
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 666
          },
          {
            "type": "PeerOf",
            "targetId": 416
          },
          {
            "type": "PeerOf",
            "targetId": 123
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "DFREE - Double-Free Vulnerability",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Double Free",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Doubly freeing memory",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MEM00-C",
            "Entry_Name": "Allocate and free memory in the same module, at the same level of abstraction",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM01-C",
            "Entry_Name": "Store a new value in pointers immediately after free()",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM30-C",
            "Entry_Name": "Do not access freed memory",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory exactly once",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP12",
            "Entry_Name": "Faulty Memory Release",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 416,
        "name": "Use After Free",
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
        "status": "Stable",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 825
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "CanPrecede",
            "targetId": 120
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_Name": "Use After Free",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Using freed memory",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MEM00-C",
            "Entry_Name": "Allocate and free memory in the same module, at the same level of abstraction",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM01-C",
            "Entry_Name": "Store a new value in pointers immediately after free()",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM30-C",
            "Entry_Name": "Do not access freed memory",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP15",
            "Entry_Name": "Faulty Resource Use",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 419,
        "name": "Unprotected Primary Channel",
        "description": "The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unprotected Primary Channel",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 420,
        "name": "Unprotected Alternate Channel",
        "description": "The product protects a primary channel, but it does not use the same level of protection for an alternate channel.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unprotected Alternate Channel",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 421,
        "name": "Race Condition During Access to Alternate Channel",
        "description": "The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 420
          },
          {
            "type": "ChildOf",
            "targetId": 362
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Alternate Channel Race Condition",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 422,
        "name": "Unprotected Windows Messaging Channel ('Shatter')",
        "description": "The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 420
          },
          {
            "type": "ChildOf",
            "targetId": 360
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unprotected Windows Messaging Channel ('Shatter')",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP30",
            "Entry_Name": "Missing endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 423,
        "name": "DEPRECATED: Proxied Trusted Channel",
        "description": "This entry has been deprecated because it was a duplicate of CWE-441. All content has been transferred to CWE-441.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 424,
        "name": "Improper Protection of Alternate Path",
        "description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "ChildOf",
            "targetId": 638
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Alternate Path Errors",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP35",
            "Entry_Name": "Insecure resource access",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 425,
        "name": "Direct Request ('Forced Browsing')",
        "description": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 862
          },
          {
            "type": "ChildOf",
            "targetId": 862
          },
          {
            "type": "ChildOf",
            "targetId": 288
          },
          {
            "type": "ChildOf",
            "targetId": 424
          },
          {
            "type": "CanPrecede",
            "targetId": 471
          },
          {
            "type": "CanPrecede",
            "targetId": 98
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Direct Request aka 'Forced Browsing'",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Failure to Restrict URL Access",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A2",
            "Entry_Name": "Broken Access Control",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "34",
            "Entry_Name": "Predictable Resource Location",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP30",
            "Entry_Name": "Missing endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 426,
        "name": "Untrusted Search Path",
        "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 642
          },
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 673
          },
          {
            "type": "PeerOf",
            "targetId": 427
          },
          {
            "type": "PeerOf",
            "targetId": 428
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Untrusted Search Path",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Relative path library search",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ENV03-C",
            "Entry_Name": "Sanitize the environment when invoking external programs",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 427,
        "name": "Uncontrolled Search Path Element",
        "description": "The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Uncontrolled Search Path Element",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 428,
        "name": "Unquoted Search Path or Element",
        "description": "The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unquoted Search Path or Element",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 430,
        "name": "Deployment of Wrong Handler",
        "description": "The wrong \"handler\" is assigned to process an object.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          },
          {
            "type": "CanPrecede",
            "targetId": 433
          },
          {
            "type": "PeerOf",
            "targetId": 434
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper Handler Deployment",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 431,
        "name": "Missing Handler",
        "description": "A handler is not available or implemented.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          },
          {
            "type": "CanPrecede",
            "targetId": 433
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Handler",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 432,
        "name": "Dangerous Signal Handler not Disabled During Sensitive Operations",
        "description": "The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 364
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SIG00-C",
            "Entry_Name": "Mask signals handled by noninterruptible signal handlers",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_Name": "Dangerous handler not cleared/disabled during sensitive operations",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 433,
        "name": "Unparsed Raw Web Content Delivery",
        "description": "The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 219
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unparsed Raw Web Content Delivery",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 434,
        "name": "Unrestricted Upload of File with Dangerous Type",
        "description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "PeerOf",
            "targetId": 351
          },
          {
            "type": "PeerOf",
            "targetId": 436
          },
          {
            "type": "PeerOf",
            "targetId": 430
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unrestricted File Upload",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Malicious File Execution",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "ASCSM-CWE-434",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 435,
        "name": "Improper Interaction Between Multiple Correctly-Behaving Entities",
        "description": "An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Interaction Errors",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 436,
        "name": "Interpretation Conflict",
        "description": "Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 435
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Interpretation Error (MIE)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "27",
            "Entry_Name": "HTTP Response Smuggling",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 437,
        "name": "Incomplete Model of Endpoint Features",
        "description": "A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Extra Unhandled Features",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 439,
        "name": "Behavioral Change in New Version or Environment",
        "description": "A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 435
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "CHANGE Behavioral Change",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 440,
        "name": "Expected Behavior Violation",
        "description": "A feature, API, or function does not perform according to its specification.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Expected behavior violation",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 441,
        "name": "Unintended Proxy or Intermediary ('Confused Deputy')",
        "description": "The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "CanPrecede",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unintended proxy/intermediary",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_Name": "Proxied Trusted Channel",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "32",
            "Entry_Name": "Routing Detour",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 443,
        "name": "DEPRECATED: HTTP response splitting",
        "description": "This weakness can be found at CWE-113.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 444,
        "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
        "description": "The product acts as an intermediary HTTP agent (such as a proxy or firewall) in the data flow between two entities such as a client and server, but it does not interpret malformed HTTP requests or responses in ways that are consistent with how the messages will be processed by those entities that are at the ultimate destination.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 436
          },
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "HTTP Request Smuggling",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "26",
            "Entry_Name": "HTTP Request Smuggling",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "27",
            "Entry_Name": "HTTP Response Smuggling",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 446,
        "name": "UI Discrepancy for Security Feature",
        "description": "The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "User interface inconsistency",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 447,
        "name": "Unimplemented or Unsupported Feature in UI",
        "description": "A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 446
          },
          {
            "type": "ChildOf",
            "targetId": 671
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unimplemented or unsupported feature in UI",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 448,
        "name": "Obsolete Feature in UI",
        "description": "A UI function is obsolete and the product does not warn the user.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 446
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Obsolete feature in UI",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 449,
        "name": "The UI Performs the Wrong Action",
        "description": "The UI performs the wrong action with respect to the user's request.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 446
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "The UI performs the wrong action",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 450,
        "name": "Multiple Interpretations of UI Input",
        "description": "The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 357
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Multiple Interpretations of UI Input",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 451,
        "name": "User Interface (UI) Misrepresentation of Critical Information",
        "description": "The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          },
          {
            "type": "ChildOf",
            "targetId": 221
          },
          {
            "type": "PeerOf",
            "targetId": 346
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "UI Misrepresentation of Critical Information",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 453,
        "name": "Insecure Default Variable Initialization",
        "description": "The product, by default, initializes an internal variable with an insecure or less secure value than is possible.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1188
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Insecure default variable initialization",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 454,
        "name": "External Initialization of Trusted Variables or Data Stores",
        "description": "The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1419
          },
          {
            "type": "CanAlsoBe",
            "targetId": 456
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "External initialization of trusted variables or values",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 455,
        "name": "Non-exit on Failed Initialization",
        "description": "The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 636
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Non-exit on Failed Initialization",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 456,
        "name": "Missing Initialization of a Variable",
        "description": "The product does not initialize critical variables, which causes the execution environment to use unexpected values.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 909
          },
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "CanPrecede",
            "targetId": 89
          },
          {
            "type": "CanPrecede",
            "targetId": 120
          },
          {
            "type": "CanPrecede",
            "targetId": 98
          },
          {
            "type": "CanPrecede",
            "targetId": 457
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Missing Initialization",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ERR30-C",
            "Entry_Name": "Set errno to zero before calling a library function known to set errno,  and check errno only after the function returns a value indicating failure",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "DCL04-PL",
            "Entry_Name": "Always initialize local variables",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "DCL33-PL",
            "Entry_Name": "Declare identifiers before using them",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "ASCSM-CWE-456",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-456",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 457,
        "name": "Use of Uninitialized Variable",
        "description": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 908
          },
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 665
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Uninitialized variable",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_Name": "Uninitialized Variable",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "DCL33-PL",
            "Entry_Name": "Declare identifiers before using them",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 458,
        "name": "DEPRECATED: Incorrect Initialization",
        "description": "This weakness has been deprecated because its name and description did not match. The description duplicated CWE-454, while the name suggested a more abstract initialization problem. Please refer to CWE-665 for the more abstract problem.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 459,
        "name": "Incomplete Cleanup",
        "description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incomplete Cleanup",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory when no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO04-J",
            "Entry_Name": "Release resources when they are no longer needed",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "FIO00-J",
            "Entry_Name": "Do not operate on files in shared directories",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to release resource",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 460,
        "name": "Improper Cleanup on Thrown Exception",
        "description": "The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 459
          },
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper cleanup on thrown exception",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ERR03-J",
            "Entry_Name": "Restore prior object state on method failure",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ERR05-J",
            "Entry_Name": "Do not let checked exceptions escape from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP31-PL",
            "Entry_Name": "Do not suppress or ignore exceptions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 462,
        "name": "Duplicate Key in Associative List (Alist)",
        "description": "Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 694
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Duplicate key in associative list (alist)",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ENV02-C",
            "Entry_Name": "Beware of multiple environment variables with the same effective name",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 463,
        "name": "Deletion of Data Structure Sentinel",
        "description": "The accidental deletion of a data-structure sentinel can cause serious programming logic problems.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          },
          {
            "type": "PeerOf",
            "targetId": 464
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Deletion of data-structure sentinel",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 464,
        "name": "Addition of Data Structure Sentinel",
        "description": "The accidental addition of a data-structure sentinel can cause serious programming logic problems.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Addition of data-structure sentinel",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "STR03-C",
            "Entry_Name": "Do not inadvertently truncate a null-terminated byte string",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR06-C",
            "Entry_Name": "Do not assume that strtok() leaves the parse string unchanged",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 466,
        "name": "Return of Pointer Value Outside of Expected Range",
        "description": "A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Illegal Pointer Value",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 467,
        "name": "Use of sizeof() on a Pointer Type",
        "description": "The code calls sizeof() on a pointer type, which can be an incorrect calculation if the programmer intended to determine the size of the data that is being pointed to.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 131
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Use of sizeof() on a pointer type",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ARR01-C",
            "Entry_Name": "Do not apply the sizeof operator to a pointer when taking the size of an array",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM35-C",
            "Entry_Name": "Allocate sufficient memory for an object",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP10",
            "Entry_Name": "Incorrect Buffer Length Computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 468,
        "name": "Incorrect Pointer Scaling",
        "description": "In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unintentional pointer scaling",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ARR39-C",
            "Entry_Name": "Do not add or subtract a scaled integer to a pointer",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP08-C",
            "Entry_Name": "Ensure pointer arithmetic is used correctly",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 469,
        "name": "Use of Pointer Subtraction to Determine Size",
        "description": "The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Improper pointer subtraction",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "ARR36-C",
            "Entry_Name": "Do not subtract or compare two pointers that do not refer to the same array",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP7",
            "Entry_Name": "Faulty Pointer Use",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 470,
        "name": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')",
        "description": "The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Unsafe Reflection",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SEC06-J",
            "Entry_Name": "Do not use reflection to increase accessibility of classes, methods, or fields",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 471,
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "description": "The product does not properly protect an assumed-immutable element from being modified by an attacker.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Modification of Assumed-Immutable Data",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 472,
        "name": "External Control of Assumed-Immutable Web Parameter",
        "description": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 642
          },
          {
            "type": "ChildOf",
            "targetId": 471
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Web Parameter Tampering",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A4",
            "Entry_Name": "Insecure Direct Object Reference",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 473,
        "name": "PHP External Variable Modification",
        "description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 471
          },
          {
            "type": "CanPrecede",
            "targetId": 98
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "PHP External Variable Modification",
            "Taxonomy_Name": "PLOVER"
          }
        ]
      },
      {
        "id": 474,
        "name": "Use of Function with Inconsistent Implementations",
        "description": "The code uses a function that has inconsistent implementations across operating systems and versions.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 758
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Inconsistent Implementations",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 475,
        "name": "Undefined Behavior for Input to API",
        "description": "The behavior of this function is undefined unless its control parameter is set to a specific value.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Undefined Behavior",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 476,
        "name": "NULL Pointer Dereference",
        "description": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          },
          {
            "type": "ChildOf",
            "targetId": 754
          },
          {
            "type": "ChildOf",
            "targetId": 754
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Null Dereference",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Null-pointer dereference",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_Name": "Null Dereference (Null Pointer Dereference)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "EXP34-C",
            "Entry_Name": "Do not dereference null pointers",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP7",
            "Entry_Name": "Faulty Pointer Use",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 477,
        "name": "Use of Obsolete Function",
        "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Obsolete",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "DCL30-PL",
            "Entry_Name": "Do not import deprecated modules",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "EXP30-PL",
            "Entry_Name": "Do not use deprecated or obsolete functions or modules",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 478,
        "name": "Missing Default Case in Multiple Condition Expression",
        "description": "The code does not have a default case in an expression with multiple conditions, such as a switch statement.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1023
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to account for default case in switch",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 479,
        "name": "Signal Handler Use of a Non-reentrant Function",
        "description": "The product defines a signal handler that calls a non-reentrant function.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 828
          },
          {
            "type": "ChildOf",
            "targetId": 663
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Unsafe function call from a signal handler",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SIG30-C",
            "Entry_Name": "Call only asynchronous-safe functions within signal handlers",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SIG34-C",
            "Entry_Name": "Do not call signal() from within interruptible signal handlers",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP01-J",
            "Entry_Name": "Never dereference null pointers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 480,
        "name": "Use of Incorrect Operator",
        "description": "The product accidentally uses the wrong operator, which changes the logic in security-relevant ways.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Using the wrong operator",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "EXP45-C",
            "Entry_Name": "Do not perform assignments in selection statements",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP46-C",
            "Entry_Name": "Do not use a bitwise operator with a Boolean-like operand",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in Computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 481,
        "name": "Assigning instead of Comparing",
        "description": "The code uses an operator for assignment when the intention was to perform a comparison.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 480
          },
          {
            "type": "CanPrecede",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Assigning instead of comparing",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "EXP45-C",
            "Entry_Name": "Do not perform assignments in selection statements",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 482,
        "name": "Comparing instead of Assigning",
        "description": "The code uses an operator for comparison when the intention was to perform an assignment.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 480
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Comparing instead of assigning",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP2",
            "Entry_Name": "Unused Entities",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 483,
        "name": "Incorrect Block Delimitation",
        "description": "The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Incorrect block delimitation",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 484,
        "name": "Omitted Break Statement in Switch",
        "description": "The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          },
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Omitted break statement",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 486,
        "name": "Comparison of Classes by Name",
        "description": "The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1025
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Comparing Classes by Name",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Comparing classes by name",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ09-J",
            "Entry_Name": "Compare classes and not class names",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 487,
        "name": "Reliance on Package-level Scope",
        "description": "Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Relying on package-level scope",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "MET04-J",
            "Entry_Name": "Do not increase the accessibility of overridden or hidden methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 488,
        "name": "Exposure of Data Element to Wrong Session",
        "description": "The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Data Leaking Between Users",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          }
        ]
      },
      {
        "id": 489,
        "name": "Active Debug Code",
        "description": "The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          },
          {
            "type": "CanPrecede",
            "targetId": 215
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Build and Compilation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Leftover Debug Code",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 491,
        "name": "Public cloneable() Method Without Final ('Object Hijack')",
        "description": "A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Mobile Code: Object Hijack",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "OBJ07-J",
            "Entry_Name": "Sensitive classes must not let themselves be copied",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 492,
        "name": "Use of Inner Class Containing Sensitive Data",
        "description": "Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Mobile Code: Use of Inner Class",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Publicizing of private data when using inner classes",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ08-J",
            "Entry_Name": "Do not expose private members of an outer class from within a nested class",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 493,
        "name": "Critical Public Variable Without Final Modifier",
        "description": "The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Mobile Code: Non-Final Public Field",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_Name": "Failure to provide confidentiality for stored data",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ10-J",
            "Entry_Name": "Do not use public static nonfinal variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 494,
        "name": "Download of Code Without Integrity Check",
        "description": "The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "ChildOf",
            "targetId": 669
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Invoking untrusted mobile code",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SEC06-J",
            "Entry_Name": "Do not rely on the default automatic signature verification provided by URLClassLoader and java.util.jar",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP27",
            "Entry_Name": "Tainted input to environment",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 495,
        "name": "Private Data Structure Returned From A Public Method",
        "description": "The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Private Array-Typed Field Returned From A Public Method",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 496,
        "name": "Public Data Assigned to Private Array-Typed Field",
        "description": "Assigning public data to a private array is equivalent to giving public access to the array.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Public Data Assigned to Private Array-Typed Field",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 497,
        "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
        "description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "System Information Leak",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "ERR01-J",
            "Entry_Name": "Do not allow exceptions to expose sensitive information",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 498,
        "name": "Cloneable Class Containing Sensitive Information",
        "description": "The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "CanPrecede",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Information leak through class cloning",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ07-J",
            "Entry_Name": "Sensitive classes must not let themselves be copied",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 499,
        "name": "Serializable Class Containing Sensitive Data",
        "description": "The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "CanPrecede",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Information leak through serialization",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SER03-J",
            "Entry_Name": "Do not serialize unencrypted, sensitive data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER05-J",
            "Entry_Name": "Do not serialize instances of inner classes",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 500,
        "name": "Public Static Field Not Marked Final",
        "description": "An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 493
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Overflow of static internal buffer",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ10-J",
            "Entry_Name": "Do not use public static nonfinal variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 501,
        "name": "Trust Boundary Violation",
        "description": "The product mixes trusted and untrusted data in the same data structure or structured message.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trust Boundary Violation",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 502,
        "name": "Deserialization of Untrusted Data",
        "description": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "PeerOf",
            "targetId": 915
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Deserialization of untrusted data",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SER01-J",
            "Entry_Name": "Do not deviate from the proper signatures of serialization methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER03-J",
            "Entry_Name": "Do not serialize unencrypted, sensitive data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER06-J",
            "Entry_Name": "Make defensive copies of private mutable components during deserialization",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER08-J",
            "Entry_Name": "Do not use the default serialized form for implementation defined invariants",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 506,
        "name": "Embedded Malicious Code",
        "description": "The product contains code that appears to be malicious in nature.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 912
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Bundling",
          "Distribution",
          "Installation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Malicious",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 507,
        "name": "Trojan Horse",
        "description": "The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 506
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trojan Horse",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 508,
        "name": "Non-Replicating Malicious Code",
        "description": "Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 507
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Non-Replicating",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 509,
        "name": "Replicating Malicious Code (Virus or Worm)",
        "description": "Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 507
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Replicating (virus)",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 510,
        "name": "Trapdoor",
        "description": "A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 506
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Trapdoor",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 511,
        "name": "Logic/Time Bomb",
        "description": "The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 506
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Logic/Time Bomb",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 512,
        "name": "Spyware",
        "description": "The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 506
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 514,
        "name": "Covert Channel",
        "description": "A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1229
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Covert Channel",
            "Taxonomy_Name": "Landwehr"
          }
        ]
      },
      {
        "id": 515,
        "name": "Covert Storage Channel",
        "description": "A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 514
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Storage",
            "Taxonomy_Name": "Landwehr"
          },
          {
            "Entry_Name": "Covert storage channel",
            "Taxonomy_Name": "CLASP"
          }
        ]
      },
      {
        "id": 516,
        "name": "DEPRECATED: Covert Timing Channel",
        "description": "This weakness can be found at CWE-385.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 520,
        "name": ".NET Misconfiguration: Use of Impersonation",
        "description": "Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 266
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 521,
        "name": "Weak Password Requirements",
        "description": "The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1391
          },
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 522,
        "name": "Insufficiently Protected Credentials",
        "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A7",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2007"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 523,
        "name": "Unprotected Transport of Credentials",
        "description": "Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          },
          {
            "type": "CanAlsoBe",
            "targetId": 312
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 524,
        "name": "Use of Cache Containing Sensitive Information",
        "description": "The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 525,
        "name": "Use of Web Browser Cache Containing Sensitive Information",
        "description": "The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 524
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A2",
            "Entry_Name": "Broken Access Control",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 526,
        "name": "Cleartext Storage of Sensitive Information in an Environment Variable",
        "description": "The product uses an environment variable to store unencrypted sensitive information.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 312
          },
          {
            "type": "PeerOf",
            "targetId": 214
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 527,
        "name": "Exposure of Version-Control Repository to an Unauthorized Control Sphere",
        "description": "The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ]
      },
      {
        "id": 528,
        "name": "Exposure of Core Dump File to an Unauthorized Control Sphere",
        "description": "The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MEM06-C",
            "Entry_Name": "Ensure that sensitive data is not written out to disk",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 529,
        "name": "Exposure of Access Control List Files to an Unauthorized Control Sphere",
        "description": "The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ]
      },
      {
        "id": 530,
        "name": "Exposure of Backup File to an Unauthorized Control Sphere",
        "description": "A backup file is stored in a directory or archive that is made accessible to unauthorized actors.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ]
      },
      {
        "id": 531,
        "name": "Inclusion of Sensitive Information in Test Code",
        "description": "Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 540
          }
        ],
        "modesOfIntroduction": [
          "Testing"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 532,
        "name": "Insertion of Sensitive Information into Log File",
        "description": "The product writes sensitive information to a log file.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 538
          },
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO13-J",
            "Entry_Name": "Do not log sensitive information outside a trust boundary",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 533,
        "name": "DEPRECATED: Information Exposure Through Server Log Files",
        "description": "This entry has been deprecated because its abstraction was too low-level. See CWE-532.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 534,
        "name": "DEPRECATED: Information Exposure Through Debug Log Files",
        "description": "This entry has been deprecated because its abstraction was too low-level. See CWE-532.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 535,
        "name": "Exposure of Information Through Shell Error Message",
        "description": "A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 211
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 536,
        "name": "Servlet Runtime Error Message Containing Sensitive Information",
        "description": "A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 211
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 537,
        "name": "Java Runtime Error Message Containing Sensitive Information",
        "description": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 211
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 538,
        "name": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
        "description": "The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 539,
        "name": "Use of Persistent Cookies Containing Sensitive Information",
        "description": "The web application uses persistent cookies, but the cookies contain sensitive information.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 540,
        "name": "Inclusion of Sensitive Information in Source Code",
        "description": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 538
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 541,
        "name": "Inclusion of Sensitive Information in an Include File",
        "description": "If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 540
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 542,
        "name": "DEPRECATED: Information Exposure Through Cleanup Log Files",
        "description": "This entry has been deprecated because its abstraction was too low-level. See CWE-532.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 543,
        "name": "Use of Singleton Pattern Without Synchronization in a Multithreaded Context",
        "description": "The product uses the singleton pattern when creating a resource within a multithreaded environment.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 820
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC07-J",
            "Entry_Name": "Prevent multiple instantiations of singleton objects",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 544,
        "name": "Missing Standardized Error Handling Mechanism",
        "description": "The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ERR00-C",
            "Entry_Name": "Adopt and implement a consistent and comprehensive error-handling policy",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 545,
        "name": "DEPRECATED: Use of Dynamic Class Loading",
        "description": "This weakness has been deprecated because it partially overlaps CWE-470, it describes legitimate programmer behavior, and other portions will need to be integrated into other entries.",
        "status": "Deprecated",
        "abstraction": "Variant"
      },
      {
        "id": 546,
        "name": "Suspicious Comment",
        "description": "The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 547,
        "name": "Use of Hard-coded, Security-relevant Constants",
        "description": "The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "DCL06-C",
            "Entry_Name": "Use meaningful symbolic constants to represent literal values in program logic",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 548,
        "name": "Exposure of Information Through Directory Listing",
        "description": "The product inappropriately exposes a directory listing with an index of all the resources located inside of the directory.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 497
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "16",
            "Entry_Name": "Directory Indexing",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 549,
        "name": "Missing Password Field Masking",
        "description": "The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 522
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 550,
        "name": "Server-generated Error Message Containing Sensitive Information",
        "description": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 209
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 551,
        "name": "Incorrect Behavior Order: Authorization Before Parsing and Canonicalization",
        "description": "If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          },
          {
            "type": "ChildOf",
            "targetId": 696
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 552,
        "name": "Files or Directories Accessible to External Parties",
        "description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "ChildOf",
            "targetId": 285
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A10",
            "Entry_Name": "Insecure Configuration Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "FIO15-C",
            "Entry_Name": "Ensure that file operations are performed in a secure directory",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 553,
        "name": "Command Shell in Externally Accessible Directory",
        "description": "A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 552
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 554,
        "name": "ASP.NET Misconfiguration: Not Using Input Validation Framework",
        "description": "The ASP.NET application does not use an input validation framework.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 555,
        "name": "J2EE Misconfiguration: Plaintext Password in Configuration File",
        "description": "The J2EE application stores a plaintext password in a configuration file.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 260
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 556,
        "name": "ASP.NET Misconfiguration: Use of Identity Impersonation",
        "description": "Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 266
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 558,
        "name": "Use of getlogin() in Multithreaded Application",
        "description": "The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 663
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Often Misused: Authentication",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 560,
        "name": "Use of umask() with chmod-style Argument",
        "description": "The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 687
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 561,
        "name": "Dead Code",
        "description": "The product contains dead code, which can never be executed.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1164
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC07-C",
            "Entry_Name": "Detect and remove dead code",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC00-PL",
            "Entry_Name": "Detect and remove dead code",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP2",
            "Entry_Name": "Unused Entities",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCMM-MNT-20",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 562,
        "name": "Return of Stack Variable Address",
        "description": "A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 758
          },
          {
            "type": "CanPrecede",
            "targetId": 672
          },
          {
            "type": "CanPrecede",
            "targetId": 825
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "DCL30-C",
            "Entry_Name": "Declare objects with appropriate storage durations",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS34-C",
            "Entry_Name": "Do not call putenv() with a pointer to an automatic variable as the argument",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 563,
        "name": "Assignment to Variable without Use",
        "description": "The variable's value is assigned but never used, making it a dead store.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1164
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC00-C",
            "Entry_Name": "Compile cleanly at high warning levels",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC01-PL",
            "Entry_Name": "Detect and remove unused variables",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP2",
            "Entry_Name": "Unused Entities",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 564,
        "name": "SQL Injection: Hibernate",
        "description": "Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 89
          },
          {
            "type": "ChildOf",
            "targetId": 89
          },
          {
            "type": "ChildOf",
            "targetId": 89
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 565,
        "name": "Reliance on Cookies without Validation and Integrity Checking",
        "description": "The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 642
          },
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "ChildOf",
            "targetId": 602
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP29",
            "Entry_Name": "Faulty endpoint authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 566,
        "name": "Authorization Bypass Through User-Controlled SQL Primary Key",
        "description": "The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 639
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 567,
        "name": "Unsynchronized Access to Shared Data in a Multithreaded Context",
        "description": "The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 820
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "CanPrecede",
            "targetId": 488
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "VNA00-J",
            "Entry_Name": "Ensure visibility when accessing shared primitive variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "VNA02-J",
            "Entry_Name": "Ensure that compound operations on shared variables are atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 568,
        "name": "finalize() Method Without super.finalize()",
        "description": "The product contains a finalize() method that does not call super.finalize().",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 459
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET12-J",
            "Entry_Name": "Do not use finalizers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 570,
        "name": "Expression is Always False",
        "description": "The product contains an expression that will always evaluate to false.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          },
          {
            "type": "CanPrecede",
            "targetId": 561
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC00-C",
            "Entry_Name": "Compile cleanly at high warning levels",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 571,
        "name": "Expression is Always True",
        "description": "The product contains an expression that will always evaluate to true.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          },
          {
            "type": "CanPrecede",
            "targetId": 561
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC00-C",
            "Entry_Name": "Compile cleanly at high warning levels",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 572,
        "name": "Call to Thread run() instead of start()",
        "description": "The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 821
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "THI00-J",
            "Entry_Name": "Do not invoke Thread.run()",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 573,
        "name": "Improper Following of Specification by Caller",
        "description": "The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET10-J",
            "Entry_Name": "Follow the general contract when implementing the compareTo() method",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 574,
        "name": "EJB Bad Practices: Use of Synchronization Primitives",
        "description": "The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          },
          {
            "type": "ChildOf",
            "targetId": 821
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 575,
        "name": "EJB Bad Practices: Use of AWT Swing",
        "description": "The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 576,
        "name": "EJB Bad Practices: Use of Java I/O",
        "description": "The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 695
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 577,
        "name": "EJB Bad Practices: Use of Sockets",
        "description": "The product violates the Enterprise JavaBeans (EJB) specification by using sockets.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 578,
        "name": "EJB Bad Practices: Use of Class Loader",
        "description": "The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 579,
        "name": "J2EE Bad Practices: Non-serializable Object Stored in Session",
        "description": "The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 580,
        "name": "clone() Method Without super.clone()",
        "description": "The product contains a clone() method that does not call super.clone() to obtain the new object.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 581,
        "name": "Object Model Violation: Just One of Equals and Hashcode Defined",
        "description": "The product does not maintain equal hashcodes for equal objects.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET09-J",
            "Entry_Name": "Classes that define an equals() method must also define a hashCode() method",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 582,
        "name": "Array Declared Public, Final, and Static",
        "description": "The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "OBJ10-J",
            "Entry_Name": "Do not use public static nonfinal variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected Access Points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 583,
        "name": "finalize() Method Declared Public",
        "description": "The product violates secure coding principles for mobile code by declaring a finalize() method public.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET12-J",
            "Entry_Name": "Do not use finalizers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 584,
        "name": "Return Inside Finally Block",
        "description": "The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ERR04-J",
            "Entry_Name": "Do not complete abruptly from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ERR05-J",
            "Entry_Name": "Do not let checked exceptions escape from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP6",
            "Entry_Name": "Incorrect Exception Behavior",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 585,
        "name": "Empty Synchronized Block",
        "description": "The product contains an empty synchronized block.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1071
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP21",
            "Entry_Name": "Multiple locks/unlocks",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 586,
        "name": "Explicit Call to Finalize()",
        "description": "The product makes an explicit call to the finalize() method from outside the finalizer.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET12-J",
            "Entry_Name": "Do not use finalizers",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 587,
        "name": "Assignment of a Fixed Address to a Pointer",
        "description": "The product sets a pointer to a specific address other than NULL or 0.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 344
          },
          {
            "type": "ChildOf",
            "targetId": 758
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "INT36-C",
            "Entry_Name": "Converting a pointer to integer or integer to pointer",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 588,
        "name": "Attempt to Access Child of a Non-structure Pointer",
        "description": "Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 704
          },
          {
            "type": "ChildOf",
            "targetId": 758
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP7",
            "Entry_Name": "Faulty Pointer Use",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 589,
        "name": "Call to Non-ubiquitous API",
        "description": "The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 474
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET02-J",
            "Entry_Name": "Do not use deprecated or obsolete classes or methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER00-J",
            "Entry_Name": "Maintain serialization compatibility during class evolution",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 590,
        "name": "Free of Memory not on the Heap",
        "description": "The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 762
          },
          {
            "type": "CanPrecede",
            "targetId": 123
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MEM34-C",
            "Entry_Name": "Only free memory allocated dynamically",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "WIN30-C",
            "Entry_Name": "Properly pair allocation and deallocation functions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP12",
            "Entry_Name": "Faulty Memory Release",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 591,
        "name": "Sensitive Data Storage in Improperly Locked Memory",
        "description": "The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 413
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A8",
            "Entry_Name": "Insecure Storage",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "MEM06-C",
            "Entry_Name": "Ensure that sensitive data is not written out to disk",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 592,
        "name": "DEPRECATED: Authentication Bypass Issues",
        "description": "This weakness has been deprecated because it covered redundant concepts already described in CWE-287.",
        "status": "Deprecated",
        "abstraction": "Class"
      },
      {
        "id": 593,
        "name": "Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created",
        "description": "The product modifies the SSL context after connection creation has begun.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 666
          },
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 594,
        "name": "J2EE Framework: Saving Unserializable Objects to Disk",
        "description": "When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 595,
        "name": "Comparison of Object References Instead of Object Contents",
        "description": "The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1025
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP02-J",
            "Entry_Name": "Use the two-argument Arrays.equals() method to compare the contents of arrays",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP02-J",
            "Entry_Name": "Use the two-argument Arrays.equals() method to compare the contents of arrays",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP03-J",
            "Entry_Name": "Do not use the equality operators when comparing values of boxed primitives",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 596,
        "name": "DEPRECATED: Incorrect Semantic Object Comparison",
        "description": "This weakness has been deprecated. It was poorly described and difficult to distinguish from other entries. It was also inappropriate to assign a separate ID solely because of domain-specific considerations. Its closest equivalent is CWE-1023.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 597,
        "name": "Use of Wrong Operator in String Comparison",
        "description": "The product uses the wrong operator when comparing a string, such as using \"==\" when the .equals() method should be used instead.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 595
          },
          {
            "type": "ChildOf",
            "targetId": 595
          },
          {
            "type": "ChildOf",
            "targetId": 480
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP03-J",
            "Entry_Name": "Do not use the equality operators when comparing values of boxed primitives",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP03-J",
            "Entry_Name": "Do not use the equality operators when comparing values of boxed primitives",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP35-PL",
            "Entry_Name": "Use the correct operator type for comparing values",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 598,
        "name": "Use of GET Request Method With Sensitive Query Strings",
        "description": "The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 201
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 599,
        "name": "Missing Validation of OpenSSL Certificate",
        "description": "The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 295
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 600,
        "name": "Uncaught Exception in Servlet",
        "description": "The Servlet does not catch all exceptions, which may reveal sensitive debugging information.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 248
          },
          {
            "type": "CanPrecede",
            "targetId": 209
          },
          {
            "type": "PeerOf",
            "targetId": 390
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ERR01-J",
            "Entry_Name": "Do not allow exceptions to expose sensitive information",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 601,
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "description": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 610
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "38",
            "Entry_Name": "URl Redirector Abuse",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 602,
        "name": "Client-Side Enforcement of Server-Side Security",
        "description": "The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "CanPrecede",
            "targetId": 471
          },
          {
            "type": "PeerOf",
            "targetId": 290
          },
          {
            "type": "PeerOf",
            "targetId": 300
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "A1",
            "Entry_Name": "Unvalidated Input",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 603,
        "name": "Use of Client-Side Authentication",
        "description": "A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 602
          },
          {
            "type": "PeerOf",
            "targetId": 300
          },
          {
            "type": "PeerOf",
            "targetId": 656
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 605,
        "name": "Multiple Binds to the Same Port",
        "description": "When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 675
          },
          {
            "type": "ChildOf",
            "targetId": 666
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP32",
            "Entry_Name": "Multiple binds to the same port",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 606,
        "name": "Unchecked Input for Loop Condition",
        "description": "The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1284
          },
          {
            "type": "CanPrecede",
            "targetId": 834
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-606",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 607,
        "name": "Public Static Final Field References Mutable Object",
        "description": "A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 471
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 608,
        "name": "Struts: Non-private Field in ActionForm Class",
        "description": "An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 609,
        "name": "Double-Checked Locking",
        "description": "The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          },
          {
            "type": "CanPrecede",
            "targetId": 367
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "LCK10-J",
            "Entry_Name": "Do not use incorrect forms of the double-checked locking idiom",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 610,
        "name": "Externally Controlled Reference to a Resource in Another Sphere",
        "description": "The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 611,
        "name": "Improper Restriction of XML External Entity Reference",
        "description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "PeerOf",
            "targetId": 441
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "43",
            "Entry_Name": "XML External Entities",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 612,
        "name": "Improper Authorization of Index Containing Sensitive Information",
        "description": "The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1230
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "48",
            "Entry_Name": "Insecure Indexing",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 613,
        "name": "Insufficient Session Expiration",
        "description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "CanPrecede",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "47",
            "Entry_Name": "Insufficient Session Expiration",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 614,
        "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
        "description": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 319
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 615,
        "name": "Inclusion of Sensitive Information in Source Code Comments",
        "description": "While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 540
          },
          {
            "type": "PeerOf",
            "targetId": 546
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 616,
        "name": "Incomplete Identification of Uploaded File Variables (PHP)",
        "description": "The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "PeerOf",
            "targetId": 473
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Incomplete Identification of Uploaded File Variables (PHP)",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "SFP25",
            "Entry_Name": "Tainted input to variable",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 617,
        "name": "Reachable Assertion",
        "description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 670
          },
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MET01-J",
            "Entry_Name": "Never use assertions to validate method arguments",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 618,
        "name": "Exposed Unsafe ActiveX Method",
        "description": "An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 749
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 619,
        "name": "Dangling Database Cursor ('Cursor Injection')",
        "description": "If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor \"dangling.\"",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 402
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 620,
        "name": "Unverified Password Change",
        "description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A3",
            "Entry_Name": "Broken Authentication and Session Management",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP31",
            "Entry_Name": "Missing authentication",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 621,
        "name": "Variable Extraction Error",
        "description": "The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 914
          },
          {
            "type": "CanPrecede",
            "targetId": 471
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 622,
        "name": "Improper Validation of Function Hook Arguments",
        "description": "The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP27",
            "Entry_Name": "Tainted input to environment",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 623,
        "name": "Unsafe ActiveX Control Marked Safe For Scripting",
        "description": "An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 267
          },
          {
            "type": "PeerOf",
            "targetId": 618
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 624,
        "name": "Executable Regular Expression Error",
        "description": "The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 77
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 625,
        "name": "Permissive Regular Expression",
        "description": "The product uses a regular expression that does not sufficiently restrict the set of allowed values.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 185
          },
          {
            "type": "PeerOf",
            "targetId": 187
          },
          {
            "type": "PeerOf",
            "targetId": 184
          },
          {
            "type": "PeerOf",
            "targetId": 183
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "IDS08-J",
            "Entry_Name": "Sanitize untrusted data passed to a regex",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 626,
        "name": "Null Byte Interaction Error (Poison Null Byte)",
        "description": "The product does not properly handle null bytes or NUL characters when passing data between different representations or components.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 147
          },
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 627,
        "name": "Dynamic Variable Evaluation",
        "description": "In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 914
          },
          {
            "type": "PeerOf",
            "targetId": 183
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 628,
        "name": "Function Call with Incorrectly Specified Arguments",
        "description": "The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "DCL10-C",
            "Entry_Name": "Maintain the contract between the writer and caller of variadic functions",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP37-C",
            "Entry_Name": "Call functions with the correct number and type of arguments",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "DCL00-PL",
            "Entry_Name": "Do not use subroutine prototypes",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "EXP33-PL",
            "Entry_Name": "Do not invoke a function in a context for which it is not defined",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 636,
        "name": "Not Failing Securely ('Failing Open')",
        "description": "When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "PeerOf",
            "targetId": 280
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A7",
            "Entry_Name": "Improper Error Handling",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          }
        ]
      },
      {
        "id": 637,
        "name": "Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')",
        "description": "The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 638,
        "name": "Not Using Complete Mediation",
        "description": "The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 862
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP20",
            "Entry_Name": "Race Condition Window",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 639,
        "name": "Authorization Bypass Through User-Controlled Key",
        "description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          },
          {
            "type": "ChildOf",
            "targetId": 863
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 640,
        "name": "Weak Password Recovery Mechanism for Forgotten Password",
        "description": "The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "49",
            "Entry_Name": "Insufficient Password Recovery",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 641,
        "name": "Improper Restriction of Names for Files and Other Resources",
        "description": "The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 99
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 642,
        "name": "External Control of Critical State Data",
        "description": "The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 643,
        "name": "Improper Neutralization of Data within XPath Expressions ('XPath Injection')",
        "description": "The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 943
          },
          {
            "type": "ChildOf",
            "targetId": 91
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "39",
            "Entry_Name": "XPath Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 644,
        "name": "Improper Neutralization of HTTP Headers for Scripting Syntax",
        "description": "The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 116
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 645,
        "name": "Overly Restrictive Account Lockout Mechanism",
        "description": "The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 646,
        "name": "Reliance on File Name or Extension of Externally-Supplied File",
        "description": "The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 647,
        "name": "Use of Non-Canonical URL Paths for Authorization Decisions",
        "description": "The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "IDS02-J",
            "Entry_Name": "Canonicalize path names before validating them",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 648,
        "name": "Incorrect Use of Privileged APIs",
        "description": "The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 269
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "Low"
      },
      {
        "id": 649,
        "name": "Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking",
        "description": "The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 650,
        "name": "Trusting HTTP Permission Methods on the Server Side",
        "description": "The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 436
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 651,
        "name": "Exposure of WSDL File Containing Sensitive Information",
        "description": "The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 538
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 652,
        "name": "Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')",
        "description": "The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 943
          },
          {
            "type": "ChildOf",
            "targetId": 91
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "46",
            "Entry_Name": "XQuery Injection",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 653,
        "name": "Improper Isolation or Compartmentalization",
        "description": "The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 654,
        "name": "Reliance on a Single Factor in a Security Decision",
        "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 655,
        "name": "Insufficient Psychological Acceptability",
        "description": "The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 2-1",
            "Entry_Name": "Req 4.3.3.6",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 656,
        "name": "Reliance on Security Through Obscurity",
        "description": "The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          },
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "CanPrecede",
            "targetId": 259
          },
          {
            "type": "CanPrecede",
            "targetId": 321
          },
          {
            "type": "CanPrecede",
            "targetId": 472
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 657,
        "name": "Violation of Secure Design Principles",
        "description": "The product violates well-established principles for secure design.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 662,
        "name": "Improper Synchronization",
        "description": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "ChildOf",
            "targetId": 691
          },
          {
            "type": "CanPrecede",
            "targetId": 362
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SIG00-C",
            "Entry_Name": "Mask signals handled by noninterruptible signal handlers",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SIG31-C",
            "Entry_Name": "Do not access shared objects in signal handlers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_Name": "State synchronization error",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "VNA03-J",
            "Entry_Name": "Do not assume that a group of calls to independently atomic methods is atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 663,
        "name": "Use of a Non-reentrant Function in a Concurrent Context",
        "description": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 664,
        "name": "Improper Control of a Resource Through its Lifetime",
        "description": "The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.",
        "status": "Draft",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO39-C",
            "Entry_Name": "Do not alternately input and output from a stream without an intervening flush or positioning call",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 665,
        "name": "Improper Initialization",
        "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_Name": "Incorrect initialization",
            "Taxonomy_Name": "PLOVER"
          },
          {
            "Entry_ID": "ARR02-C",
            "Entry_Name": "Explicitly specify array bounds, even if implicitly defined by an initializer",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "DCL00-J",
            "Entry_Name": "Prevent class initialization cycles",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP4",
            "Entry_Name": "Unchecked Status Condition",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 666,
        "name": "Operation on Resource in Wrong Phase of Lifetime",
        "description": "The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO46-C",
            "Entry_Name": "Do not access a closed file",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM30-C",
            "Entry_Name": "Do not access freed memory",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 667,
        "name": "Improper Locking",
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "CON31-C",
            "Entry_Name": "Do not destroy a mutex while it is locked",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS48-C",
            "Entry_Name": "Do not unlock or destroy another POSIX thread's mutex",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "VNA00-J",
            "Entry_Name": "Ensure visibility when accessing shared primitive variables",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "VNA02-J",
            "Entry_Name": "Ensure that compound operations on shared variables are atomic",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "VNA05-J",
            "Entry_Name": "Ensure atomicity when reading and writing 64-bit values",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "LCK06-J",
            "Entry_Name": "Do not use an instance lock to protect shared static data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP19",
            "Entry_Name": "Missing Lock",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-667",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 668,
        "name": "Exposure of Resource to Wrong Sphere",
        "description": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 669,
        "name": "Incorrect Resource Transfer Between Spheres",
        "description": "The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 670,
        "name": "Always-Incorrect Control Flow Implementation",
        "description": "The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 671,
        "name": "Lack of Administrator Control over Security",
        "description": "The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 672,
        "name": "Operation on a Resource after Expiration or Release",
        "description": "The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 666
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP15",
            "Entry_Name": "Faulty Resource Use",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "FIO46-C",
            "Entry_Name": "Do not access a closed file",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM30-C",
            "Entry_Name": "Do not access freed memory",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ASCSM-CWE-672",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 673,
        "name": "External Influence of Sphere Definition",
        "description": "The product does not prevent the definition of control spheres from external actors.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 674,
        "name": "Uncontrolled Recursion",
        "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 834
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "A9",
            "Entry_Name": "Denial of Service",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "OWASP Top Ten 2004"
          },
          {
            "Entry_ID": "SFP13",
            "Entry_Name": "Unrestricted Consumption",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCRM-CWE-674",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 675,
        "name": "Multiple Operations on Resource in Single-Operation Context",
        "description": "The product performs the same operation on a resource two or more times, when the operation should only be applied once.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          },
          {
            "type": "PeerOf",
            "targetId": 586
          },
          {
            "type": "PeerOf",
            "targetId": 102
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 676,
        "name": "Use of Potentially Dangerous Function",
        "description": "The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1177
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_Name": "Dangerous Functions",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "CON33-C",
            "Entry_Name": "Avoid race conditions when using library functions",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ENV33-C",
            "Entry_Name": "Do not call system()",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR07-C",
            "Entry_Name": "Prefer functions that support error checking over equivalent functions that don't",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR34-C",
            "Entry_Name": "Detect errors when converting a string to a number",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO01-C",
            "Entry_Name": "Be careful using functions that use file names for identification",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC30-C",
            "Entry_Name": "Do not use the rand() function for generating pseudorandom numbers",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR31-C",
            "Entry_Name": "Guarantee that storage for strings has sufficient space for character data and the null terminator",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP3",
            "Entry_Name": "Use of an improper API",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 680,
        "name": "Integer Overflow to Buffer Overflow",
        "description": "The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",
        "status": "Draft",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "StartsWith",
            "targetId": 190
          },
          {
            "type": "ChildOf",
            "targetId": 190
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "INT30-C",
            "Entry_Name": "Ensure that unsigned integer operations do not wrap",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT32-C",
            "Entry_Name": "Ensure that operations on signed integers do not result in overflow",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM35-C",
            "Entry_Name": "Allocate sufficient memory for an object",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 681,
        "name": "Incorrect Conversion between Numeric Types",
        "description": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 704
          },
          {
            "type": "ChildOf",
            "targetId": 704
          },
          {
            "type": "CanPrecede",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "FLP34-C",
            "Entry_Name": "Ensure that floating point conversions are within range of the new type",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT15-C",
            "Entry_Name": "Use intmax_t or uintmax_t for formatted IO on programmer-defined integer types",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT35-C",
            "Entry_Name": "Evaluate integer expressions in a larger size before comparing or assigning to that size",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "NUM12-J",
            "Entry_Name": "Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCSM-CWE-681",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 682,
        "name": "Incorrect Calculation",
        "description": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
        "status": "Draft",
        "abstraction": "Pillar",
        "relationships": [
          {
            "type": "CanPrecede",
            "targetId": 170
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "FLP32-C",
            "Entry_Name": "Prevent or detect domain and range errors in math functions",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT07-C",
            "Entry_Name": "Use only explicitly signed or unsigned char type for numeric values",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT13-C",
            "Entry_Name": "Use bitwise operators only on unsigned operands",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT33-C",
            "Entry_Name": "Ensure that division and remainder operations do not result in divide-by-zero errors",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT34-C",
            "Entry_Name": "Do not shift an expression by a negative number of bits or by greater than or equal  to the number of bits that exist in the operand",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 683,
        "name": "Function Call With Incorrect Order of Arguments",
        "description": "The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 628
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 684,
        "name": "Incorrect Provision of Specified Functionality",
        "description": "The code does not function according to its published specifications, potentially leading to incorrect usage.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "PRE09-C",
            "Entry_Name": "Do not replace secure functions with less secure functions",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 685,
        "name": "Function Call With Incorrect Number of Arguments",
        "description": "The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 628
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "EXP37-C",
            "Entry_Name": "Call functions with the correct number and type of arguments",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO47-C",
            "Entry_Name": "Use valid format strings",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 686,
        "name": "Function Call With Incorrect Argument Type",
        "description": "The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 628
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP37-C",
            "Entry_Name": "Call functions with the correct number and type of arguments",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO47-C",
            "Entry_Name": "Use valid format strings",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "POS34-C",
            "Entry_Name": "Do not call putenv() with a pointer to an automatic variable as the argument",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR37-C",
            "Entry_Name": "Arguments to character handling functions must be representable as an unsigned char",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 687,
        "name": "Function Call With Incorrectly Specified Argument Value",
        "description": "The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 628
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "MEM04-C",
            "Entry_Name": "Do not perform zero length allocations",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP24",
            "Entry_Name": "Tainted input to command",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 688,
        "name": "Function Call With Incorrect Variable or Reference as Argument",
        "description": "The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 628
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 689,
        "name": "Permission Race Condition During Resource Copy",
        "description": "The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.",
        "status": "Draft",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          },
          {
            "type": "Requires",
            "targetId": 362
          },
          {
            "type": "Requires",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 690,
        "name": "Unchecked Return Value to NULL Pointer Dereference",
        "description": "The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.",
        "status": "Draft",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "StartsWith",
            "targetId": 252
          },
          {
            "type": "ChildOf",
            "targetId": 252
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP34-C",
            "Entry_Name": "Do not dereference null pointers",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR08-J",
            "Entry_Name": "Do not catch NullPointerException or any of its ancestors",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP32-PL",
            "Entry_Name": "Do not ignore function return values",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 691,
        "name": "Insufficient Control Flow Management",
        "description": "The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.",
        "status": "Draft",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "40",
            "Entry_Name": "Insufficient Process Validation",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 692,
        "name": "Incomplete Denylist to Cross-Site Scripting",
        "description": "The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.",
        "status": "Draft",
        "abstraction": "Compound",
        "relationships": [
          {
            "type": "StartsWith",
            "targetId": 184
          },
          {
            "type": "ChildOf",
            "targetId": 184
          }
        ]
      },
      {
        "id": 693,
        "name": "Protection Mechanism Failure",
        "description": "The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
        "status": "Draft",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 694,
        "name": "Use of Multiple Resources with Duplicate Identifier",
        "description": "The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 99
          },
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 695,
        "name": "Use of Low-Level Functionality",
        "description": "The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 573
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 696,
        "name": "Incorrect Behavior Order",
        "description": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "POS36-C",
            "Entry_Name": "Observe correct revocation order while relinquishing privileges",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 697,
        "name": "Incorrect Comparison",
        "description": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
        "status": "Incomplete",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 698,
        "name": "Execution After Redirect (EAR)",
        "description": "The web application sends a redirect to another location, but instead of exiting, it executes additional code.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 705
          },
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 703,
        "name": "Improper Check or Handling of Exceptional Conditions",
        "description": "The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.",
        "status": "Incomplete",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ERR06-J",
            "Entry_Name": "Do not throw undeclared checked exceptions",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 704,
        "name": "Incorrect Type Conversion or Cast",
        "description": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP05-C",
            "Entry_Name": "Do not cast away a const qualification",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP39-C",
            "Entry_Name": "Do not access a variable through a pointer of an incompatible type",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT31-C",
            "Entry_Name": "Ensure that integer conversions do not result in lost or misinterpreted data",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT36-C",
            "Entry_Name": "Converting a pointer to integer or integer to pointer",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR34-C",
            "Entry_Name": "Cast characters to unsigned types before converting to larger integer sizes",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "STR37-C",
            "Entry_Name": "Arguments to character handling functions must be representable as an unsigned char",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCRM-CWE-704",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 705,
        "name": "Incorrect Control Flow Scoping",
        "description": "The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ENV32-C",
            "Entry_Name": "All exit handlers must return normally",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR04-C",
            "Entry_Name": "Choose an appropriate termination strategy",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "THI05-J",
            "Entry_Name": "Do not use Thread.stop() to terminate threads",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ERR04-J",
            "Entry_Name": "Do not complete abruptly from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ERR05-J",
            "Entry_Name": "Do not let checked exceptions escape from a finally block",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "EXP31-PL",
            "Entry_Name": "Do not suppress or ignore exceptions",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 706,
        "name": "Use of Incorrectly-Resolved Name or Reference",
        "description": "The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "PeerOf",
            "targetId": 99
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 707,
        "name": "Improper Neutralization",
        "description": "The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 708,
        "name": "Incorrect Ownership Assignment",
        "description": "The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 282
          },
          {
            "type": "CanAlsoBe",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 710,
        "name": "Improper Adherence to Coding Standards",
        "description": "The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.",
        "status": "Incomplete",
        "abstraction": "Pillar",
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 732,
        "name": "Incorrect Permission Assignment for Critical Resource",
        "description": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          },
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Installation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO03-J",
            "Entry_Name": "Create files with appropriate access permission",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SEC01-J",
            "Entry_Name": "Do not allow tainted variables in privileged blocks",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ENV03-J",
            "Entry_Name": "Do not grant dangerous combinations of permissions",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "FIO06-C",
            "Entry_Name": "Create files with appropriate access permissions",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 733,
        "name": "Compiler Optimization Removal or Modification of Security-critical Code",
        "description": "The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1038
          }
        ]
      },
      {
        "id": 749,
        "name": "Exposed Dangerous Method or Function",
        "description": "The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low"
      },
      {
        "id": 754,
        "name": "Improper Check for Unusual or Exceptional Conditions",
        "description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 703
          },
          {
            "type": "CanPrecede",
            "targetId": 416
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP31-PL",
            "Entry_Name": "Do not suppress or ignore exceptions",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.7",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 755,
        "name": "Improper Handling of Exceptional Conditions",
        "description": "The product does not handle or incorrectly handles an exceptional condition.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 756,
        "name": "Missing Custom Error Page",
        "description": "The product does not return custom error pages to the user, possibly exposing sensitive information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 755
          },
          {
            "type": "CanPrecede",
            "targetId": 209
          }
        ]
      },
      {
        "id": 757,
        "name": "Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')",
        "description": "A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 758,
        "name": "Reliance on Undefined, Unspecified, or Implementation-Defined Behavior",
        "description": "The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ARR32-C",
            "Entry_Name": "Ensure size arguments for variable length arrays are in a valid range",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ERR34-C",
            "Entry_Name": "Detect errors when converting a string to a number",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP30-C",
            "Entry_Name": "Do not depend on the order of evaluation for side effects",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP33-C",
            "Entry_Name": "Do not read uninitialized memory",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "FIO46-C",
            "Entry_Name": "Do not access a closed file",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT34-C",
            "Entry_Name": "Do not shift an expression by a negative number of bits or by greater than or equal  to the number of bits that exist in the operand",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "INT36-C",
            "Entry_Name": "Converting a pointer to integer or integer to pointer",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM30-C",
            "Entry_Name": "Do not access freed memory",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC14-C",
            "Entry_Name": "Do not introduce unnecessary platform dependencies",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC15-C",
            "Entry_Name": "Do not depend on undefined behavior",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MSC37-C",
            "Entry_Name": "Ensure that control never reaches the end of a non-void function",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 759,
        "name": "Use of a One-Way Hash without a Salt",
        "description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 916
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 760,
        "name": "Use of a One-Way Hash with a Predictable Salt",
        "description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 916
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 761,
        "name": "Free of Pointer not at Start of Buffer",
        "description": "The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 763
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP12",
            "Entry_Name": "Faulty Memory Release",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 762,
        "name": "Mismatched Memory Management Routines",
        "description": "The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 763
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "WIN30-C",
            "Entry_Name": "Properly pair allocation and deallocation functions",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP12",
            "Entry_Name": "Faulty Memory Release",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 763,
        "name": "Release of Invalid Pointer or Reference",
        "description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP12",
            "Entry_Name": "Faulty Memory Release",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 764,
        "name": "Multiple Locks of a Critical Resource",
        "description": "The product locks a critical resource more times than intended, leading to an unexpected state in the system.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          },
          {
            "type": "ChildOf",
            "targetId": 675
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP21",
            "Entry_Name": "Multiple locks/unlocks",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 765,
        "name": "Multiple Unlocks of a Critical Resource",
        "description": "The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          },
          {
            "type": "ChildOf",
            "targetId": 675
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP21",
            "Entry_Name": "Multiple locks/unlocks",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 766,
        "name": "Critical Data Element Declared Public",
        "description": "The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          },
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to protect stored data from modification",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "OBJ01-J",
            "Entry_Name": "Declare data members as private and provide accessible wrapper methods",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SFP28",
            "Entry_Name": "Unexpected access points",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "ASCMM-MNT-15",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 767,
        "name": "Access to Critical Private Variable via Public Method",
        "description": "The product defines a public method that reads or modifies a private variable.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to protect stored data from modification",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP23",
            "Entry_Name": "Exposed Data",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "OOP31-PL",
            "Entry_Name": "Do not access private variables or subroutines in other packages",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 768,
        "name": "Incorrect Short Circuit Evaluation",
        "description": "The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_Name": "Failure to protect stored data from modification",
            "Taxonomy_Name": "CLASP"
          },
          {
            "Entry_ID": "SFP1",
            "Entry_Name": "Glitch in computation",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 769,
        "name": "DEPRECATED: Uncontrolled File Descriptor Consumption",
        "description": "This entry has been deprecated because it was a duplicate of CWE-774. All content has been transferred to CWE-774.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 770,
        "name": "Allocation of Resources Without Limits or Throttling",
        "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          },
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation",
          "System Configuration"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO04-J",
            "Entry_Name": "Close resources when they are no longer needed",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "SER12-J",
            "Entry_Name": "Avoid memory and resource leaks during serialization",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "MSC05-J",
            "Entry_Name": "Do not exhaust heap space",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.7",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.7",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 771,
        "name": "Missing Reference to Active Allocated Resource",
        "description": "The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory when no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to Release Resource",
            "Taxonomy_Name": "Software Fault Patterns"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 772,
        "name": "Missing Release of Resource after Effective Lifetime",
        "description": "The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "MEM31-C",
            "Entry_Name": "Free dynamically allocated memory when no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "ASCSM-CWE-772",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "ASCRM-CWE-772",
            "Taxonomy_Name": "OMG ASCRM"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to Release Resource",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 773,
        "name": "Missing Reference to Active File Descriptor or Handle",
        "description": "The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 771
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to Release Resource",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 774,
        "name": "Allocation of File Descriptors or Handles Without Limits or Throttling",
        "description": "The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 770
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "SFP13",
            "Entry_Name": "Unrestricted Consumption",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 775,
        "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
        "description": "The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 772
          },
          {
            "type": "ChildOf",
            "targetId": 404
          },
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO42-C",
            "Entry_Name": "Close files when they are no longer needed",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "SFP14",
            "Entry_Name": "Failure to Release Resource",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 776,
        "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "description": "The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 674
          },
          {
            "type": "ChildOf",
            "targetId": 674
          },
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "44",
            "Entry_Name": "XML Entity Expansion",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 777,
        "name": "Regular Expression without Anchors",
        "description": "The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 625
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 778,
        "name": "Insufficient Logging",
        "description": "When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 223
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 779,
        "name": "Logging of Excessive Data",
        "description": "The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 780,
        "name": "Use of RSA Algorithm without OAEP",
        "description": "The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 781,
        "name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
        "description": "The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1285
          },
          {
            "type": "CanPrecede",
            "targetId": 822
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 782,
        "name": "Exposed IOCTL with Insufficient Access Control",
        "description": "The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 749
          },
          {
            "type": "CanPrecede",
            "targetId": 781
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 783,
        "name": "Operator Precedence Logic Error",
        "description": "The product uses an expression in which operator precedence causes incorrect logic to be used.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 670
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Low",
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP00-C",
            "Entry_Name": "Use parentheses for precedence of operation",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "EXP04-PL",
            "Entry_Name": "Do not mix the early-precedence logical operators with late-precedence logical operators",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          }
        ]
      },
      {
        "id": 784,
        "name": "Reliance on Cookies without Validation and Integrity Checking in a Security Decision",
        "description": "The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 807
          },
          {
            "type": "ChildOf",
            "targetId": 565
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 785,
        "name": "Use of Path Manipulation Function without Maximum-sized Buffer",
        "description": "The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 676
          },
          {
            "type": "ChildOf",
            "targetId": 120
          },
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_Name": "Often Misused: File System",
            "Taxonomy_Name": "7 Pernicious Kingdoms"
          },
          {
            "Entry_ID": "SFP9",
            "Entry_Name": "Faulty String Expansion",
            "Taxonomy_Name": "Software Fault Patterns"
          }
        ]
      },
      {
        "id": 786,
        "name": "Access of Memory Location Before Start of Buffer",
        "description": "The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ARR30-C",
            "Entry_Name": "Do not form or use out-of-bounds pointers or array subscripts",
            "Mapping_Fit": "CWE More Specific",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 787,
        "name": "Out-of-bounds Write",
        "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 3.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 788,
        "name": "Access of Memory Location After End of Buffer",
        "description": "The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-CWE-788",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 789,
        "name": "Memory Allocation with Excessive Size Value",
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 770
          },
          {
            "type": "CanPrecede",
            "targetId": 476
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "35",
            "Entry_Name": "SOAP Array Abuse",
            "Taxonomy_Name": "WASC"
          },
          {
            "Entry_ID": "MEM35-C",
            "Entry_Name": "Allocate sufficient memory for an object",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          },
          {
            "Entry_ID": "IDS32-PL",
            "Entry_Name": "Validate any integer that is used as an array index",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "SEI CERT Perl Coding Standard"
          },
          {
            "Entry_ID": "ASCSM-CWE-789",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 790,
        "name": "Improper Filtering of Special Elements",
        "description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 138
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 791,
        "name": "Incomplete Filtering of Special Elements",
        "description": "The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 790
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 792,
        "name": "Incomplete Filtering of One or More Instances of Special Elements",
        "description": "The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 791
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 793,
        "name": "Only Filtering One Instance of a Special Element",
        "description": "The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 792
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 794,
        "name": "Incomplete Filtering of Multiple Instances of Special Elements",
        "description": "The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 792
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 795,
        "name": "Only Filtering Special Elements at a Specified Location",
        "description": "The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 791
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 796,
        "name": "Only Filtering Special Elements Relative to a Marker",
        "description": "The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. \"at the beginning/end of a string; the second argument\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 795
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 797,
        "name": "Only Filtering Special Elements at an Absolute Position",
        "description": "The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. \"byte number 10\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 795
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 798,
        "name": "Use of Hard-coded Credentials",
        "description": "The product contains hard-coded credentials, such as a password or cryptographic key.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1391
          },
          {
            "type": "ChildOf",
            "targetId": 287
          },
          {
            "type": "ChildOf",
            "targetId": 344
          },
          {
            "type": "ChildOf",
            "targetId": 671
          },
          {
            "type": "PeerOf",
            "targetId": 257
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "MSC03-J",
            "Entry_Name": "Never hard code sensitive information",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          },
          {
            "Entry_ID": "ASCSM-CWE-798",
            "Taxonomy_Name": "OMG ASCSM"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 799,
        "name": "Improper Control of Interaction Frequency",
        "description": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "21",
            "Entry_Name": "Insufficient Anti-Automation",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 804,
        "name": "Guessable CAPTCHA",
        "description": "The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          },
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "21",
            "Entry_Name": "Insufficient Anti-Automation",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 805,
        "name": "Buffer Access with Incorrect Length Value",
        "description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "ARR38-C",
            "Entry_Name": "Guarantee that library functions do not form invalid pointers",
            "Mapping_Fit": "Imprecise",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 806,
        "name": "Buffer Access Using Size of Source Buffer",
        "description": "The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 805
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 807,
        "name": "Reliance on Untrusted Inputs in a Security Decision",
        "description": "The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "SEC09-J",
            "Entry_Name": "Do not base security checks on untrusted sources",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 820,
        "name": "Missing Synchronization",
        "description": "The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "LCK05-J",
            "Entry_Name": "Synchronize access to static fields that can be modified by untrusted code",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 821,
        "name": "Incorrect Synchronization",
        "description": "The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ]
      },
      {
        "id": 822,
        "name": "Untrusted Pointer Dereference",
        "description": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 125
          },
          {
            "type": "CanPrecede",
            "targetId": 787
          }
        ]
      },
      {
        "id": 823,
        "name": "Use of Out-of-range Pointer Offset",
        "description": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 125
          },
          {
            "type": "CanPrecede",
            "targetId": 787
          }
        ]
      },
      {
        "id": 824,
        "name": "Access of Uninitialized Pointer",
        "description": "The product accesses or uses a pointer that has not been initialized.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 125
          },
          {
            "type": "CanPrecede",
            "targetId": 787
          }
        ]
      },
      {
        "id": 825,
        "name": "Expired Pointer Dereference",
        "description": "The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 119
          },
          {
            "type": "ChildOf",
            "targetId": 672
          },
          {
            "type": "CanPrecede",
            "targetId": 125
          },
          {
            "type": "CanPrecede",
            "targetId": 787
          }
        ]
      },
      {
        "id": 826,
        "name": "Premature Release of Resource During Expected Lifetime",
        "description": "The product releases a resource that is still intended to be used by itself or another actor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 666
          },
          {
            "type": "CanPrecede",
            "targetId": 672
          }
        ]
      },
      {
        "id": 827,
        "name": "Improper Control of Document Type Definition",
        "description": "The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 706
          },
          {
            "type": "ChildOf",
            "targetId": 829
          },
          {
            "type": "CanPrecede",
            "targetId": 776
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 828,
        "name": "Signal Handler with Functionality that is not Asynchronous-Safe",
        "description": "The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 364
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "SIG31-C",
            "Entry_Name": "Do not access or modify shared objects in signal handlers",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 829,
        "name": "Inclusion of Functionality from Untrusted Control Sphere",
        "description": "The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 669
          },
          {
            "type": "ChildOf",
            "targetId": 669
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 830,
        "name": "Inclusion of Web Functionality from an Untrusted Source",
        "description": "The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 829
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 831,
        "name": "Signal Handler Function Associated with Multiple Signals",
        "description": "The product defines a function that is used as a handler for more than one signal.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 364
          }
        ]
      },
      {
        "id": 832,
        "name": "Unlock of a Resource that is not Locked",
        "description": "The product attempts to unlock a resource that is not locked.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ]
      },
      {
        "id": 833,
        "name": "Deadlock",
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "LCK08-J",
            "Entry_Name": "Ensure actively held locks are released on exceptional conditions",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 834,
        "name": "Excessive Iteration",
        "description": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ]
      },
      {
        "id": 835,
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 834
          },
          {
            "type": "ChildOf",
            "targetId": 834
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCSM-CWE-835",
            "Taxonomy_Name": "OMG ASCSM"
          }
        ]
      },
      {
        "id": 836,
        "name": "Use of Password Hash Instead of Password for Authentication",
        "description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          },
          {
            "type": "PeerOf",
            "targetId": 602
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 837,
        "name": "Improper Enforcement of a Single, Unique Action",
        "description": "The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 799
          }
        ]
      },
      {
        "id": 838,
        "name": "Inappropriate Encoding for Output Context",
        "description": "The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 116
          },
          {
            "type": "ChildOf",
            "targetId": 116
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "IDS13-J",
            "Entry_Name": "Use compatible encodings on both sides of file or network IO",
            "Taxonomy_Name": "The CERT Oracle Secure Coding Standard for Java (2011)"
          }
        ]
      },
      {
        "id": 839,
        "name": "Numeric Range Comparison Without Minimum Check",
        "description": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1023
          },
          {
            "type": "CanPrecede",
            "targetId": 195
          },
          {
            "type": "CanPrecede",
            "targetId": 682
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          },
          {
            "type": "CanPrecede",
            "targetId": 124
          }
        ]
      },
      {
        "id": 841,
        "name": "Improper Enforcement of Behavioral Workflow",
        "description": "The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "40",
            "Entry_Name": "Insufficient Process Validation",
            "Taxonomy_Name": "WASC"
          }
        ]
      },
      {
        "id": 842,
        "name": "Placement of User into Incorrect Group",
        "description": "The product or the administrator places a user into an incorrect group.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 286
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 843,
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 704
          },
          {
            "type": "ChildOf",
            "targetId": 704
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP39-C",
            "Entry_Name": "Do not access a variable through a pointer of an incompatible type",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 862,
        "name": "Missing Authorization",
        "description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 2-1",
            "Entry_Name": "Req 4.3.3.7",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 863,
        "name": "Incorrect Authorization",
        "description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ],
        "likelihoodOfExploit": "High",
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 2.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 908,
        "name": "Use of Uninitialized Resource",
        "description": "The product uses or accesses a resource that has not been initialized.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 665
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP33-C",
            "Entry_Name": "Do not read uninitialized memory",
            "Mapping_Fit": "CWE More Abstract",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 909,
        "name": "Missing Initialization of Resource",
        "description": "The product does not initialize a critical resource.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "ChildOf",
            "targetId": 665
          },
          {
            "type": "CanPrecede",
            "targetId": 908
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 910,
        "name": "Use of Expired File Descriptor",
        "description": "The product uses or accesses a file descriptor after it has been closed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 672
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium",
        "taxonomyMappings": [
          {
            "Entry_ID": "FIO46-C",
            "Entry_Name": "Do not access a closed file",
            "Mapping_Fit": "Exact",
            "Taxonomy_Name": "CERT C Secure Coding"
          }
        ]
      },
      {
        "id": 911,
        "name": "Improper Update of Reference Count",
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          },
          {
            "type": "CanPrecede",
            "targetId": 672
          },
          {
            "type": "CanPrecede",
            "targetId": 772
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 912,
        "name": "Hidden Functionality",
        "description": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 913,
        "name": "Improper Control of Dynamically-Managed Code Resources",
        "description": "The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 914,
        "name": "Improper Control of Dynamically-Identified Variables",
        "description": "The product does not properly restrict reading from or writing to dynamically-identified variables.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 99
          },
          {
            "type": "ChildOf",
            "targetId": 913
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 915,
        "name": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
        "description": "The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "PeerOf",
            "targetId": 502
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 916,
        "name": "Use of Password Hash With Insufficient Computational Effort",
        "description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 328
          },
          {
            "type": "ChildOf",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 917,
        "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
        "description": "The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "PeerOf",
            "targetId": 1336
          },
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 77
          },
          {
            "type": "ChildOf",
            "targetId": 77
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 918,
        "name": "Server-Side Request Forgery (SSRF)",
        "description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 441
          },
          {
            "type": "ChildOf",
            "targetId": 610
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 920,
        "name": "Improper Restriction of Power Consumption",
        "description": "The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          },
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 6.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 6.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 921,
        "name": "Storage of Sensitive Data in a Mechanism without Access Control",
        "description": "The product stores sensitive information in a file system or device that does not have built-in access control.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 922
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 922,
        "name": "Insecure Storage of Sensitive Information",
        "description": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "System Configuration"
        ]
      },
      {
        "id": 923,
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "description": "The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 924,
        "name": "Improper Enforcement of Message Integrity During Transmission in a Communication Channel",
        "description": "The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "ChildOf",
            "targetId": 345
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 925,
        "name": "Improper Verification of Intent by Broadcast Receiver",
        "description": "The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 940
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 926,
        "name": "Improper Export of Android Application Components",
        "description": "The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 927,
        "name": "Use of Implicit Intent for Sensitive Communication",
        "description": "The Android application uses an implicit intent for transmitting sensitive data to other applications.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          },
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 939,
        "name": "Improper Authorization in Handler for Custom URL Scheme",
        "description": "The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 862
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 940,
        "name": "Improper Verification of Source of a Communication Channel",
        "description": "The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          },
          {
            "type": "ChildOf",
            "targetId": 346
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 941,
        "name": "Incorrectly Specified Destination in a Communication Channel",
        "description": "The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          },
          {
            "type": "CanPrecede",
            "targetId": 406
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 942,
        "name": "Permissive Cross-domain Policy with Untrusted Domains",
        "description": "The product uses a cross-domain policy file that includes domains that should not be trusted.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          },
          {
            "type": "ChildOf",
            "targetId": 923
          },
          {
            "type": "ChildOf",
            "targetId": 183
          },
          {
            "type": "CanPrecede",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ]
      },
      {
        "id": 943,
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "description": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1004,
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "description": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 732
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 1007,
        "name": "Insufficient Visual Distinction of Homoglyphs Presented to User",
        "description": "The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 451
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 1021,
        "name": "Improper Restriction of Rendered UI Layers or Frames",
        "description": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 441
          },
          {
            "type": "ChildOf",
            "targetId": 610
          },
          {
            "type": "ChildOf",
            "targetId": 451
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1022,
        "name": "Use of Web Link to Untrusted Target with window.opener Access",
        "description": "The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying security-critical properties of the window.opener object, such as the location property.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 266
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 1023,
        "name": "Incomplete Comparison with Missing Factors",
        "description": "The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1024,
        "name": "Comparison of Incompatible Types",
        "description": "The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1025,
        "name": "Comparison Using Wrong Factors",
        "description": "The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1037,
        "name": "Processor Optimization Removal or Modification of Security-critical Code",
        "description": "The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1038
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Low"
      },
      {
        "id": 1038,
        "name": "Insecure Automated Optimizations",
        "description": "The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.",
        "status": "Draft",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 435
          },
          {
            "type": "ChildOf",
            "targetId": 758
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "likelihoodOfExploit": "Low"
      },
      {
        "id": 1039,
        "name": "Inadequate Detection or Handling of Adversarial Input Perturbations in Automated Recognition Mechanism",
        "description": "The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1041,
        "name": "Use of Redundant Code",
        "description": "The product has multiple functions, methods, procedures, macros, etc. that contain the same code.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-19",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1042,
        "name": "Static Member Data Element outside of a Singleton Class Element",
        "description": "The code contains a member element that is declared as static (but not final), in which its parent class element is not a singleton class - that is, a class element that can be used only once in the 'to' association of a Create action.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1176
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-3",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1043,
        "name": "Data Element Aggregating an Excessively Large Number of Non-Primitive Elements",
        "description": "The product uses a data element that has an excessively large number of sub-elements with non-primitive data types such as structures or aggregated objects.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1093
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-12",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1044,
        "name": "Architecture with Number of Horizontal Layers Outside of Expected Range",
        "description": "The product's architecture contains too many - or too few - horizontal layers.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-9",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1045,
        "name": "Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor",
        "description": "A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-17",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1046,
        "name": "Creation of Immutable Text Using String Concatenation",
        "description": "The product creates an immutable text string using string concatenation operations.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1176
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-2",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1047,
        "name": "Modules with Circular Dependencies",
        "description": "The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-7",
            "Taxonomy_Name": "OMG ASCMM"
          },
          {
            "Entry_ID": "ASCRM-RLB-13",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1048,
        "name": "Invokable Control Element with Large Number of Outward Calls",
        "description": "The code contains callable control elements that contain an excessively large number of references to other application objects external to the context of the callable, i.e. a Fan-Out value that is excessively large.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-4",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1049,
        "name": "Excessive Data Query Operations in a Large Data Table",
        "description": "The product performs a data query with a large number of joins and sub-queries on a large data table.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1176
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-4",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1050,
        "name": "Excessive Platform Resource Consumption within a Loop",
        "description": "The product has a loop body or loop condition that contains a control element that directly or indirectly consumes platform resources, e.g. messaging, sessions, locks, or file descriptors.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-8",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1051,
        "name": "Initialization with Hard-Coded Network Resource Configuration Data",
        "description": "The product initializes data using hard-coded values that act as network resource identifiers.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1419
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-18",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1052,
        "name": "Excessive Use of Hard-Coded Literals in Initialization",
        "description": "The product initializes a data element using a hard-coded literal that is not a simple integer or static constant element.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1419
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-3",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1053,
        "name": "Missing Documentation for Design",
        "description": "The product does not have documentation that represents how it is designed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1059
          }
        ]
      },
      {
        "id": 1054,
        "name": "Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer",
        "description": "The code at one architectural layer invokes code that resides at a deeper layer than the adjacent layer, i.e., the invocation skips at least one layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-12",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1055,
        "name": "Multiple Inheritance from Concrete Classes",
        "description": "The product contains a class with inheritance from more than one concrete class.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1093
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-2",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1056,
        "name": "Invokable Control Element with Variadic Parameters",
        "description": "A named-callable or method control element has a signature that supports a variable (variadic) number of parameters or arguments.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-8",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1057,
        "name": "Data Access Operations Outside of Expected Data Manager Component",
        "description": "The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-11",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1058,
        "name": "Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element",
        "description": "The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-11",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1059,
        "name": "Insufficient Technical Documentation",
        "description": "The product does not contain sufficient technical or engineering documentation (whether on paper or in electronic form) that contains descriptions of all the relevant software/hardware elements of the product, such as its usage, structure, architectural components, interfaces, design, implementation, configuration, operation, etc.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Documentation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.02.03 BR",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.02.03 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.03 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-6",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-7",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1060,
        "name": "Excessive Number of Inefficient Server-Side Data Accesses",
        "description": "The product performs too many data queries without using efficient data processing functionality such as stored procedures.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-9",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1061,
        "name": "Insufficient Encapsulation",
        "description": "The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1062,
        "name": "Parent Class with References to Child Class",
        "description": "The code has a parent class that contains references to a child class, its methods, or its members.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-14",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1063,
        "name": "Creation of Class Instance within a Static Code Block",
        "description": "A static code block creates an instance of a class.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1176
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-1",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1064,
        "name": "Invokable Control Element with Signature Containing an Excessive Number of Parameters",
        "description": "The product contains a function, subroutine, or method whose signature has an unnecessarily large number of parameters/arguments.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-13",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1065,
        "name": "Runtime Resource Management Control Element in a Component Built to Run on Application Servers",
        "description": "The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-5",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1066,
        "name": "Missing Serialization Control Element",
        "description": "The product contains a serializable data element that does not have an associated serialization method.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-2",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1067,
        "name": "Excessive Execution of Sequential Searches of Data Resource",
        "description": "The product contains a data query against an SQL table or view that is configured in a way that does not utilize an index and may cause sequential searches to be performed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1176
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-5",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1068,
        "name": "Inconsistency Between Implementation and Documented Design",
        "description": "The implementation of the product is not consistent with the design as described within the relevant documentation.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1069,
        "name": "Empty Exception Block",
        "description": "An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1071
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-1",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1070,
        "name": "Serializable Data Element Containing non-Serializable Item Elements",
        "description": "The product contains a serializable, storable data element such as a field or member, but the data element contains member elements that are not serializable.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-3",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1071,
        "name": "Empty Code Block",
        "description": "The source code contains a block that does not contain any code, i.e., the block is empty.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1164
          }
        ]
      },
      {
        "id": 1072,
        "name": "Data Resource Access without Use of Connection Pooling",
        "description": "The product accesses a data resource through a database without using a connection pooling capability.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-13",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1073,
        "name": "Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses",
        "description": "The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-10",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1074,
        "name": "Class with Excessively Deep Inheritance",
        "description": "A class has an inheritance level that is too high, i.e., it has a large number of parent classes.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1093
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-17",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1075,
        "name": "Unconditional Control Flow Transfer outside of Switch Block",
        "description": "The product performs unconditional control transfer (such as a \"goto\") in code outside of a branching structure such as a switch block.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-1",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1076,
        "name": "Insufficient Adherence to Expected Conventions",
        "description": "The product's architecture, source code, design, documentation, or other artifact does not follow required conventions.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1077,
        "name": "Floating Point Comparison with Incorrect Operator",
        "description": "The code performs a comparison such as an equality test between two float (floating point) values, but it uses comparison operators that do not account for the possibility of loss of precision.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-9",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1078,
        "name": "Inappropriate Source Code Style or Formatting",
        "description": "The source code does not follow desired style or formatting for indentation, white space, comments, etc.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ]
      },
      {
        "id": 1079,
        "name": "Parent Class without Virtual Destructor Method",
        "description": "A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-16",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1080,
        "name": "Source Code File with Excessive Number of Lines of Code",
        "description": "A source code file has too many lines of code.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-8",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1082,
        "name": "Class Instance Self Destruction Control Element",
        "description": "The code contains a class instance that calls the method or function to delete or destroy itself.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-7",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1083,
        "name": "Data Access from Outside Expected Data Manager Component",
        "description": "The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-10",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1084,
        "name": "Invokable Control Element with Excessive File or Data Access Operations",
        "description": "A function or method contains too many operations that utilize a data manager or file resource.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-14",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1085,
        "name": "Invokable Control Element with Excessive Volume of Commented-out Code",
        "description": "A function, method, procedure, etc. contains an excessive amount of code that has been commented out within its body.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-6",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1086,
        "name": "Class with Excessive Number of Child Classes",
        "description": "A class contains an unnecessarily large number of children.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1093
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-18",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1087,
        "name": "Class with Virtual Method without a Virtual Destructor",
        "description": "A class contains a virtual method, but the method does not have an associated virtual destructor.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-15",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1088,
        "name": "Synchronous Access of Remote Resource without Timeout",
        "description": "The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 821
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-19",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1089,
        "name": "Large Data Table with Excessive Number of Indices",
        "description": "The product uses a large data table that contains an excessively large number of indices.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-6",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1090,
        "name": "Method Containing Access of a Member Element from Another Class",
        "description": "A method for a class performs an operation that directly accesses a member element from another class.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-16",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1091,
        "name": "Use of Object without Invoking Destructor Method",
        "description": "The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 772
          },
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-15",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1092,
        "name": "Use of Same Invokable Control Element in Multiple Architectural Layers",
        "description": "The product uses the same control element across multiple architectural layers.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-10",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1093,
        "name": "Excessively Complex Data Representation",
        "description": "The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1094,
        "name": "Excessive Index Range Scan for a Data Resource",
        "description": "The product contains an index range scan for a large data table, but the scan can cover a large number of rows.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCPEM-PRF-7",
            "Taxonomy_Name": "OMG ASCPEM"
          }
        ]
      },
      {
        "id": 1095,
        "name": "Loop Condition Value Update within the Loop",
        "description": "The product uses a loop with a control flow condition based on a value that is updated within the body of the loop.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-5",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1096,
        "name": "Singleton Class Instance Creation without Proper Locking or Synchronization",
        "description": "The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 820
          },
          {
            "type": "ChildOf",
            "targetId": 662
          },
          {
            "type": "ChildOf",
            "targetId": 662
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-12",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1097,
        "name": "Persistent Storable Data Element without Associated Comparison Control Element",
        "description": "The product uses a storable data element that does not have all of the associated functions or methods that are necessary to support comparison.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          },
          {
            "type": "ChildOf",
            "targetId": 595
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-4",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1098,
        "name": "Data Element containing Pointer Item without Proper Copy Control Element",
        "description": "The code contains a data element with a pointer that does not have an associated copy or constructor method.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCRM-RLB-6",
            "Taxonomy_Name": "OMG ASCRM"
          }
        ]
      },
      {
        "id": 1099,
        "name": "Inconsistent Naming Conventions for Identifiers",
        "description": "The product's code, documentation, or other artifacts do not consistently use the same naming conventions for variables, callables, groups of related callables, I/O capabilities, data types, file names, or similar types of elements.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1100,
        "name": "Insufficient Isolation of System-Dependent Functions",
        "description": "The product or code does not isolate system-dependent functionality into separate standalone modules.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ]
      },
      {
        "id": 1101,
        "name": "Reliance on Runtime Component in Generated Code",
        "description": "The product uses automatically-generated code that cannot be executed without a specific runtime support component.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1102,
        "name": "Reliance on Machine-Dependent Data Representation",
        "description": "The code uses a data representation that relies on low-level data representation or constructs that may vary across different processors, physical machines, OSes, or other physical components.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 758
          },
          {
            "type": "PeerOf",
            "targetId": 1105
          }
        ]
      },
      {
        "id": 1103,
        "name": "Use of Platform-Dependent Third Party Components",
        "description": "The product relies on third-party components that do not provide equivalent functionality across all desirable platforms.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 758
          }
        ]
      },
      {
        "id": 1104,
        "name": "Use of Unmaintained Third Party Components",
        "description": "The product relies on third-party components that are not actively supported or maintained by the original developer or a trusted proxy for the original developer.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1357
          }
        ]
      },
      {
        "id": 1105,
        "name": "Insufficient Encapsulation of Machine-Dependent Functionality",
        "description": "The product or code uses machine-dependent functionality, but it does not sufficiently encapsulate or isolate this functionality from the rest of the code.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 758
          },
          {
            "type": "ChildOf",
            "targetId": 1061
          }
        ]
      },
      {
        "id": 1106,
        "name": "Insufficient Use of Symbolic Constants",
        "description": "The source code uses literal constants that may need to change or evolve over time, instead of using symbolic constants.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1107,
        "name": "Insufficient Isolation of Symbolic Constant Definitions",
        "description": "The source code uses symbolic constants, but it does not sufficiently place the definitions of these constants into a more centralized or isolated location.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1108,
        "name": "Excessive Reliance on Global Variables",
        "description": "The code is structured in a way that relies too much on using or setting global variables throughout various points in the code, instead of preserving the associated information in a narrower, more local context.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1076
          }
        ]
      },
      {
        "id": 1109,
        "name": "Use of Same Variable for Multiple Purposes",
        "description": "The code contains a callable, block, or other code element in which the same variable is used to control more than one unique task or store more than one instance of data.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1110,
        "name": "Incomplete Design Documentation",
        "description": "The product's design documentation does not adequately describe control flow, data flow, system initialization, relationships between tasks, components, rationales, or other important aspects of the design.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1059
          }
        ]
      },
      {
        "id": 1111,
        "name": "Incomplete I/O Documentation",
        "description": "The product's documentation does not adequately define inputs, outputs, or system/software interfaces.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1059
          }
        ]
      },
      {
        "id": 1112,
        "name": "Incomplete Documentation of Program Execution",
        "description": "The document does not fully define all mechanisms that are used to control or influence how product-specific programs are executed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1059
          }
        ]
      },
      {
        "id": 1113,
        "name": "Inappropriate Comment Style",
        "description": "The source code uses comment styles or formats that are inconsistent or do not follow expected standards for the product.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1114,
        "name": "Inappropriate Whitespace Style",
        "description": "The source code contains whitespace that is inconsistent across the code or does not follow expected standards for the product.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1115,
        "name": "Source Code Element without Standard Prologue",
        "description": "The source code contains elements such as source files that do not consistently provide a prologue or header that has been standardized for the project.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1116,
        "name": "Inaccurate Comments",
        "description": "The source code contains comments that do not accurately describe or explain aspects of the portion of the code with which the comment is associated.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1117,
        "name": "Callable with Insufficient Behavioral Summary",
        "description": "The code contains a function or method whose signature and/or associated inline documentation does not sufficiently describe the callable's inputs, outputs, side effects, assumptions, or return codes.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1078
          }
        ]
      },
      {
        "id": 1118,
        "name": "Insufficient Documentation of Error Handling Techniques",
        "description": "The documentation does not sufficiently describe the techniques that are used for error handling, exception processing, or similar mechanisms.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1059
          }
        ]
      },
      {
        "id": 1119,
        "name": "Excessive Use of Unconditional Branching",
        "description": "The code uses too many unconditional branches (such as \"goto\").",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ]
      },
      {
        "id": 1120,
        "name": "Excessive Code Complexity",
        "description": "The code is too complex, as calculated using a well-defined, quantitative measure.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1121,
        "name": "Excessive McCabe Cyclomatic Complexity",
        "description": "The code contains McCabe cyclomatic complexity that exceeds a desirable maximum.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "ASCMM-MNT-11",
            "Taxonomy_Name": "OMG ASCMM"
          }
        ]
      },
      {
        "id": 1122,
        "name": "Excessive Halstead Complexity",
        "description": "The code is structured in a way that a Halstead complexity measure exceeds a desirable maximum.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ]
      },
      {
        "id": 1123,
        "name": "Excessive Use of Self-Modifying Code",
        "description": "The product uses too much self-modifying code.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ]
      },
      {
        "id": 1124,
        "name": "Excessively Deep Nesting",
        "description": "The code contains a callable or other code grouping in which the nesting / branching is too deep.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ]
      },
      {
        "id": 1125,
        "name": "Excessive Attack Surface",
        "description": "The product has an attack surface whose quantitative measurement exceeds a desirable maximum.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1120
          }
        ]
      },
      {
        "id": 1126,
        "name": "Declaration of Variable with Unnecessarily Wide Scope",
        "description": "The source code declares a variable in one scope, but the variable is only used within a narrower scope.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1127,
        "name": "Compilation with Insufficient Warnings or Errors",
        "description": "The code is compiled without sufficient warnings enabled, which may prevent the detection of subtle bugs or quality issues.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Build and Compilation"
        ]
      },
      {
        "id": 1164,
        "name": "Irrelevant Code",
        "description": "The product contains code that is not essential for execution, i.e. makes no state changes and has no side effects that alter data or control flow, such that removal of the code would have no impact to functionality or correctness.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ]
      },
      {
        "id": 1173,
        "name": "Improper Use of Validation Framework",
        "description": "The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1174,
        "name": "ASP.NET Misconfiguration: Improper Model Validation",
        "description": "The ASP.NET application does not use, or incorrectly uses, the model validation framework.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1173
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1176,
        "name": "Inefficient CPU Computation",
        "description": "The product performs CPU computations using algorithms that are not as efficient as they could be for the needs of the developer, i.e., the computations can be optimized further.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 405
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1177,
        "name": "Use of Prohibited Code",
        "description": "The product uses a function, library, or third party component that has been explicitly prohibited, whether by the developer or the customer.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1187,
        "name": "DEPRECATED: Use of Uninitialized Resource",
        "description": "This entry has been deprecated because it was a duplicate of CWE-908. All content has been transferred to CWE-908.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 1188,
        "name": "Initialization of a Resource with an Insecure Default",
        "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1419
          },
          {
            "type": "ChildOf",
            "targetId": 665
          }
        ]
      },
      {
        "id": 1189,
        "name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
        "description": "The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 653
          },
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "PeerOf",
            "targetId": 1331
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1190,
        "name": "DMA Device Enabled Too Early in Boot Phase",
        "description": "The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 696
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1191,
        "name": "On-Chip Debug and Test Interface With Improper Access Control",
        "description": "The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1192,
        "name": "Improper Identifier for IP Block used in System-On-Chip (SOC)",
        "description": "The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 1193,
        "name": "Power-On of Untrusted Execution Core Before Enabling Fabric Access Control",
        "description": "The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 696
          }
        ]
      },
      {
        "id": 1204,
        "name": "Generation of Weak Initialization Vector (IV)",
        "description": "The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1209,
        "name": "Failure to Disable Reserved Bits",
        "description": "The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design. However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Documentation"
        ]
      },
      {
        "id": 1220,
        "name": "Insufficient Granularity of Access Control",
        "description": "The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1221,
        "name": "Incorrect Register Defaults or Module Parameters",
        "description": "Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1419
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1222,
        "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
        "description": "The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1220
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1223,
        "name": "Race Condition for Write-Once Attributes",
        "description": "A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1224,
        "name": "Improper Restriction of Write-Once Bit Fields",
        "description": "The hardware design control register \"sticky bits\" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1229,
        "name": "Creation of Emergent Resource",
        "description": "The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ]
      },
      {
        "id": 1230,
        "name": "Exposure of Sensitive Information Through Metadata",
        "description": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1231,
        "name": "Improper Prevention of Lock Bit Modification",
        "description": "The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1232,
        "name": "Improper Lock Behavior After Power State Transition",
        "description": "Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1233,
        "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
        "description": "The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1234,
        "name": "Hardware Internal or Debug Modes Allow Override of Locks",
        "description": "System configuration protection may be bypassed during debug mode.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 667
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1235,
        "name": "Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations",
        "description": "The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "EXP04-J",
            "Entry_Name": "Do not pass arguments to certain Java Collections Framework methods that are a different type than the collection parameter type",
            "Taxonomy_Name": "SEI CERT Oracle Coding Standard for Java"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1236,
        "name": "Improper Neutralization of Formula Elements in a CSV File",
        "description": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 74
          },
          {
            "type": "ChildOf",
            "targetId": 74
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1239,
        "name": "Improper Zeroization of Hardware Register",
        "description": "The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 226
          },
          {
            "type": "ChildOf",
            "targetId": 226
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 1240,
        "name": "Use of a Cryptographic Primitive with a Risky Implementation",
        "description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 327
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1241,
        "name": "Use of Predictable Algorithm in Random Number Generator",
        "description": "The device uses an algorithm that is predictable and generates a pseudo-random number.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 330
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1242,
        "name": "Inclusion of Undocumented Features or Chicken Bits",
        "description": "The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 912
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Documentation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1243,
        "name": "Sensitive Non-Volatile Information Not Protected During Debug",
        "description": "Access to security-sensitive information stored in fuses is not limited during debug.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1263
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1244,
        "name": "Internal Asset Exposed to Unsafe Debug Access Level or State",
        "description": "The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 863
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1245,
        "name": "Improper Finite State Machines (FSMs) in Hardware Logic",
        "description": "Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 684
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1246,
        "name": "Improper Write Handling in Limited-write Non-Volatile Memories",
        "description": "The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 400
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SD-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1247,
        "name": "Improper Protection Against Voltage and Clock Glitches",
        "description": "The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1384
          }
        ],
        "modesOfIntroduction": [
          "Operation"
        ]
      },
      {
        "id": 1248,
        "name": "Semiconductor Defects in Hardware Logic with Security-Sensitive Implications",
        "description": "The security-sensitive hardware module contains semiconductor defects.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Manufacturing",
          "Operation"
        ]
      },
      {
        "id": 1249,
        "name": "Application-Level Admin Tool with Inconsistent View of Underlying Operating System",
        "description": "The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1250
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1250,
        "name": "Improper Preservation of Consistency Between Independent Representations of Shared State",
        "description": "The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ]
      },
      {
        "id": 1251,
        "name": "Mirrored Regions with Different Values",
        "description": "The product's architecture mirrors regions without ensuring that their contents always stay in sync.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1250
          }
        ]
      },
      {
        "id": 1252,
        "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
        "description": "The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1253,
        "name": "Incorrect Selection of Fuse Values",
        "description": "The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1254,
        "name": "Incorrect Comparison Logic Granularity",
        "description": "The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 208
          },
          {
            "type": "ChildOf",
            "targetId": 697
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1255,
        "name": "Comparison Logic is Vulnerable to Power Side-Channel Attacks",
        "description": "A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1300
          },
          {
            "type": "PeerOf",
            "targetId": 1259
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1256,
        "name": "Improper Restriction of Software Interfaces to Hardware Features",
        "description": "The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe physical side channels.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1257,
        "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
        "description": "Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1258,
        "name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
        "description": "The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 212
          },
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1259,
        "name": "Improper Restriction of Security Token Assignment",
        "description": "The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 1294
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1260,
        "name": "Improper Handling of Overlap Between Protected Memory Ranges",
        "description": "The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1261,
        "name": "Improper Handling of Single Event Upsets",
        "description": "The hardware logic does not effectively handle when single-event upsets (SEUs) occur.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1384
          },
          {
            "type": "PeerOf",
            "targetId": 1254
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1262,
        "name": "Improper Access Control for Register Interface",
        "description": "The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1263,
        "name": "Improper Physical Access Control",
        "description": "The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "PeerOf",
            "targetId": 1191
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Manufacturing"
        ]
      },
      {
        "id": 1264,
        "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
        "description": "The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 821
          },
          {
            "type": "PeerOf",
            "targetId": 1037
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1265,
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "description": "During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          },
          {
            "type": "PeerOf",
            "targetId": 663
          },
          {
            "type": "CanPrecede",
            "targetId": 416
          }
        ]
      },
      {
        "id": 1266,
        "name": "Improper Scrubbing of Sensitive Data from Decommissioned Device",
        "description": "The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned. A scrubbing capability could be missing, insufficient, or incorrect.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 404
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Policy",
          "Implementation"
        ]
      },
      {
        "id": 1267,
        "name": "Policy Uses Obsolete Encoding",
        "description": "The product uses an obsolete encoding mechanism to implement access controls.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1268,
        "name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
        "description": "The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1269,
        "name": "Product Released in Non-Release Configuration",
        "description": "The product released to market is released in pre-production or manufacturing configuration.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Integration",
          "Manufacturing"
        ]
      },
      {
        "id": 1270,
        "name": "Generation of Incorrect Security Tokens",
        "description": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 1294
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1271,
        "name": "Uninitialized Value on Reset for Registers Holding Security Settings",
        "description": "Security-critical logic is not set to a known value on reset.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 909
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1272,
        "name": "Sensitive Information Uncleared Before Debug/Power State Transition",
        "description": "The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 226
          },
          {
            "type": "CanPrecede",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1273,
        "name": "Device Unlock Credential Sharing",
        "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          }
        ],
        "modesOfIntroduction": [
          "Integration",
          "Manufacturing"
        ]
      },
      {
        "id": 1274,
        "name": "Improper Access Control for Volatile Memory Containing Boot Code",
        "description": "The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1275,
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "description": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 923
          },
          {
            "type": "CanPrecede",
            "targetId": 352
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "Medium"
      },
      {
        "id": 1276,
        "name": "Hardware Child Block Incorrectly Connected to Parent System",
        "description": "Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1277,
        "name": "Firmware Not Updateable",
        "description": "The product does not provide its users with the ability to update or patch its firmware to address any vulnerabilities or weaknesses that may be present.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1329
          }
        ],
        "modesOfIntroduction": [
          "Requirements",
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1278,
        "name": "Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques",
        "description": "Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1279,
        "name": "Cryptographic Operations are run Before Supporting Units are Ready",
        "description": "Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 696
          },
          {
            "type": "ChildOf",
            "targetId": 665
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1280,
        "name": "Access Control Check Implemented After Asset is Accessed",
        "description": "A product's hardware-based access control check occurs after the asset has been accessed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 696
          },
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1281,
        "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
        "description": "Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 691
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1282,
        "name": "Assumed-Immutable Data is Stored in Writable Memory",
        "description": "Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "CanPrecede",
            "targetId": 471
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1283,
        "name": "Mutable Attestation or Measurement Reporting Data",
        "description": "The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1284,
        "name": "Improper Validation of Specified Quantity in Input",
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "CanPrecede",
            "targetId": 789
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1285,
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1286,
        "name": "Improper Validation of Syntactic Correctness of Input",
        "description": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1287,
        "name": "Improper Validation of Specified Type of Input",
        "description": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "PeerOf",
            "targetId": 843
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1288,
        "name": "Improper Validation of Consistency within Input",
        "description": "The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1289,
        "name": "Improper Validation of Unsafe Equivalence in Input",
        "description": "The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 20
          },
          {
            "type": "PeerOf",
            "targetId": 41
          },
          {
            "type": "PeerOf",
            "targetId": 178
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1290,
        "name": "Incorrect Decoding of Security Identifiers",
        "description": "The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 1294
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Architecture and Design"
        ]
      },
      {
        "id": 1291,
        "name": "Public Key Re-Use for Signing both Debug and Production Code",
        "description": "The same public key is used for signing both debug and production code.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          },
          {
            "type": "PeerOf",
            "targetId": 321
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1292,
        "name": "Incorrect Conversion of Security Identifiers",
        "description": "The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "ChildOf",
            "targetId": 1294
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1293,
        "name": "Missing Source Correlation of Multiple Independent Data",
        "description": "The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 345
          },
          {
            "type": "PeerOf",
            "targetId": 654
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 1294,
        "name": "Insecure Security Identifier Mechanism",
        "description": "The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1295,
        "name": "Debug Messages Revealing Unnecessary Information",
        "description": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "PeerOf",
            "targetId": 209
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1296,
        "name": "Incorrect Chaining or Granularity of Debug Components",
        "description": "The product's debug components contain incorrect chaining or granularity of debug components.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1297,
        "name": "Unprotected Confidential Information on Device is Accessible by OSAT Vendors",
        "description": "The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1298,
        "name": "Hardware Logic Contains Race Conditions",
        "description": "A race condition in the hardware logic results in undermining security guarantees of the system.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 362
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1299,
        "name": "Missing Protection Mechanism for Alternate Hardware Interface",
        "description": "The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "PeerOf",
            "targetId": 1191
          },
          {
            "type": "ChildOf",
            "targetId": 420
          },
          {
            "type": "ChildOf",
            "targetId": 288
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1300,
        "name": "Improper Protection of Physical Side Channels",
        "description": "The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 203
          },
          {
            "type": "ChildOf",
            "targetId": 203
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1301,
        "name": "Insufficient or Incomplete Data Removal within Hardware Component",
        "description": "The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 226
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1302,
        "name": "Missing Source Identifier in Entity Transactions on a System-On-Chip (SOC)",
        "description": "The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1294
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1303,
        "name": "Non-Transparent Sharing of Microarchitectural Resources",
        "description": "Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1189
          },
          {
            "type": "ChildOf",
            "targetId": 203
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1304,
        "name": "Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation",
        "description": "The product performs a power save/restore operation, but it does not ensure that the integrity of the configuration state is maintained and/or verified between the beginning and ending of the operation.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "PeerOf",
            "targetId": 345
          },
          {
            "type": "PeerOf",
            "targetId": 1271
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Integration"
        ]
      },
      {
        "id": 1310,
        "name": "Missing Ability to Patch ROM Code",
        "description": "Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1329
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Integration",
          "Manufacturing"
        ]
      },
      {
        "id": 1311,
        "name": "Improper Translation of Security Attributes by Fabric Bridge",
        "description": "The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1312,
        "name": "Missing Protection for Mirrored Regions in On-Chip Fabric Firewall",
        "description": "The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          },
          {
            "type": "PeerOf",
            "targetId": 1251
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1313,
        "name": "Hardware Allows Activation of Test or Debug Logic at Runtime",
        "description": "During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Integration"
        ]
      },
      {
        "id": 1314,
        "name": "Missing Write Protection for Parametric Data Values",
        "description": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 862
          },
          {
            "type": "PeerOf",
            "targetId": 1299
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1315,
        "name": "Improper Setting of Bus Controlling Capability in Fabric End-point",
        "description": "The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "System Configuration"
        ]
      },
      {
        "id": 1316,
        "name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
        "description": "The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1317,
        "name": "Improper Access Control in Fabric Bridge",
        "description": "The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1318,
        "name": "Missing Support for Security Features in On-chip Fabrics or Buses",
        "description": "On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1319,
        "name": "Improper Protection against Electromagnetic Fault Injection (EM-FI)",
        "description": "The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1320,
        "name": "Improper Protection for Outbound Error Messages and Alert Signals",
        "description": "Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1321,
        "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
        "description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 915
          },
          {
            "type": "ChildOf",
            "targetId": 913
          },
          {
            "type": "CanPrecede",
            "targetId": 471
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1322,
        "name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
        "description": "The product uses a non-blocking model that relies on a single threaded process for features such as scalability, but it contains code that can block when it is invoked.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 834
          },
          {
            "type": "CanPrecede",
            "targetId": 835
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1323,
        "name": "Improper Management of Sensitive Trace Data",
        "description": "Trace data collected from several sources on the System-on-Chip (SoC) is stored in unprotected locations or transported to untrusted agents.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1324,
        "name": "DEPRECATED: Sensitive Information Accessible by Physical Probing of JTAG Interface",
        "description": "This entry has been deprecated because it was at a lower level of abstraction than supported by CWE. All relevant content has been integrated into CWE-319.",
        "status": "Deprecated",
        "abstraction": "Base"
      },
      {
        "id": 1325,
        "name": "Improperly Controlled Sequential Memory Allocation",
        "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 770
          },
          {
            "type": "PeerOf",
            "targetId": 789
          },
          {
            "type": "CanPrecede",
            "targetId": 476
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1326,
        "name": "Missing Immutable Root of Trust in Hardware",
        "description": "A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1327,
        "name": "Binding to an Unrestricted IP Address",
        "description": "The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 668
          }
        ],
        "modesOfIntroduction": [
          "System Configuration"
        ]
      },
      {
        "id": 1328,
        "name": "Security Version Number Mutable to Older Versions",
        "description": "Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 285
          },
          {
            "type": "PeerOf",
            "targetId": 757
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1329,
        "name": "Reliance on Component That is Not Updateable",
        "description": "The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1357
          },
          {
            "type": "ChildOf",
            "targetId": 1357
          },
          {
            "type": "ChildOf",
            "targetId": 664
          }
        ],
        "modesOfIntroduction": [
          "Requirements",
          "Architecture and Design",
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1330,
        "name": "Remanent Data Readable after Memory Erase",
        "description": "Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.",
        "status": "Draft",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1301
          },
          {
            "type": "ChildOf",
            "targetId": 1301
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1331,
        "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
        "description": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 653
          },
          {
            "type": "ChildOf",
            "targetId": 668
          },
          {
            "type": "PeerOf",
            "targetId": 1189
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1332,
        "name": "Improper Handling of Faults that Lead to Instruction Skips",
        "description": "The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.",
        "status": "Stable",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1384
          },
          {
            "type": "PeerOf",
            "targetId": 1247
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1333,
        "name": "Inefficient Regular Expression Complexity",
        "description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 407
          },
          {
            "type": "ChildOf",
            "targetId": 407
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ],
        "likelihoodOfExploit": "High"
      },
      {
        "id": 1334,
        "name": "Unauthorized Error Injection Can Degrade Hardware Redundancy",
        "description": "An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 284
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Integration"
        ]
      },
      {
        "id": 1335,
        "name": "Incorrect Bitwise Shift of Integer",
        "description": "An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1336,
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "description": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 94
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1338,
        "name": "Improper Protections Against Hardware Overheating",
        "description": "A hardware device is missing or has inadequate protection features to prevent overheating.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 693
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1339,
        "name": "Insufficient Precision or Accuracy of a Real Number",
        "description": "The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.",
        "status": "Draft",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 682
          },
          {
            "type": "PeerOf",
            "targetId": 190
          },
          {
            "type": "CanPrecede",
            "targetId": 834
          },
          {
            "type": "CanPrecede",
            "targetId": 119
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1341,
        "name": "Multiple Releases of Same Resource or Handle",
        "description": "The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 675
          },
          {
            "type": "CanPrecede",
            "targetId": 672
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1342,
        "name": "Information Exposure through Microarchitectural State after Transient Execution",
        "description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 226
          },
          {
            "type": "ChildOf",
            "targetId": 226
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Requirements"
        ]
      },
      {
        "id": 1351,
        "name": "Improper Handling of Hardware Behavior in Exceptionally Cold Environments",
        "description": "A hardware device, or the firmware running on it, is missing or has incorrect protection features to maintain goals of security primitives when the device is cooled below standard operating temperatures.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1384
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1357,
        "name": "Reliance on Insufficiently Trustworthy Component",
        "description": "The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 710
          }
        ],
        "modesOfIntroduction": [
          "Requirements",
          "Architecture and Design"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.02 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.03.02 RE(2)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 3-3",
            "Entry_Name": "Req SR 1.13",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req EDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req HDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req NDR 3.12",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req EDR 3.13",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req HDR 3.13",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req NDR 3.13",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR-7.8",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-6",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-9",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-10",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1384,
        "name": "Improper Handling of Physical or Environmental Conditions",
        "description": "The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 703
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Manufacturing"
        ]
      },
      {
        "id": 1385,
        "name": "Missing Origin Validation in WebSockets",
        "description": "The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.",
        "status": "Incomplete",
        "abstraction": "Variant",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 346
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1386,
        "name": "Insecure Operation on Windows Junction / Mount Point",
        "description": "The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 59
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      },
      {
        "id": 1389,
        "name": "Incorrect Parsing of Numbers with Different Radices",
        "description": "The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 704
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Implementation"
        ]
      },
      {
        "id": 1390,
        "name": "Weak Authentication",
        "description": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 287
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1391,
        "name": "Use of Weak Credentials",
        "description": "The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1390
          }
        ],
        "modesOfIntroduction": [
          "Requirements",
          "Architecture and Design",
          "Installation",
          "Operation"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 2-4",
            "Entry_Name": "Req SP.09.02 RE(1)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SR-3 b)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2 b)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SI-2 d)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-3 d)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SG-6 b)",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.7",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.8",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.9",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 1.14",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 4.3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.5",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1392,
        "name": "Use of Default Credentials",
        "description": "The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1391
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1393,
        "name": "Use of Default Password",
        "description": "The product uses default passwords for potentially critical functionality.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1392
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1394,
        "name": "Use of Default Cryptographic Key",
        "description": "The product uses a default cryptographic key for potentially critical functionality.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1392
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1395,
        "name": "Dependency on Vulnerable Third-Party Component",
        "description": "The product has a dependency on a third-party component that contains one or more known vulnerabilities.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 657
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Patching and Maintenance"
        ],
        "taxonomyMappings": [
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 2.4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 6.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-2",
            "Entry_Name": "Req CR 7.2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-9",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SM-10",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SR-2",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req DM-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req DM-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req DM-4",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-1",
            "Taxonomy_Name": "ISA/IEC 62443"
          },
          {
            "Entry_ID": "Part 4-1",
            "Entry_Name": "Req SVV-3",
            "Taxonomy_Name": "ISA/IEC 62443"
          }
        ]
      },
      {
        "id": 1419,
        "name": "Incorrect Initialization of Resource",
        "description": "The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.",
        "status": "Incomplete",
        "abstraction": "Class",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 665
          }
        ],
        "modesOfIntroduction": [
          "Implementation",
          "Manufacturing",
          "Installation",
          "System Configuration",
          "Operation"
        ]
      },
      {
        "id": 1420,
        "name": "Exposure of Sensitive Information during Transient Execution",
        "description": "A processor event or prediction may allow incorrect operations (or correct operations with incorrect data) to execute transiently, potentially exposing data over a covert channel.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 669
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1421,
        "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
        "description": "A processor event may allow transient operations to access architecturally restricted data (for example, in another address space) in a shared microarchitectural structure (for example, a CPU cache), potentially exposing the data over a covert channel.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1420
          },
          {
            "type": "ChildOf",
            "targetId": 1420
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "System Configuration",
          "Architecture and Design"
        ]
      },
      {
        "id": 1422,
        "name": "Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution",
        "description": "A processor event or prediction may allow incorrect or stale data to be forwarded to transient operations, potentially exposing data over a covert channel.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1420
          },
          {
            "type": "ChildOf",
            "targetId": 1420
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design"
        ]
      },
      {
        "id": 1423,
        "name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
        "description": "Shared microarchitectural predictor state may allow code to influence transient execution across a hardware boundary, potentially exposing data that is accessible beyond the boundary over a covert channel.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 1420
          },
          {
            "type": "ChildOf",
            "targetId": 1420
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "System Configuration"
        ]
      },
      {
        "id": 1426,
        "name": "Improper Validation of Generative AI Output",
        "description": "The product invokes a generative AI/ML component whose behaviors and outputs cannot be directly controlled, but the product does not validate or insufficiently validates the outputs to ensure that they align with the intended security, content, or privacy policy.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 707
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation"
        ]
      },
      {
        "id": 1427,
        "name": "Improper Neutralization of Input Used for LLM Prompting",
        "description": "The product uses externally-provided data to build prompts provided to large language models (LLMs), but the way these prompts are constructed causes the LLM to fail to distinguish between user-supplied inputs and developer provided system directives.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 77
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Implementation",
          "System Configuration",
          "Integration",
          "Bundling"
        ]
      },
      {
        "id": 1428,
        "name": "Reliance on HTTP instead of HTTPS",
        "description": "The product provides or relies on use of HTTP communications when HTTPS is available.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 319
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Requirements",
          "Implementation",
          "Implementation",
          "Operation"
        ]
      },
      {
        "id": 1429,
        "name": "Missing Security-Relevant Feedback for Unexecuted Operations in Hardware Interface",
        "description": "The product has a hardware interface that silently discards operations in situations for which feedback would be security-relevant, such as the timely detection of failures or attacks.",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 223
          },
          {
            "type": "PeerOf",
            "targetId": 392
          }
        ],
        "modesOfIntroduction": [
          "Architecture and Design",
          "Implementation",
          "Requirements"
        ]
      },
      {
        "id": 1431,
        "name": "Driving Intermediate Cryptographic State/Results to Hardware Module Outputs",
        "description": "The product uses a hardware module implementing a cryptographic algorithm that writes sensitive information about the intermediate state or results of its cryptographic operations via one of its output wires (typically the output port containing the final result).",
        "status": "Incomplete",
        "abstraction": "Base",
        "relationships": [
          {
            "type": "ChildOf",
            "targetId": 200
          },
          {
            "type": "PeerOf",
            "targetId": 497
          }
        ],
        "modesOfIntroduction": [
          "Implementation"
        ]
      }
    ],
    "capec": [
      {
        "id": 1,
        "name": "Accessing Functionality Not Properly Constrained by ACLs",
        "description": "In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to.",
        "prerequisites": [
          "The application must be navigable in a manner that associates elements (subsections) of the application with ACLs.",
          "The various resources, or individual URLs, must be somehow discoverable by the attacker",
          "The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource."
        ],
        "relatedWeaknesses": [
          276,
          285,
          434,
          693,
          732,
          1191,
          1193,
          1220,
          1297,
          1311,
          1314,
          1315,
          1318,
          1320,
          1321,
          1327
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "In a J2EE setting, administrators can associate a role that is impossible for the authenticator to grant users, such as \"NoAccess\", with all Servlets to which access is guarded by a limited number of servlets visible to, and accessible by, the user. Having done so, any direct access to those protected Servlets will be prohibited by the web container. In a more general setting, the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic."
        ],
        "relatedAttackPatterns": [
          122,
          17
        ]
      },
      {
        "id": 2,
        "name": "Inducing Account Lockout",
        "description": "An attacker leverages the security functionality of the system aimed at thwarting potential attacks to launch a denial of service attack against a legitimate system user. Many systems, for instance, implement a password throttling mechanism that locks an account after a certain number of incorrect log in attempts. An attacker can leverage this throttling mechanism to lock a legitimate user out of their own account. The weakness that is being leveraged by an attacker is the very security feature that has been put in place to counteract attacks.",
        "prerequisites": [
          "The system has a lockout mechanism.",
          "An attacker must be able to reproduce behavior that would result in an account being locked."
        ],
        "relatedWeaknesses": [
          645
        ],
        "consequences": [
          "Availability Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Implement intelligent password throttling mechanisms such as those which take IP address into account, in addition to the login name.",
          "When implementing security features, consider how they can be misused and made to turn on themselves."
        ],
        "relatedAttackPatterns": [
          212
        ]
      },
      {
        "id": 3,
        "name": "Using Leading 'Ghost' Character Sequences to Bypass Input Filters",
        "description": "Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.",
        "prerequisites": [
          "The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same."
        ],
        "relatedWeaknesses": [
          173,
          41,
          172,
          179,
          180,
          181,
          183,
          184,
          20,
          74,
          697,
          707
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Use an allowlist rather than a denylist input validation.",
          "Canonicalize all data prior to validation.",
          "Take an iterative approach to input validation (defense in depth)."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 4,
        "name": "Using Alternative IP Address Encodings",
        "description": "This attack relies on the adversary using unexpected formats for representing IP addresses. Networked applications may expect network location information in a specific format, such as fully qualified domains names (FQDNs), URL, IP address, or IP Address ranges. If the location information is not validated against a variety of different possible encodings and formats, the adversary can use an alternate format to bypass application access control.",
        "prerequisites": [
          "The target software must fail to anticipate all of the possible valid encodings of an IP/web address.",
          "The adversary must have the ability to communicate with the server."
        ],
        "relatedWeaknesses": [
          291,
          173
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Default deny access control policies",
          "Design: Input validation routines should check and enforce both input data types and content against a positive specification. In regards to IP addresses, this should include the authorized manner for the application to represent IP addresses and not accept user specified IP addresses and IP address formats (such as ranges)",
          "Implementation: Perform input validation for all remote content."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 5,
        "name": "Blue Boxing",
        "description": "This type of attack against older telephone switches and trunks has been around for decades. A tone is sent by an adversary to impersonate a supervisor signal which has the effect of rerouting or usurping command of the line. While the US infrastructure proper may not contain widespread vulnerabilities to this type of attack, many companies are connected globally through call centers and business process outsourcing. These international systems may be operated in countries which have not upgraded Telco infrastructure and so are vulnerable to Blue boxing. Blue boxing is a result of failure on the part of the system to enforce strong authorization for administrative functions. While the infrastructure is different than standard current applications like web applications, there are historical lessons to be learned to upgrade the access control for administrative functions. This attack pattern is included in CAPEC for historical purposes.",
        "prerequisites": [
          "System must use weak authentication mechanisms for administrative functions."
        ],
        "relatedWeaknesses": [
          285
        ],
        "consequences": [
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Implementation: Upgrade phone lines. Note this may be prohibitively expensive",
          "Use strong access control such as two factor access control for administrative access to the switch"
        ],
        "relatedAttackPatterns": [
          220
        ]
      },
      {
        "id": 6,
        "name": "Argument Injection",
        "description": "An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods.",
        "prerequisites": [
          "Target software fails to strip all user-supplied input of any content that could cause the shell to perform unexpected actions.",
          "Software must allow for unvalidated or unfiltered input to be executed on operating system shell, and, optionally, the system configuration must allow for output to be sent back to client."
        ],
        "relatedWeaknesses": [
          74,
          146,
          184,
          78,
          185,
          697
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process.",
          "Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred.",
          "Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise."
        ],
        "relatedAttackPatterns": [
          137
        ]
      },
      {
        "id": 7,
        "name": "Blind SQL Injection",
        "description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
        "prerequisites": [
          "SQL queries used by the application to store, retrieve or modify data.",
          "User-controllable input that is not properly validated by the application as part of SQL queries."
        ],
        "relatedWeaknesses": [
          89,
          209,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals.",
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."
        ],
        "relatedAttackPatterns": [
          66
        ]
      },
      {
        "id": 8,
        "name": "Buffer Overflow in an API Call",
        "description": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An adversary who has knowledge of known vulnerable libraries or shared code can easily target software that makes use of these libraries. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.",
        "prerequisites": [
          "The target host exposes an API to the user.",
          "One or more API functions exposed by the target host has a buffer overflow vulnerability."
        ],
        "relatedWeaknesses": [
          120,
          119,
          118,
          74,
          20,
          680,
          733,
          697
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Use a language or compiler that performs automatic bounds checking.",
          "Use secure functions not vulnerable to buffer overflow.",
          "If you have to use dangerous functions, make sure that you do boundary checking.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Use OS-level preventative functionality. Not a complete solution."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 9,
        "name": "Buffer Overflow in Local Command-Line Utilities",
        "description": "This attack targets command-line utilities available in a number of shells. An adversary can leverage a vulnerability found in a command-line utility to escalate privilege to root.",
        "prerequisites": [
          "The target host exposes a command-line utility to the user.",
          "The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited."
        ],
        "relatedWeaknesses": [
          120,
          118,
          119,
          74,
          20,
          680,
          733,
          697
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Availability Unreliable Execution",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.",
          "Use a language or compiler that performs automatic bounds checking.",
          "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Operational: Use OS-level preventative functionality. Not a complete solution.",
          "Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.",
          "Do not unnecessarily expose services."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 10,
        "name": "Buffer Overflow via Environment Variables",
        "description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
        "prerequisites": [
          "The application uses environment variables.",
          "An environment variable exposed to the user is vulnerable to a buffer overflow.",
          "The vulnerable environment variable uses untrusted data.",
          "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."
        ],
        "relatedWeaknesses": [
          120,
          302,
          118,
          119,
          74,
          99,
          20,
          680,
          733,
          697
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Do not expose environment variable to the user.",
          "Do not use untrusted data in your environment variables.",
          "Use a language or compiler that performs automatic bounds checking",
          "There are tools such as Sharefuzz [REF-2] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 11,
        "name": "Cause Web Server Misclassification",
        "description": "An attack of this type exploits a Web server's decision to take action based on filename or file extension. Because different file types are handled by different server processes, misclassification may force the Web server to take unexpected action, or expected actions in an unexpected sequence. This may cause the server to exhaust resources, supply debug or system data to the attacker, or bind an attacker to a remote process.",
        "prerequisites": [
          "Web server software must rely on file name or file extension for processing.",
          "The attacker must be able to make HTTP requests to the web server."
        ],
        "relatedWeaknesses": [
          430
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Implementation: Server routines should be determined by content not determined by filename or file extension."
        ],
        "relatedAttackPatterns": [
          635
        ]
      },
      {
        "id": 12,
        "name": "Choosing Message Identifier",
        "description": "This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
        "prerequisites": [
          "Information and client-sensitive (and client-specific) data must be present through a distribution channel available to all users.",
          "Distribution means must code (through channel, message identifiers, or convention) message destination in a manner visible within the distribution means itself (such as a control channel) or in the messages themselves."
        ],
        "relatedWeaknesses": [
          201,
          306
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Associate some ACL (in the form of a token) with an authenticated user which they provide middleware. The middleware uses this token as part of its channel/message selection for that client, or part of a discerning authorization decision for privileged channels/messages. The purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message.",
          "Re-architect system input/output channels as appropriate to distribute self-protecting data. That is, encrypt (or otherwise protect) channels/messages so that only authorized readers can see them."
        ],
        "relatedAttackPatterns": [
          21,
          216
        ]
      },
      {
        "id": 13,
        "name": "Subverting Environment Variable Values",
        "description": "The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.",
        "prerequisites": [
          "An environment variable is accessible to the user.",
          "An environment variable used by the application can be tainted with user supplied data.",
          "Input data used in an environment variable is not validated properly.",
          "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an adversary may attempt to manipulate that variable."
        ],
        "relatedWeaknesses": [
          353,
          285,
          302,
          74,
          15,
          73,
          20,
          200
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism",
          "Availability Unreliable Execution",
          "Confidentiality Read Data",
          "Accountability Hide Activities"
        ],
        "mitigations": [
          "Protect environment variables against unauthorized read and write access.",
          "Protect the configuration files which contain environment variables against illegitimate read and write access.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
          "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."
        ],
        "relatedAttackPatterns": [
          77,
          14,
          10
        ]
      },
      {
        "id": 14,
        "name": "Client-side Injection-induced Buffer Overflow",
        "description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.",
        "prerequisites": [
          "The targeted client software communicates with an external server.",
          "The targeted client software has a buffer overflow vulnerability."
        ],
        "relatedWeaknesses": [
          120,
          353,
          118,
          119,
          74,
          20,
          680,
          697
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "The client software should not install untrusted code from a non-authenticated server.",
          "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.",
          "Perform input validation for length of buffer inputs.",
          "Use a language or compiler that performs automatic bounds checking.",
          "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Ensure all buffer uses are consistently bounds-checked.",
          "Use OS-level preventative functionality. Not a complete solution."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 15,
        "name": "Command Delimiters",
        "description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
        "prerequisites": [
          "Software's input validation or filtering must not detect and block presence of additional malicious command."
        ],
        "relatedWeaknesses": [
          146,
          77,
          184,
          78,
          185,
          93,
          140,
          157,
          138,
          154,
          697
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
          "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
          "Implementation: Perform input validation for all remote content.",
          "Implementation: Use type conversions such as JDBC prepared statements."
        ],
        "relatedAttackPatterns": [
          137
        ]
      },
      {
        "id": 16,
        "name": "Dictionary-based Password Attack",
        "description": "An attacker tries each of the words in a dictionary as passwords to gain access to the system via some user's account. If the password chosen by the user was a word within the dictionary, this attack will be successful (in the absence of other mitigations). This is a specific instance of the password brute forcing attack pattern. Dictionary Attacks differ from similar attacks such as Password Spraying (CAPEC-565) and Credential Stuffing (CAPEC-600), since they leverage unknown username/password combinations and don't care about inducing account lockouts.",
        "prerequisites": [
          "The system uses one factor password based authentication.",
          "The system does not have a sound password policy that is being enforced.",
          "The system does not implement an effective password throttling mechanism."
        ],
        "relatedWeaknesses": [
          521,
          262,
          263,
          654,
          307,
          308,
          309
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.",
          "Leverage multi-factor authentication for all authentication services."
        ],
        "relatedAttackPatterns": [
          49,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 17,
        "name": "Using Malicious Files",
        "description": "An attack of this type exploits a system's configuration that allows an adversary to either directly access an executable file, for example through shell access; or in a possible worst case allows an adversary to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface.",
        "prerequisites": [
          "System's configuration must allow an attacker to directly access executable files or upload files to execute. This means that any access control system that is supposed to mediate communications between the subject and the object is set incorrectly or assumes a benign environment."
        ],
        "relatedWeaknesses": [
          732,
          285,
          272,
          59,
          282,
          270,
          693
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
          "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
        ],
        "relatedAttackPatterns": [
          122,
          233
        ]
      },
      {
        "id": 18,
        "name": "XSS Targeting Non-Script Elements",
        "description": "This attack is a form of Cross-Site Scripting (XSS) where malicious scripts are embedded in elements that are not expected to host scripts such as image tags ( ), comments in XML documents ( ), etc. These tags may not be subject to the same input validation, output validation, and other content filtering and checking routines, so this can create an opportunity for an adversary to tunnel through the application's elements and launch a XSS attack through other elements. As with all remote attacks, it is important to differentiate the ability to launch an attack (such as probing an internal network for unpatched servers) and the ability of the remote adversary to collect and interpret the output of said attack.",
        "prerequisites": [
          "The target client software must allow the execution of scripts generated by remote hosts."
        ],
        "relatedWeaknesses": [
          80
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "In addition to the traditional input fields, all other user controllable inputs, such as image tags within messages or the likes, must also be subjected to input validation. Such validation should ensure that content that can be potentially interpreted as script by the browser is appropriately filtered.",
          "All output displayed to clients must be properly escaped. Escaping ensures that the browser interprets special scripting characters literally and not as script to be executed."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 19,
        "name": "Embedding Scripts within Scripts",
        "description": "An adversary leverages the capability to execute their own script by embedding it within other scripts that the target software is likely to execute due to programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts.",
        "prerequisites": [
          "Target software must be able to execute scripts, and also grant the adversary privilege to write/upload scripts."
        ],
        "relatedWeaknesses": [
          284
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use browser technologies that do not allow client side scripting.",
          "Utilize strict type, character, and encoding enforcement.",
          "Server side developers should not proxy content via XHR or other means. If a HTTP proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
          "Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Perform input validation for all remote content.",
          "Perform output validation for all remote content.",
          "Disable scripting languages such as JavaScript in browser",
          "Session tokens for specific host",
          "Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.",
          "Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode"
        ],
        "relatedAttackPatterns": [
          242
        ]
      },
      {
        "id": 20,
        "name": "Encryption Brute Forcing",
        "description": "An attacker, armed with the cipher text and the encryption algorithm used, performs an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext.",
        "prerequisites": [
          "Ciphertext is known.",
          "Encryption algorithm and key size are known."
        ],
        "relatedWeaknesses": [
          326,
          327,
          693,
          1204
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Use commonly accepted algorithms and recommended key sizes. The key size used will depend on how important it is to keep the data confidential and for how long.",
          "In theory a brute force attack performing an exhaustive key space search will always succeed, so the goal is to have computational security. Moore's law needs to be taken into account that suggests that computing resources double every eighteen months."
        ],
        "relatedAttackPatterns": [
          112,
          668
        ]
      },
      {
        "id": 21,
        "name": "Exploitation of Trusted Identifiers",
        "description": "An adversary guesses, obtains, or \"rides\" a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service.",
        "prerequisites": [
          "Server software must rely on weak identifier proof and/or verification schemes.",
          "Identifiers must have long lifetimes and potential for reusability.",
          "Server software must allow concurrent sessions to exist."
        ],
        "relatedWeaknesses": [
          290,
          302,
          346,
          539,
          6,
          384,
          664,
          602,
          642
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: utilize strong federated identity such as SAML to encrypt and sign identity tokens in transit.",
          "Implementation: Use industry standards session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf.",
          "Implementation: If the identifier is used for authentication, such as in the so-called single sign on use cases, then ensure that it is protected at the same level of assurance as authentication tokens.",
          "Implementation: If the web or application server supports it, then encrypting and/or signing the identifier (such as cookie) can protect the ID if intercepted.",
          "Design: Use strong session identifiers that are protected in transit and at rest.",
          "Implementation: Utilize a session timeout for all sessions, for example 20 minutes. If the user does not explicitly logout, the server terminates their session after this period of inactivity. If the user logs back in then a new session key is generated.",
          "Implementation: Verify authenticity of all identifiers at runtime."
        ]
      },
      {
        "id": 22,
        "name": "Exploiting Trust in Client",
        "description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
        "prerequisites": [
          "Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."
        ],
        "relatedWeaknesses": [
          290,
          287,
          20,
          200,
          693
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
          "Design: Do not rely on client validation or encoding for security purposes.",
          "Design: Utilize digital signatures to increase authentication assurance.",
          "Design: Utilize two factor authentication to increase authentication assurance.",
          "Implementation: Perform input validation for all remote content."
        ]
      },
      {
        "id": 23,
        "name": "File Content Injection",
        "description": "An adversary poisons files with a malicious payload (targeting the file systems accessible by the target software), which may be passed through by standard channels such as via email, and standard web content like PDF and multimedia files. The adversary exploits known vulnerabilities or handling routines in the target processes, in order to exploit the host's trust in executing remote content, including binary files.",
        "prerequisites": [
          "The target software must consume files.",
          "The adversary must have access to modify files that the target software will consume."
        ],
        "relatedWeaknesses": [
          20
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Validate all input for content including files. Ensure that if files and remote content must be accepted that once accepted, they are placed in a sandbox type location so that lower assurance clients cannot write up to higher assurance processes (like Web server processes for example)",
          "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
          "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
          "Implementation: Virus scanning on host",
          "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin."
        ],
        "relatedAttackPatterns": [
          242,
          165
        ]
      },
      {
        "id": 24,
        "name": "Filter Failure through Buffer Overflow",
        "description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
        "prerequisites": [
          "Ability to control the length of data passed to an active filter."
        ],
        "relatedWeaknesses": [
          120,
          119,
          118,
          74,
          20,
          680,
          733,
          697
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.",
          "Pre-design: Use a language or compiler that performs automatic bounds checking.",
          "Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Operational: Use OS-level preventative functionality. Not a complete solution.",
          "Design: Use an abstraction library to abstract away risky APIs. Not a complete solution."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 25,
        "name": "Forced Deadlock",
        "description": "The adversary triggers and exploits a deadlock condition in the target software to cause a denial of service. A deadlock can occur when two or more competing actions are waiting for each other to finish, and thus neither ever does. Deadlock conditions can be difficult to detect.",
        "prerequisites": [
          "The target host has a deadlock condition. There are four conditions for a deadlock to occur, known as the Coffman conditions. [REF-101]",
          "The target host exposes an API to the user."
        ],
        "relatedWeaknesses": [
          412,
          567,
          662,
          667,
          833,
          1322
        ],
        "consequences": [
          "Availability Resource Consumption A successful forced deadlock attack compromises the availability of the system by exhausting its available resources."
        ],
        "mitigations": [
          "Use known algorithm to avoid deadlock condition (for instance non-blocking synchronization algorithms).",
          "For competing actions, use well-known libraries which implement synchronization."
        ]
      },
      {
        "id": 26,
        "name": "Leveraging Race Conditions",
        "description": "The adversary targets a race condition occurring when multiple processes access and manipulate the same resource concurrently, and the outcome of the execution depends on the particular order in which the access takes place. The adversary can leverage a race condition by \"running the race\", modifying the resource and modifying the normal execution flow. For instance, a race condition can occur while accessing a file: the adversary can trick the system by replacing the original file with their version and cause the system to read the malicious file.",
        "prerequisites": [
          "A resource is accessed/modified concurrently by multiple processes such that a race condition exists.",
          "The adversary has the ability to modify the resource."
        ],
        "relatedWeaknesses": [
          368,
          363,
          366,
          370,
          362,
          662,
          689,
          667,
          665,
          1223,
          1254,
          1298
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Use safe libraries to access resources such as files.",
          "Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.",
          "Use synchronization to control the flow of execution.",
          "Use static analysis tools to find race conditions.",
          "Pay attention to concurrency problems related to the access of resources."
        ]
      },
      {
        "id": 27,
        "name": "Leveraging Race Conditions via Symbolic Links",
        "description": "This attack leverages the use of symbolic links (Symlinks) in order to write to sensitive files. An attacker can create a Symlink link to a target file not otherwise accessible to them. When the privileged program tries to create a temporary file with the same name as the Symlink link, it will actually write to the target file pointed to by the attackers' Symlink link. If the attacker can insert malicious content in the temporary file they will be writing to the sensitive file by using the Symlink. The race occurs because the system checks if the temporary file exists, then creates the file. The attacker would typically create the Symlink during the interval between the check and the creation of the temporary file.",
        "prerequisites": [
          "The attacker is able to create Symlink links on the target host.",
          "Tainted data from the attacker is used and copied to temporary files.",
          "The target host does insecure temporary file creation."
        ],
        "relatedWeaknesses": [
          367,
          61,
          662,
          689,
          667
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Availability Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Use safe libraries when creating temporary files. For instance the standard library function mkstemp can be used to safely create temporary files. For shell scripts, the system utility mktemp does the same thing.",
          "Access to the directories should be restricted as to prevent attackers from manipulating the files. Denying access to a file can prevent an attacker from replacing that file with a link to a sensitive file.",
          "Follow the principle of least privilege when assigning access rights to files.",
          "Ensure good compartmentalization in the system to provide protected areas that can be trusted."
        ],
        "relatedAttackPatterns": [
          29
        ]
      },
      {
        "id": 28,
        "name": "Fuzzing",
        "description": "In this attack pattern, the adversary leverages fuzzing to try to identify weaknesses in the system. Fuzzing is a software security and functionality testing method that feeds randomly constructed input to the system and looks for an indication that a failure in response to that input has occurred. Fuzzing treats the system as a black box and is totally free from any preconceptions or assumptions about the system. Fuzzing can help an attacker discover certain assumptions made about user input in the system. Fuzzing gives an attacker a quick way of potentially uncovering some of these assumptions despite not necessarily knowing anything about the internals of the system. These assumptions can then be turned against the system by specially crafting user input that may allow an attacker to achieve their goals.",
        "relatedWeaknesses": [
          74,
          20
        ],
        "consequences": [
          "Integrity Modify Data",
          "Availability Unreliable Execution",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Alter Execution Logic"
        ],
        "mitigations": [
          "Test to ensure that the software behaves as per specification and that there are no unintended side effects. Ensure that no assumptions about the validity of data are made.",
          "Use fuzz testing during the software QA process to uncover any surprises, uncover any assumptions or unexpected behavior."
        ]
      },
      {
        "id": 29,
        "name": "Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions",
        "description": "This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. A typical example is file access. The adversary can leverage a file access race condition by \"running the race\", meaning that they would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the adversary could replace or modify the file, causing the application to behave unexpectedly.",
        "prerequisites": [
          "A resource is access/modified concurrently by multiple processes.",
          "The adversary is able to modify resource.",
          "A race condition exists while accessing a resource."
        ],
        "relatedWeaknesses": [
          367,
          368,
          366,
          370,
          362,
          662,
          691,
          663,
          665
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Alter Execution Logic",
          "Confidentiality Read Data",
          "Availability Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Use safe libraries to access resources such as files.",
          "Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.",
          "Use synchronization to control the flow of execution.",
          "Use static analysis tools to find race conditions.",
          "Pay attention to concurrency problems related to the access of resources."
        ],
        "relatedAttackPatterns": [
          26
        ]
      },
      {
        "id": 30,
        "name": "Hijacking a Privileged Thread of Execution",
        "description": "An adversary hijacks a privileged thread of execution by injecting malicious code into a running process. By using a privleged thread to do their bidding, adversaries can evade process-based detection that would stop an attack that creates a new process. This can lead to an adversary gaining access to the process's memory and can also enable elevated privileges. The most common way to perform this attack is by suspending an existing thread and manipulating its memory.",
        "prerequisites": [
          "The application in question employs a threaded model of execution with the threads operating at, or having the ability to switch to, a higher privilege level than normal users",
          "In order to feasibly execute this class of attacks, the adversary must have the ability to hijack a privileged thread. This ability includes, but is not limited to, modifying environment variables that affect the process the thread belongs to, or calling native OS calls that can suspend and alter process memory. This does not preclude network-based attacks, but makes them conceptually more difficult to identify and execute."
        ],
        "relatedWeaknesses": [
          270
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Application Architects must be careful to design callback, signal, and similar asynchronous constructs such that they shed excess privilege prior to handing control to user-written (thus untrusted) code.",
          "Application Architects must be careful to design privileged code blocks such that upon return (successful, failed, or unpredicted) that privilege is shed prior to leaving the block/scope."
        ],
        "relatedAttackPatterns": [
          233
        ]
      },
      {
        "id": 31,
        "name": "Accessing/Intercepting/Modifying HTTP Cookies",
        "description": "This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information.",
        "prerequisites": [
          "Target server software must be a HTTP daemon that relies on cookies.",
          "The cookies must contain sensitive information.",
          "The adversary must be able to make HTTP requests to the server, and the cookie must be contained in the reply."
        ],
        "relatedWeaknesses": [
          565,
          302,
          311,
          113,
          539,
          20,
          315,
          384,
          472,
          602,
          642
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Use input validation for cookies",
          "Design: Generate and validate MAC for cookies",
          "Implementation: Use SSL/TLS to protect cookie in transit",
          "Implementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software."
        ],
        "relatedAttackPatterns": [
          39,
          157
        ]
      },
      {
        "id": 32,
        "name": "XSS Through HTTP Query Strings",
        "description": "An adversary embeds malicious script code in the parameters of an HTTP query string and convinces a victim to submit the HTTP request that contains the query string to a vulnerable web application. The web application then procedes to use the values parameters without properly validation them first and generates the HTML code that will be executed by the victim's browser.",
        "prerequisites": [
          "Target client software must allow scripting such as JavaScript. Server software must allow display of remote generated HTML without sufficient input or output validation."
        ],
        "relatedWeaknesses": [
          80
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Design: Utilize strict type, character, and encoding enforcement",
          "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser",
          "Implementation: Session tokens for specific host",
          "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.",
          "Implementation: Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode"
        ],
        "relatedAttackPatterns": [
          591,
          588,
          592
        ]
      },
      {
        "id": 33,
        "name": "HTTP Request Smuggling",
        "description": "An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages using various HTTP headers, request-line and body parameters as well as message sizes (denoted by the end of message signaled by a given HTTP header) by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to secretly send unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server). See CanPrecede relationships for possible consequences.",
        "prerequisites": [
          "An additional intermediary HTTP agent such as an application firewall or a web caching proxy between the adversary and the second agent such as a web server, that sends multiple HTTP messages over same network connection.",
          "Differences in the way the two HTTP agents parse and interpret HTTP requests and its headers.",
          "HTTP agents running on HTTP/1.1 that allow for Keep Alive mode, Pipelined queries, and Chunked queries and responses."
        ],
        "relatedWeaknesses": [
          444
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
          "Configuration: front-end HTTP agents notice ambiguous requests.",
          "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
          "Configuration: Disable reuse of back-end connections.",
          "Configuration: Use HTTP/2 for back-end connections.",
          "Configuration: Use the same web server software for front-end and back-end server.",
          "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
          "Configuration: Prioritize Transfer-Encoding header over Content-Length, whenever an HTTP message contains both.",
          "Configuration: Disallow HTTP messages with both Transfer-Encoding and Content-Length or Double Content-Length Headers.",
          "Configuration: Disallow Malformed/Invalid Transfer-Encoding Headers used in obfuscation, such as:",
          "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
          "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
          "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
        ],
        "relatedAttackPatterns": [
          220,
          273,
          115,
          141,
          63,
          593,
          148,
          154
        ]
      },
      {
        "id": 34,
        "name": "HTTP Response Splitting",
        "description": "An adversary manipulates and injects malicious content, in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., web server) or into an already spoofed HTTP response from an adversary controlled domain/site. See CanPrecede relationships for possible consequences.",
        "prerequisites": [
          "A vulnerable or compromised server or domain/site capable of allowing adversary to insert/inject malicious content that will appear in the server's response to target HTTP agents (e.g., proxies and users' web browsers).",
          "Differences in the way the two HTTP agents parse and interpret HTTP requests and its headers.",
          "HTTP headers capable of being user-manipulated.",
          "HTTP agents running on HTTP/1.0 or HTTP/1.1 that allow for Keep Alive mode, Pipelined queries, and Chunked queries and responses."
        ],
        "relatedWeaknesses": [
          74,
          113,
          138,
          436
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
          "Configuration: front-end HTTP agents notice ambiguous requests.",
          "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
          "Configuration: Disable reuse of back-end connections.",
          "Configuration: Use HTTP/2 for back-end connections.",
          "Configuration: Use the same web server software for front-end and back-end server.",
          "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
          "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
          "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
          "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
        ],
        "relatedAttackPatterns": [
          220,
          105,
          115,
          141,
          63,
          593,
          148,
          154
        ]
      },
      {
        "id": 35,
        "name": "Leverage Executable Code in Non-Executable Files",
        "description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
        "prerequisites": [
          "The attacker must have the ability to modify non-executable files consumed by the target software."
        ],
        "relatedWeaknesses": [
          94,
          96,
          95,
          97,
          272,
          59,
          282,
          270
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
          "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
          "Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.",
          "Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute."
        ],
        "relatedAttackPatterns": [
          636,
          23,
          75
        ]
      },
      {
        "id": 36,
        "name": "Using Unpublished Interfaces or Functionality",
        "description": "An adversary searches for and invokes interfaces or functionality that the target system designers did not intend to be publicly available. If interfaces fail to authenticate requests, the attacker may be able to invoke functionality they are not authorized for.",
        "prerequisites": [
          "The architecture under attack must publish or otherwise make available services that clients can attach to, either in an unauthenticated fashion, or having obtained an authentication token elsewhere. The service need not be 'discoverable', but in the event it isn't it must have some way of being discovered by an attacker. This might include listening on a well-known port. Ultimately, the likelihood of exploit depends on discoverability of the vulnerable service."
        ],
        "relatedWeaknesses": [
          306,
          693,
          695,
          1242
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Authenticating both services and their discovery, and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means, including: 1) protecting the channel over which authentication occurs, 2) preventing the theft, forgery, or prediction of authentication credentials or the resultant tokens, or 3) subversion of password reset and the like."
        ],
        "relatedAttackPatterns": [
          113
        ]
      },
      {
        "id": 37,
        "name": "Retrieve Embedded Sensitive Data",
        "description": "An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.",
        "prerequisites": [
          "In order to feasibly execute this type of attack, some valuable data must be present in client software.",
          "Additionally, this information must be unprotected, or protected in a flawed fashion, or through a mechanism that fails to resist reverse engineering, statistical, or other attack."
        ],
        "relatedWeaknesses": [
          226,
          311,
          525,
          312,
          314,
          315,
          318,
          1239,
          1258,
          1266,
          1272,
          1278,
          1301,
          1330
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "relatedAttackPatterns": [
          167
        ]
      },
      {
        "id": 38,
        "name": "Leveraging/Manipulating Configuration File Search Paths",
        "description": "This pattern of attack sees an adversary load a malicious resource into a program's standard path so that when a known command is executed then the system instead executes the malicious component. The adversary can either modify the search path a program uses, like a PATH variable or classpath, or they can manipulate resources on the path to point to their malicious components. J2EE applications and other component based applications that are built from multiple binaries can have very long list of dependencies to execute. If one of these libraries and/or references is controllable by the attacker then application controls can be circumvented by the attacker.",
        "prerequisites": [
          "The attacker must be able to write to redirect search paths on the victim host."
        ],
        "relatedWeaknesses": [
          426,
          427
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Ensure that the program's compound parts, including all system dependencies, classpath, path, and so on, are secured to the same or higher level assurance as the program",
          "Implementation: Host integrity monitoring"
        ],
        "relatedAttackPatterns": [
          159
        ]
      },
      {
        "id": 39,
        "name": "Manipulating Opaque Client-based Data Tokens",
        "description": "In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation.",
        "prerequisites": [
          "An attacker already has some access to the system or can steal the client based data tokens from another user who has access to the system.",
          "For an Attacker to viably execute this attack, some data (later interpreted by the application) must be held client-side in a way that can be manipulated without detection. This means that the data or tokens are not CRCd as part of their value or through a separate meta-data store elsewhere."
        ],
        "relatedWeaknesses": [
          353,
          285,
          302,
          472,
          565,
          315,
          539,
          384,
          233
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "One solution to this problem is to protect encrypted data with a CRC of some sort. If knowing who last manipulated the data is important, then using a cryptographic \"message authentication code\" (or hMAC) is prescribed. However, this guidance is not a panacea. In particular, any value created by (and therefore encrypted by) the client, which itself is a \"malicious\" value, all the protective cryptography in the world can't make the value 'correct' again. Put simply, if the client has control over the whole process of generating and encoding the value, then simply protecting its integrity doesn't help.",
          "Make sure to protect client side authentication tokens for confidentiality (encryption) and integrity (signed hash)",
          "Make sure that all session tokens use a good source of randomness",
          "Perform validation on the server side to make sure that client side data tokens are consistent with what is expected."
        ],
        "relatedAttackPatterns": [
          22
        ]
      },
      {
        "id": 40,
        "name": "Manipulating Writeable Terminal Devices",
        "description": "This attack exploits terminal devices that allow themselves to be written to by other users. The attacker sends command strings to the target terminal device hoping that the target user will hit enter and thereby execute the malicious command with their privileges. The attacker can send the results (such as copying /etc/passwd) to a known directory and collect once the attack has succeeded.",
        "prerequisites": [
          "User terminals must have a permissive access control such as world writeable that allows normal users to control data on other user's terminals."
        ],
        "relatedWeaknesses": [
          77
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Design: Ensure that terminals are only writeable by named owner user and/or administrator",
          "Design: Enforce principle of least privilege"
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 41,
        "name": "Using Meta-characters in E-mail Headers to Inject Malicious Payloads",
        "description": "This type of attack involves an attacker leveraging meta-characters in email headers to inject improper behavior into email programs. Email software has become increasingly sophisticated and feature-rich. In addition, email applications are ubiquitous and connected directly to the Web making them ideal targets to launch and propagate attacks. As the user demand for new functionality in email applications grows, they become more like browsers with complex rendering and plug in routines. As more email functionality is included and abstracted from the user, this creates opportunities for attackers. Virtually all email applications do not list email header information by default, however the email header contains valuable attacker vectors for the attacker to exploit particularly if the behavior of the email client application is known. Meta-characters are hidden from the user, but can contain scripts, enumerations, probes, and other attacks against the user's system.",
        "prerequisites": [
          "This attack targets most widely deployed feature rich email applications, including web based email programs."
        ],
        "relatedWeaknesses": [
          150,
          88,
          697
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Design: Perform validation on email header data",
          "Implementation: Implement email filtering solutions on mail server or on MTA, relay server.",
          "Implementation: Mail servers that perform strict validation may catch these attacks, because metacharacters are not allowed in many header variables such as dns names"
        ],
        "relatedAttackPatterns": [
          242,
          134
        ]
      },
      {
        "id": 42,
        "name": "MIME Conversion",
        "description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
        "prerequisites": [
          "The target system uses a mail server.",
          "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."
        ],
        "relatedWeaknesses": [
          120,
          119,
          74,
          20
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Availability Unreliable Execution",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Stay up to date with third party vendor patches",
          "Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file. For example, a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration): This can be achieved for the \"Mlocal\" and \"Mprog\" Mailers by modifying the \".mc\" file to include the following lines: and then rebuilding the sendmail.cf file using m4(1). From \"Exploiting Software\", please see reference below. Mlocal, P=/usr/libexec/mail.local, F=lsDFMAw5:/|@qrmn, S=10/30, R=20/40,Mprog, P=/bin/sh, F=lsDFMoqeu, S=10/30, R=20/40, define(`LOCAL_MAILER_FLAGS',define(`LOCAL_SHELL_FLAGS',",
          "Use the sendmail restricted shell program (smrsh)",
          "Use mail.local"
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 43,
        "name": "Exploiting Multiple Input Interpretation Layers",
        "description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: --> --> . In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
        "prerequisites": [
          "User input is used to construct a command to be executed on the target system or as part of the file name.",
          "Multiple parser passes are performed on the data supplied by the user."
        ],
        "relatedWeaknesses": [
          179,
          181,
          184,
          183,
          77,
          78,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
          "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 44,
        "name": "Overflow Binary Resource File",
        "description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the adversary access to the execution stack and execute arbitrary code in the target process.",
        "prerequisites": [
          "Target software processes binary resource files.",
          "Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file."
        ],
        "relatedWeaknesses": [
          120,
          119,
          697
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Perform appropriate bounds checking on all buffers.",
          "Design: Enforce principle of least privilege",
          "Design: Static code analysis",
          "Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes",
          "Implementation: Keep software patched to ensure that known vulnerabilities are not available for adversaries to target on host."
        ],
        "relatedAttackPatterns": [
          100,
          23
        ]
      },
      {
        "id": 45,
        "name": "Buffer Overflow via Symbolic Links",
        "description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An adversary can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
        "prerequisites": [
          "The adversary can create symbolic link on the target host.",
          "The target host does not perform correct boundary checking while consuming data from a resources."
        ],
        "relatedWeaknesses": [
          120,
          285,
          302,
          118,
          119,
          74,
          20,
          680,
          697
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.",
          "Because Symlink can be modified by an adversary, make sure that the ones you read are located in protected directories.",
          "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.",
          "Always check the size of the input data before copying to a buffer.",
          "Use a language or compiler that performs automatic bounds checking.",
          "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Use OS-level preventative functionality. Not a complete solution."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 46,
        "name": "Overflow Variables and Tags",
        "description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The adversary crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
        "prerequisites": [
          "The target program consumes user-controllable data in the form of tags or variables.",
          "The target program does not perform sufficient boundary checking."
        ],
        "relatedWeaknesses": [
          120,
          118,
          119,
          74,
          20,
          680,
          733,
          697
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Use a language or compiler that performs automatic bounds checking.",
          "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Use OS-level preventative functionality. Not a complete solution.",
          "Do not trust input data from user. Validate all user input."
        ],
        "relatedAttackPatterns": [
          100,
          8,
          10
        ]
      },
      {
        "id": 47,
        "name": "Buffer Overflow via Parameter Expansion",
        "description": "In this attack, the target software is given input that the adversary knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
        "prerequisites": [
          "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.",
          "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."
        ],
        "relatedWeaknesses": [
          120,
          119,
          118,
          130,
          131,
          74,
          20,
          680,
          697
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Availability Unreliable Execution",
          "Integrity Modify Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system"
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 48,
        "name": "Passing Local Filenames to Functions That Expect a URL",
        "description": "This attack relies on client side code to access local files and resources instead of URLs. When the client browser is expecting a URL string, but instead receives a request for a local file, that execution is likely to occur in the browser process space with the browser's authority to local files. The attacker can send the results of this request to the local files out to a site that they control. This attack may be used to steal sensitive authentication data (either local or remote), or to gain system profile information to launch further attacks.",
        "prerequisites": [
          "The victim's software must not differentiate between the location and type of reference passed the client software, e.g. browser"
        ],
        "relatedWeaknesses": [
          241,
          706
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Ensure all configuration files and resource are either removed or protected when promoting code into production.",
          "Design: Use browser technologies that do not allow client side scripting.",
          "Implementation: Perform input validation for all remote content.",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser"
        ],
        "relatedAttackPatterns": [
          212
        ]
      },
      {
        "id": 49,
        "name": "Password Brute Forcing",
        "description": "An adversary tries every possible value for a password until they succeed. A brute force attack, if feasible computationally, will always be successful because it will essentially go through all possible passwords given the alphabet used (lower case letters, upper case letters, numbers, symbols, etc.) and the maximum length of the password.",
        "prerequisites": [
          "An adversary needs to know a username to target.",
          "The system uses password based authentication as the one factor authentication mechanism.",
          "An application does not have a password throttling mechanism in place. A good password throttling mechanism will make it almost impossible computationally to brute force a password as it may either lock out the user after a certain number of incorrect attempts or introduce time out periods. Both of these would make a brute force attack impractical."
        ],
        "relatedWeaknesses": [
          521,
          262,
          263,
          257,
          654,
          307,
          308,
          309
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.",
          "Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.",
          "Passwords need to be recycled to prevent aging, that is every once in a while a new password must be chosen."
        ],
        "relatedAttackPatterns": [
          112,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 50,
        "name": "Password Recovery Exploitation",
        "description": "An attacker may take advantage of the application feature to help users recover their forgotten passwords in order to gain access into the system with the same privileges as the original user. Generally password recovery schemes tend to be weak and insecure.",
        "prerequisites": [
          "The system allows users to recover their passwords and gain access back into the system.",
          "Password recovery mechanism has been designed or implemented insecurely.",
          "Password recovery mechanism relies only on something the user knows and not something the user has.",
          "No third party intervention is required to use the password recovery mechanism."
        ],
        "relatedWeaknesses": [
          522,
          640
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use multiple security questions (e.g. have three and make the user answer two of them correctly). Let the user select their own security questions or provide them with choices of questions that are not generic.",
          "E-mail the temporary password to the registered e-mail address of the user rather than letting the user reset the password online.",
          "Ensure that your password recovery functionality is not vulnerable to an injection style attack."
        ],
        "relatedAttackPatterns": [
          212,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 51,
        "name": "Poison Web Service Registry",
        "description": "SOA and Web Services often use a registry to perform look up, get schema information, and metadata about services. A poisoned registry can redirect (think phishing for servers) the service requester to a malicious service provider, provide incorrect information in schema or metadata, and delete information about service provider interfaces.",
        "prerequisites": [
          "The attacker must be able to write to resources or redirect access to the service registry."
        ],
        "relatedWeaknesses": [
          285,
          74,
          693
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Harden registry server and file access permissions",
          "Implementation: Implement communications to and from the registry using secure protocols"
        ],
        "relatedAttackPatterns": [
          203
        ]
      },
      {
        "id": 52,
        "name": "Embedding NULL Bytes",
        "description": "An adversary embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s).",
        "prerequisites": [
          "The program does not properly handle postfix NULL terminators"
        ],
        "relatedWeaknesses": [
          158,
          172,
          173,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Properly handle the NULL characters supplied as part of user input prior to doing anything with the data."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 53,
        "name": "Postfix, Null Terminate, and Backslash",
        "description": "If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an adversary to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used.",
        "prerequisites": [
          "Null terminators are not properly handled by the filter."
        ],
        "relatedWeaknesses": [
          158,
          172,
          173,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 54,
        "name": "Query System for Information",
        "description": "An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide.",
        "prerequisites": [
          "This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify, map, and identify vulnerable aspects of an application, it simply requires hypotheses to be verified, interaction with the application, and time to conduct trial-and-error activities."
        ],
        "relatedWeaknesses": [
          209
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Application designers can construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are cataloged and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally.",
          "Application designers can wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion."
        ],
        "relatedAttackPatterns": [
          116
        ]
      },
      {
        "id": 55,
        "name": "Rainbow Table Password Cracking",
        "description": "An attacker gets access to the database table where hashes of passwords are stored. They then use a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system.",
        "prerequisites": [
          "Hash of the original password is available to the attacker. For a better chance of success, an attacker should have more than one hash of the original password, and ideally the whole table.",
          "Salt was not used to create the hash of the original password. Otherwise the rainbow tables have to be re-computed, which is very expensive and will make the attack effectively infeasible (especially if salt was added in iterations).",
          "The system uses one factor password based authentication."
        ],
        "relatedWeaknesses": [
          261,
          521,
          262,
          263,
          654,
          916,
          308,
          309
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use salt when computing password hashes. That is, concatenate the salt (random bits) with the original password prior to hashing it."
        ],
        "relatedAttackPatterns": [
          49,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 56,
        "name": "DEPRECATED: Removing/short-circuiting 'guard logic'",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-207 : Removing Important Client Functionality. Please refer to this other pattern going forward."
      },
      {
        "id": 57,
        "name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
        "description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
        "prerequisites": [
          "Opportunity to intercept must exist beyond the point where SSL is terminated.",
          "The adversary must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path."
        ],
        "relatedWeaknesses": [
          300,
          287,
          693
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Implementation: Implement message level security such as HMAC in the HTTP communication",
          "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL",
          "Design: Enforce principle of least privilege"
        ],
        "relatedAttackPatterns": [
          157
        ]
      },
      {
        "id": 58,
        "name": "Restful Privilege Elevation",
        "description": "An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages.",
        "prerequisites": [
          "The attacker needs to be able to identify HTTP Get URLs. The Get methods must be set to call applications that perform operations other than get such as update and delete."
        ],
        "relatedWeaknesses": [
          267,
          269
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Implementation: Ensure that HTTP Get methods only retrieve state and do not alter state on the server side",
          "Implementation: Ensure that HTTP methods have proper ACLs based on what the functionality they expose"
        ],
        "relatedAttackPatterns": [
          1,
          180
        ]
      },
      {
        "id": 59,
        "name": "Session Credential Falsification through Prediction",
        "description": "This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking.",
        "prerequisites": [
          "The target host uses session IDs to keep track of the users.",
          "Session IDs are used to control access to resources.",
          "The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time)."
        ],
        "relatedWeaknesses": [
          290,
          330,
          331,
          346,
          488,
          539,
          200,
          6,
          285,
          384,
          693
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use a strong source of randomness to generate a session ID.",
          "Use adequate length session IDs",
          "Do not use information available to the user in order to generate session ID (e.g., time).",
          "Ideas for creating random numbers are offered by Eastlake [RFC1750]",
          "Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format."
        ],
        "relatedAttackPatterns": [
          196
        ]
      },
      {
        "id": 60,
        "name": "Reusing Session IDs (aka Session Replay)",
        "description": "This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay.",
        "prerequisites": [
          "The target host uses session IDs to keep track of the users.",
          "Session IDs are used to control access to resources.",
          "The session IDs used by the target host are not well protected from session theft."
        ],
        "relatedWeaknesses": [
          294,
          290,
          346,
          384,
          488,
          539,
          200,
          285,
          664,
          732
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Always invalidate a session ID after the user logout.",
          "Setup a session time out for the session IDs.",
          "Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate adversary in the middle attacks (CAPEC-94).",
          "Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker.",
          "Encrypt the session data associated with the session ID.",
          "Use multifactor authentication."
        ],
        "relatedAttackPatterns": [
          593
        ]
      },
      {
        "id": 61,
        "name": "Session Fixation",
        "description": "The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker. Once the user successfully authenticates to the target software, the attacker uses the (now privileged) session identifier in their own transactions. This attack leverages the fact that the target software either relies on client-generated session identifiers or maintains the same session identifiers after privilege elevation.",
        "prerequisites": [
          "Session identifiers that remain unchanged when the privilege levels change.",
          "Permissive session management mechanism that accepts random user-generated session identifiers",
          "Predictable session identifiers"
        ],
        "relatedWeaknesses": [
          384,
          664,
          732
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use a strict session management mechanism that only accepts locally generated session identifiers: This prevents attackers from fixating session identifiers of their own choice.",
          "Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes.",
          "Use session identifiers that are difficult to guess or brute-force: One way for the attackers to obtain valid session identifiers is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult."
        ],
        "relatedAttackPatterns": [
          593
        ]
      },
      {
        "id": 62,
        "name": "Cross Site Request Forgery",
        "description": "An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie.",
        "relatedWeaknesses": [
          352,
          306,
          664,
          732,
          1275
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.",
          "Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context.",
          "Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.",
          "In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context."
        ],
        "relatedAttackPatterns": [
          21
        ]
      },
      {
        "id": 63,
        "name": "Cross-Site Scripting (XSS)",
        "description": "An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.",
        "prerequisites": [
          "Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser."
        ],
        "relatedWeaknesses": [
          79,
          20
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Design: Utilize strict type, character, and encoding enforcement",
          "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Perform input validation for all remote content.",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Session tokens for specific host",
          "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
        ],
        "relatedAttackPatterns": [
          242,
          107
        ]
      },
      {
        "id": 64,
        "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
        "description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
        "prerequisites": [
          "The application accepts and decodes URL string request.",
          "The application performs insufficient filtering/canonicalization on the URLs."
        ],
        "relatedWeaknesses": [
          177,
          173,
          172,
          73,
          22,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
          "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
          "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
          "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
          "Refer to the RFCs to safely decode URL.",
          "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
          "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 65,
        "name": "Sniff Application Code",
        "description": "An adversary passively sniffs network communications and captures application code bound for an authorized client. Once obtained, they can use it as-is, or through reverse-engineering glean sensitive information or exploit the trust relationship between the client and server. Such code may belong to a dynamic update to the client, a patch being applied to a client component or any such interaction where the client is authorized to communicate with the server.",
        "prerequisites": [
          "The attacker must have the ability to place themself in the communication path between the client and server.",
          "The targeted application must receive some application code from the server; for example, dynamic updates, patches, applets or scripts.",
          "The attacker must be able to employ a sniffer on the network without being detected."
        ],
        "relatedWeaknesses": [
          319,
          311,
          318,
          693
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Encrypt all communication between the client and server.",
          "Implementation: Use SSL, SSH, SCP.",
          "Operation: Use \"ifconfig/ipconfig\" or other tools to detect the sniffer installed in the network."
        ],
        "relatedAttackPatterns": [
          157,
          37
        ]
      },
      {
        "id": 66,
        "name": "SQL Injection",
        "description": "This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input.",
        "prerequisites": [
          "SQL queries used by the application to store, retrieve or modify data.",
          "User-controllable input that is not properly validated by the application as part of SQL queries."
        ],
        "relatedWeaknesses": [
          89,
          1286
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear.",
          "Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically.",
          "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 67,
        "name": "String Format Overflow in syslog()",
        "description": "This attack targets applications and software that uses the syslog() function insecurely. If an application does not explicitely use a format string parameter in a call to syslog(), user input can be placed in the format string parameter leading to a format string injection attack. Adversaries can then inject malicious format string commands into the function call leading to a buffer overflow. There are many reported software vulnerabilities with the root cause being a misuse of the syslog() function.",
        "prerequisites": [
          "The Syslog function is used without specifying a format string argument, allowing user input to be placed direct into the function call as a format string."
        ],
        "relatedWeaknesses": [
          120,
          134,
          74,
          20,
          680,
          697
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Availability Unreliable Execution",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "The code should be reviewed for misuse of the Syslog function call. Manual or automated code review can be used. The reviewer needs to ensure that all format string functions are passed a static string which cannot be controlled by the user and that the proper number of arguments are always sent to that function as well. If at all possible, do not use the %n operator in format strings. The following code shows a correct usage of Syslog(): The following code shows a vulnerable usage of Syslog(): syslog(LOG_ERR, \"%s\", cmdBuf); syslog(LOG_ERR, cmdBuf);"
        ],
        "relatedAttackPatterns": [
          100,
          135
        ]
      },
      {
        "id": 68,
        "name": "Subvert Code-signing Facilities",
        "description": "Many languages use code signing facilities to vouch for code's identity and to thus tie code to its assigned privileges within an environment. Subverting this mechanism can be instrumental in an attacker escalating privilege. Any means of subverting the way that a virtual machine enforces code signing classifies for this style of attack.",
        "prerequisites": [
          "A framework-based language that supports code signing (such as, and most commonly, Java or .NET)",
          "Deployed code that has been signed by its authoring vendor, or a partner.",
          "The attacker will, for most circumstances, also need to be able to place code in the victim container. This does not necessarily mean that they will have to subvert host-level security, except when explicitly indicated."
        ],
        "relatedWeaknesses": [
          325,
          328,
          1326
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "A given code signing scheme may be fallible due to improper use of cryptography. Developers must never roll out their own cryptography, nor should existing primitives be modified or ignored.",
          "If an attacker cannot attack the scheme directly, they might try to alter the environment that affects the signing and verification processes. A possible mitigation is to avoid reliance on flags or environment variables that are user-controllable."
        ],
        "relatedAttackPatterns": [
          233
        ]
      },
      {
        "id": 69,
        "name": "Target Programs with Elevated Privileges",
        "description": "This attack targets programs running with elevated privileges. The adversary tries to leverage a vulnerability in the running program and get arbitrary code to execute with elevated privileges.",
        "prerequisites": [
          "The targeted program runs with elevated OS privileges.",
          "The targeted program accepts input data from the user or from another program.",
          "The targeted program is giving away information about itself. Before performing such attack, an eventual attacker may need to gather information about the services running on the host target. The more the host target is verbose about the services that are running (version number of application, etc.) the more information can be gather by an attacker.",
          "This attack often requires communicating with the host target services directly. For instance Telnet may be enough to communicate with the host target."
        ],
        "relatedWeaknesses": [
          250,
          15
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Availability Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Apply the principle of least privilege.",
          "Validate all untrusted data.",
          "Apply the latest patches.",
          "Scan your services and disable the ones which are not needed and are exposed unnecessarily. Exposing programs increases the attack surface. Only expose the services which are needed and have security mechanisms such as authentication built around them.",
          "Avoid revealing information about your system (e.g., version of the program) to anonymous users.",
          "Make sure that your program or service fail safely. What happen if the communication protocol is interrupted suddenly? What happen if a parameter is missing? Does your system have resistance and resilience to attack? Fail safely when a resource exhaustion occurs.",
          "If possible use a sandbox model which limits the actions that programs can take. A sandbox restricts a program to a set of privileges and commands that make it difficult or impossible for the program to cause any damage.",
          "Check your program for buffer overflow and format String vulnerabilities which can lead to execution of malicious code.",
          "Monitor traffic and resource usage and pay attention if resource exhaustion occurs.",
          "Protect your log file from unauthorized modification and log forging."
        ],
        "relatedAttackPatterns": [
          233,
          8,
          9,
          10,
          67
        ]
      },
      {
        "id": 70,
        "name": "Try Common or Default Usernames and Passwords",
        "description": "An adversary may try certain common or default usernames and passwords to gain access into the system and perform unauthorized actions. An adversary may try an intelligent brute force using empty passwords, known vendor default credentials, as well as a dictionary of common usernames and passwords. Many vendor products come preconfigured with default (and thus well-known) usernames and passwords that should be deleted prior to usage in a production environment. It is a common mistake to forget to remove these default login credentials. Another problem is that users would pick very simple (common) passwords (e.g. \"secret\" or \"password\") that make it easier for the attacker to gain access to the system compared to using a brute force attack or even a dictionary attack using a full dictionary.",
        "prerequisites": [
          "The system uses one factor password based authentication.The adversary has the means to interact with the system."
        ],
        "relatedWeaknesses": [
          521,
          262,
          263,
          798,
          654,
          308,
          309
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Delete all default account credentials that may be put in by the product vendor.",
          "Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.",
          "Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.",
          "Passwords need to be recycled to prevent aging, that is every once in a while a new password must be chosen."
        ],
        "relatedAttackPatterns": [
          49,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 71,
        "name": "Using Unicode Encoding to Bypass Validation Logic",
        "description": "An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly.",
        "prerequisites": [
          "Filtering is performed on data that has not be properly canonicalized."
        ],
        "relatedWeaknesses": [
          176,
          179,
          180,
          173,
          172,
          184,
          183,
          74,
          20,
          697,
          692
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Bypass Protection Mechanism",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Ensure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII.",
          "Ensure that filtering or input validation is applied to canonical data.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 72,
        "name": "URL Encoding",
        "description": "This attack targets the encoding of the URL. An adversary can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL.",
        "prerequisites": [
          "The application should accepts and decodes URL input.",
          "The application performs insufficient filtering/canonicalization on the URLs."
        ],
        "relatedWeaknesses": [
          173,
          177,
          172,
          73,
          74,
          20
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Refer to the RFCs to safely decode URL.",
          "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
          "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).",
          "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
          "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
          "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 73,
        "name": "User-Controlled Filename",
        "description": "An attack of this type involves an adversary inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities.",
        "prerequisites": [
          "The victim must trust the name and locale of user controlled filenames."
        ],
        "relatedWeaknesses": [
          20,
          184,
          96,
          348,
          116,
          350,
          86,
          697
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Availability Alter Execution Logic",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Perform input validation for all remote content.",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser",
          "Implementation: Scan dynamically generated content against validation specification"
        ],
        "relatedAttackPatterns": [
          165,
          592
        ]
      },
      {
        "id": 74,
        "name": "Manipulating State",
        "description": "The adversary modifies state information maintained by the target software or causes a state transition in hardware. If successful, the target will use this tainted state and execute in an unintended manner. State management is an important function within a software application. User state maintained by the application can include usernames, payment information, browsing history as well as application-specific contents such as items in a shopping cart. Manipulating user state can be employed by an adversary to elevate privilege, conduct fraudulent transactions or otherwise modify the flow of the application to derive certain benefits. If there is a hardware logic error in a finite state machine, the adversary can use this to put the system in an undefined state which could cause a denial of service or exposure of secure data.",
        "prerequisites": [
          "User state is maintained at least in some way in user-controllable locations, such as cookies or URL parameters.",
          "There is a faulty finite state machine in the hardware logic that can be exploited."
        ],
        "relatedWeaknesses": [
          372,
          315,
          353,
          693,
          1245,
          1253,
          1265,
          1271
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Do not rely solely on user-controllable locations, such as cookies or URL parameters, to maintain user state.",
          "Avoid sensitive information, such as usernames or authentication and authorization information, in user-controllable locations.",
          "Sensitive information that is part of the user state must be appropriately protected to ensure confidentiality and integrity at each request.",
          "All possible states must be handled by hardware finite state machines."
        ]
      },
      {
        "id": 75,
        "name": "Manipulating Writeable Configuration Files",
        "description": "Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.",
        "prerequisites": [
          "Configuration files must be modifiable by the attacker"
        ],
        "relatedWeaknesses": [
          349,
          99,
          77,
          346,
          353,
          354
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege",
          "Design: Backup copies of all configuration files",
          "Implementation: Integrity monitoring for configuration files",
          "Implementation: Enforce audit logging on code and configuration promotion procedures.",
          "Implementation: Load configuration from separate process and memory space, for example a separate physical device like a CD"
        ],
        "relatedAttackPatterns": [
          176
        ]
      },
      {
        "id": 76,
        "name": "Manipulating Web Input to File System Calls",
        "description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
        "prerequisites": [
          "Program must allow for user controlled variables to be applied directly to the filesystem"
        ],
        "relatedWeaknesses": [
          23,
          22,
          73,
          77,
          346,
          348,
          285,
          272,
          59,
          74,
          15
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: Enforce principle of least privilege.",
          "Design: Ensure all input is validated, and does not contain file system commands",
          "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
          "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
          "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
        ],
        "relatedAttackPatterns": [
          126
        ]
      },
      {
        "id": 77,
        "name": "Manipulating User-Controlled Variables",
        "description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
        "prerequisites": [
          "A variable consumed by the application server is exposed to the client.",
          "A variable consumed by the application server can be overwritten by the user.",
          "The application server trusts user supplied data to compute business logic.",
          "The application server does not perform proper input validation."
        ],
        "relatedWeaknesses": [
          15,
          94,
          96,
          285,
          302,
          473,
          1321
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Do not allow override of global variables and do Not Trust Global Variables. If the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
          "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
          "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
          "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
        ],
        "relatedAttackPatterns": [
          22
        ]
      },
      {
        "id": 78,
        "name": "Using Escaped Slashes in Alternate Encoding",
        "description": "This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
        "prerequisites": [
          "The application accepts the backlash character as escape character.",
          "The application server does incomplete input data decoding, filtering and validation."
        ],
        "relatedWeaknesses": [
          180,
          181,
          173,
          172,
          73,
          22,
          74,
          20,
          697,
          707
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Verify that the user-supplied data does not use backslash character to escape malicious characters.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
          "Be aware of the threat of alternative method of data encoding.",
          "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.",
          "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
          "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
          "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 79,
        "name": "Using Slashes in Alternate Encoding",
        "description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
        "prerequisites": [
          "The application server accepts paths to locate resources.",
          "The application server does insufficient input data validation on the resource path requested by the user.",
          "The access right to resources are not set properly."
        ],
        "relatedWeaknesses": [
          173,
          180,
          181,
          20,
          74,
          73,
          22,
          185,
          200,
          697,
          707
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.",
          "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
          "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)",
          "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
          "Test your path decoding process against malicious input.",
          "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the application based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 80,
        "name": "Using UTF-8 Encoding to Bypass Validation Logic",
        "description": "This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the \"shortest possible\" encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters.",
        "prerequisites": [
          "The application's UTF-8 decoder accepts and interprets illegal UTF-8 characters or non-shortest format of UTF-8 encoding.",
          "Input filtering and validating is not done properly leaving the door open to harmful characters for the target host."
        ],
        "relatedWeaknesses": [
          173,
          172,
          180,
          181,
          73,
          74,
          20,
          697,
          692
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Bypass Protection Mechanism",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Integrity Modify Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "The Unicode Consortium recognized multiple representations to be a problem and has revised the Unicode Standard to make multiple representations of the same code point with UTF-8 illegal. The UTF-8 Corrigendum lists the newly restricted UTF-8 range (See references). Many current applications may not have been revised to follow this rule. Verify that your application conform to the latest UTF-8 encoding specification. Pay extra attention to the filtering of illegal characters.",
          "The exact response required from an UTF-8 decoder on invalid input is not uniformly defined by the standards. In general, there are several ways a UTF-8 decoder might behave in the event of an invalid byte sequence: It is possible for a decoder to behave in different ways for different types of invalid input. RFC 3629 only requires that UTF-8 decoders must not decode \"overlong sequences\" (where a character is encoded in more bytes than needed but still adheres to the forms above). The Unicode Standard requires a Unicode-compliant decoder to \"...treat any ill-formed code unit sequence as an error condition. This guarantees that it will neither interpret nor emit an ill-formed code unit sequence.\" Overlong forms are one of the most troublesome types of UTF-8 data. The current RFC says they must not be decoded but older specifications for UTF-8 only gave a warning and many simpler decoders will happily decode them. Overlong forms have been used to bypass security validations in high profile products including Microsoft's IIS web server. Therefore, great care must be taken to avoid security issues if validation is performed before conversion from UTF-8, and it is generally much simpler to handle overlong forms before any input validation is done. To maintain security in the case of invalid input, there are two options. The first is to decode the UTF-8 before doing any input validation checks. The second is to use a decoder that, in the event of invalid input, returns either an error or text that the application considers to be harmless. Another possibility is to avoid conversion out of UTF-8 altogether but this relies on any other software that the data is passed to safely handling the invalid data. Another consideration is error recovery. To guarantee correct recovery after corrupt or lost bytes, decoders must be able to recognize the difference between lead and trail bytes, rather than just assuming that bytes will be of the type allowed in their position. 1. Insert a replacement character (e.g. '?', ''). 2. Ignore the bytes. 3. Interpret the bytes according to a different character encoding (often the ISO-8859-1 character map). 4. Not notice and decode as if the bytes were some similar bit of UTF-8. 5. Stop decoding and report an error (possibly giving the caller the option to continue).",
          "For security reasons, a UTF-8 decoder must not accept UTF-8 sequences that are longer than necessary to encode a character. If you use a parser to decode the UTF-8 encoding, make sure that parser filter the invalid UTF-8 characters (invalid forms or overlong forms).",
          "Look for overlong UTF-8 sequences starting with malicious pattern. You can also use a UTF-8 decoder stress test to test your UTF-8 parser (See Markus Kuhn's UTF-8 and Unicode FAQ in reference section)",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input."
        ],
        "relatedAttackPatterns": [
          64,
          71,
          267
        ]
      },
      {
        "id": 81,
        "name": "Web Server Logs Tampering",
        "description": "Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to \"Log Injection-Tampering-Forging\" except that in this case, the attack is targeting the logs of the web server and not the application.",
        "prerequisites": [
          "Target server software must be a HTTP server that performs web logging."
        ],
        "relatedWeaknesses": [
          117,
          93,
          75,
          221,
          96,
          20,
          150,
          276,
          279,
          116
        ],
        "consequences": [
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: Use input validation before writing to web log",
          "Design: Validate all log data before it is output"
        ],
        "relatedAttackPatterns": [
          268
        ]
      },
      {
        "id": 82,
        "name": "DEPRECATED: Violating Implicit Assumptions Regarding XML Content (aka XML Denial of Service (XDoS))",
        "description": "This attack pattern has been deprecated as it a generalization of CAPEC-230: XML Nested Payloads, CAPEC-231: XML Oversized Payloads, and CAPEC-147: XML Ping of Death. Please refer to these CAPECs going forward."
      },
      {
        "id": 83,
        "name": "XPath Injection",
        "description": "An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that they normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database.",
        "prerequisites": [
          "XPath queries used to retrieve information stored in XML documents",
          "User-controllable input not properly sanitized before being used as part of XPath queries"
        ],
        "relatedWeaknesses": [
          91,
          74,
          20,
          707
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions.",
          "Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails.",
          "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
        ],
        "relatedAttackPatterns": [
          250
        ]
      },
      {
        "id": 84,
        "name": "XQuery Injection",
        "description": "This attack utilizes XQuery to probe and attack server systems; in a similar manner that SQL Injection allows an attacker to exploit SQL calls to RDBMS, XQuery Injection uses improperly validated data that is passed to XQuery commands to traverse and execute commands that the XQuery routines have access to. XQuery injection can be used to enumerate elements on the victim's environment, inject commands to the local host, or execute queries to remote files and data sources.",
        "prerequisites": [
          "The XQL must execute unvalidated data"
        ],
        "relatedWeaknesses": [
          74,
          707
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Design: Perform input allowlist validation on all XML input",
          "Implementation: Run xml parsing and query infrastructure with minimal privileges so that an attacker is limited in their ability to probe other system resources from XQL."
        ],
        "relatedAttackPatterns": [
          250
        ]
      },
      {
        "id": 85,
        "name": "AJAX Footprinting",
        "description": "This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. A common first step for an attacker is to footprint the target environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on. The knowledge gained through Ajax fingerprinting can be used to support other attacks, such as XSS.",
        "prerequisites": [
          "The user must allow JavaScript to execute in their browser"
        ],
        "relatedWeaknesses": [
          79,
          113,
          348,
          96,
          20,
          116,
          184,
          86,
          692
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Implementation: Perform input validation for all remote content."
        ],
        "relatedAttackPatterns": [
          580,
          63
        ]
      },
      {
        "id": 86,
        "name": "XSS Through HTTP Headers",
        "description": "An adversary exploits web applications that generate web content, such as links in a HTML page, based on unvalidated or improperly validated data submitted by other actors. XSS in HTTP Headers attacks target the HTTP headers which are hidden from most users and may not be validated by web applications.",
        "prerequisites": [
          "Target software must be a client that allows scripting communication from remote hosts."
        ],
        "relatedWeaknesses": [
          80
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Design: Utilize strict type, character, and encoding enforcement",
          "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Perform input validation for all remote content.",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser",
          "Implementation: Session tokens for specific host",
          "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
        ],
        "relatedAttackPatterns": [
          591,
          588,
          592
        ]
      },
      {
        "id": 87,
        "name": "Forceful Browsing",
        "description": "An attacker employs forceful browsing (direct URL entry) to access portions of a website that are otherwise unreachable. Usually, a front controller or similar design pattern is employed to protect access to portions of a web application. Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected.",
        "prerequisites": [
          "The forcibly browseable pages or accessible resources must be discoverable and improperly protected."
        ],
        "relatedWeaknesses": [
          425,
          285,
          693
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Authenticate request to every resource. In addition, every page or resource must ensure that the request it is handling has been made in an authorized context.",
          "Forceful browsing can also be made difficult to a large extent by not hard-coding names of application pages or resources. This way, the attacker cannot figure out, from the application alone, the resources available from the present context."
        ],
        "relatedAttackPatterns": [
          115
        ]
      },
      {
        "id": 88,
        "name": "OS Command Injection",
        "description": "In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system.",
        "prerequisites": [
          "User controllable input used as part of commands to the underlying operating system."
        ],
        "relatedWeaknesses": [
          78,
          88,
          20,
          697
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges Bypass Protection Mechanism",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.",
          "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands",
          "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 89,
        "name": "Pharming",
        "description": "A pharming attack occurs when the victim is fooled into entering sensitive data into supposedly trusted locations, such as an online bank site or a trading platform. An attacker can impersonate these supposedly trusted sites and have the victim be directed to their site rather than the originally intended one. Pharming does not require script injection or clicking on malicious links for the attack to succeed.",
        "prerequisites": [
          "Vulnerable DNS software or improperly protected hosts file or router that can be poisoned",
          "A website that handles sensitive information but does not use a secure connection and a certificate that is valid is also prone to pharming"
        ],
        "relatedWeaknesses": [
          346,
          350
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "All sensitive information must be handled over a secure connection.",
          "Known vulnerabilities in DNS or router software or in operating systems must be patched as soon as a fix has been released and tested.",
          "End users must ensure that they provide sensitive information only to websites that they trust, over a secure connection with a valid certificate issued by a well-known certificate authority."
        ],
        "relatedAttackPatterns": [
          151
        ]
      },
      {
        "id": 90,
        "name": "Reflection Attack in Authentication Protocol",
        "description": "An adversary can abuse an authentication protocol susceptible to reflection attack in order to defeat it. Doing so allows the adversary illegitimate access to the target system, without possessing the requisite credentials. Reflection attacks are of great concern to authentication protocols that rely on a challenge-handshake or similar mechanism. An adversary can impersonate a legitimate user and can gain illegitimate access to the system by successfully mounting a reflection attack during authentication.",
        "prerequisites": [
          "The attacker must have direct access to the target server in order to successfully mount a reflection attack. An intermediate entity, such as a router or proxy, that handles these exchanges on behalf of the attacker inhibits the attackers' ability to attack the authentication protocol."
        ],
        "relatedWeaknesses": [
          301,
          303
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges Bypass Protection Mechanism",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "The server must initiate the handshake by issuing the challenge. This ensures that the client has to respond before the exchange can move any further",
          "The use of HMAC to hash the response from the server can also be used to thwart reflection. The server responds by returning its own challenge as well as hashing the client's challenge, its own challenge and the pre-shared secret. Requiring the client to respond with the HMAC of the two challenges ensures that only the possessor of a valid pre-shared secret can successfully hash in the two values.",
          "Introducing a random nonce with each new connection ensures that the attacker cannot employ two connections to attack the authentication protocol"
        ],
        "relatedAttackPatterns": [
          272,
          114
        ]
      },
      {
        "id": 91,
        "name": "DEPRECATED: XSS in IMG Tags",
        "description": "This attack pattern has been deprecated as it is contained in the existing attack pattern \"CAPEC-18 : XSS Targeting Non-Script Elements\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 92,
        "name": "Forced Integer Overflow",
        "description": "This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
        "prerequisites": [
          "The attacker can manipulate the value of an integer variable utilized by the target host.",
          "The target host does not do proper range checking on the variable before utilizing it.",
          "When the integer variable is incremented or decremented to an out of range value, it gets a very different value (e.g. very small or negative number)"
        ],
        "relatedWeaknesses": [
          190,
          128,
          120,
          122,
          196,
          680,
          697
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Read Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Use a language or compiler that performs automatic bounds checking.",
          "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow.",
          "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
          "Always do bound checking before consuming user input data."
        ],
        "relatedAttackPatterns": [
          128
        ]
      },
      {
        "id": 93,
        "name": "Log Injection-Tampering-Forging",
        "description": "This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing them to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.",
        "prerequisites": [
          "The target host is logging the action and data of the user.",
          "The target host insufficiently protects access to the logs or logging mechanisms."
        ],
        "relatedWeaknesses": [
          117,
          75,
          150
        ],
        "consequences": [
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Carefully control access to physical log files.",
          "Do not allow tainted data to be written in the log file without prior input validation. An allowlist may be used to properly validate the data.",
          "Use synchronization to control the flow of execution.",
          "Use static analysis tools to identify log forging vulnerabilities.",
          "Avoid viewing logs with tools that may interpret control characters in the file, such as command-line shells."
        ],
        "relatedAttackPatterns": [
          268,
          592
        ]
      },
      {
        "id": 94,
        "name": "Adversary in the Middle (AiTM)",
        "description": "An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
        "prerequisites": [
          "There are two components communicating with each other.",
          "An attacker is able to identify the nature and mechanism of communication between the two target components.",
          "An attacker can eavesdrop on the communication between the target components.",
          "Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition.",
          "The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption."
        ],
        "relatedWeaknesses": [
          300,
          290,
          593,
          287,
          294
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Ensure Public Keys are signed by a Certificate Authority",
          "Encrypt communications using cryptography (e.g., SSL/TLS)",
          "Use Strong mutual authentication to always fully authenticate both ends of any communications channel.",
          "Exchange public keys using a secure channel"
        ],
        "relatedAttackPatterns": [
          151,
          668
        ]
      },
      {
        "id": 95,
        "name": "WSDL Scanning",
        "description": "This attack targets the WSDL interface made available by a web service. The attacker may scan the WSDL interface to reveal sensitive information about invocation patterns, underlying technology implementations and associated vulnerabilities. This type of probing is carried out to perform more serious attacks (e.g. parameter tampering, malicious content injection, command injection, etc.). WSDL files provide detailed information about the services ports and bindings available to consumers. For instance, the attacker can submit special characters or malicious content to the Web service and can cause a denial of service condition or illegal access to database records. In addition, the attacker may try to guess other private methods by using the information provided in the WSDL files.",
        "prerequisites": [
          "A client program connecting to a web service can read the WSDL to determine what functions are available on the server.",
          "The target host exposes vulnerable functions within its WSDL interface."
        ],
        "relatedWeaknesses": [
          538
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "It is important to protect WSDL file or provide limited access to it.",
          "Review the functions exposed by the WSDL interface (especially if you have used a tool to generate it). Make sure that none of them is vulnerable to injection.",
          "Ensure the WSDL does not expose functions and APIs that were not intended to be exposed.",
          "Pay attention to the function naming convention (within the WSDL interface). Easy to guess function name may be an entry point for attack.",
          "Validate the received messages against the WSDL Schema. Incomplete solution."
        ],
        "relatedAttackPatterns": [
          54
        ]
      },
      {
        "id": 96,
        "name": "Block Access to Libraries",
        "description": "An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. It is possible that the application does not handle situations properly where access to these libraries has been blocked. Depending on the error handling within the application, blocked access to libraries may leave the system in an insecure state that could be leveraged by an attacker.",
        "prerequisites": [
          "An application requires access to external libraries.",
          "An attacker has the privileges to block application access to external libraries."
        ],
        "relatedWeaknesses": [
          589
        ],
        "consequences": [
          "Availability Alter Execution Logic",
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Ensure that application handles situations where access to APIs in external libraries is not available securely. If the application cannot continue its execution safely it should fail in a consistent and secure fashion."
        ],
        "relatedAttackPatterns": [
          603
        ]
      },
      {
        "id": 97,
        "name": "Cryptanalysis",
        "description": "Cryptanalysis is a process of finding weaknesses in cryptographic algorithms and using these weaknesses to decipher the ciphertext without knowing the secret key (instance deduction). Sometimes the weakness is not in the cryptographic algorithm itself, but rather in how it is applied that makes cryptanalysis successful. An attacker may have other goals as well, such as: Total Break (finding the secret key), Global Deduction (finding a functionally equivalent algorithm for encryption and decryption that does not require knowledge of the secret key), Information Deduction (gaining some information about plaintexts or ciphertexts that was not previously known) and Distinguishing Algorithm (the attacker has the ability to distinguish the output of the encryption (ciphertext) from a random permutation of bits).",
        "prerequisites": [
          "The target software utilizes some sort of cryptographic algorithm.",
          "An underlying weaknesses exists either in the cryptographic algorithm used or in the way that it was applied to a particular chunk of plaintext.",
          "The encryption algorithm is known to the attacker.",
          "An attacker has access to the ciphertext."
        ],
        "relatedWeaknesses": [
          327,
          1204,
          1240,
          1241,
          1279
        ],
        "consequences": [
          "Confidentiality Read Data In most cases, if cryptanalysis is successful at all, an adversary will not be able to decrypt the entire message, but instead will only be able to deduce some information about the plaintext. However, that may be sufficient for an adversary, depending on the context of the attack."
        ],
        "mitigations": [
          "Use proven cryptographic algorithms with recommended key sizes.",
          "Ensure that the algorithms are used properly. That means: 1. Not rolling out your own crypto; Use proven algorithms and implementations. 2. Choosing initialization vectors with sufficiently random numbers 3. Generating key material using good sources of randomness and avoiding known weak keys 4. Using proven protocols and their implementations. 5. Picking the most appropriate cryptographic algorithm for your usage context and data"
        ],
        "relatedAttackPatterns": [
          192,
          20
        ]
      },
      {
        "id": 98,
        "name": "Phishing",
        "description": "Phishing is a social engineering technique where an attacker masquerades as a legitimate entity with which the victim might do business in order to prompt the user to reveal some confidential information (very frequently authentication credentials) that can later be used by an attacker. Phishing is essentially a form of information gathering or \"fishing\" for information.",
        "prerequisites": [
          "An attacker needs to have a way to initiate contact with the victim. Typically that will happen through e-mail.",
          "An attacker needs to correctly guess the entity with which the victim does business and impersonate it. Most of the time phishers just use the most popular banks/services and send out their \"hooks\" to many potential victims.",
          "An attacker needs to have a sufficiently compelling call to action to prompt the user to take action.",
          "The replicated website needs to look extremely similar to the original website and the URL used to get to that website needs to look like the real URL of the said business entity."
        ],
        "relatedWeaknesses": [
          451
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Do not follow any links that you receive within your e-mails and certainly do not input any login credentials on the page that they take you too. Instead, call your Bank, PayPal, eBay, etc., and inquire about the problem. A safe practice would also be to type the URL of your bank in the browser directly and only then log in. Also, never reply to any e-mails that ask you to provide sensitive information of any kind."
        ],
        "relatedAttackPatterns": [
          151,
          89,
          543,
          611,
          630,
          631,
          632
        ]
      },
      {
        "id": 99,
        "name": "DEPRECATED: XML Parser Attack",
        "description": "This attack pattern has been deprecated as it a generalization of CAPEC-230: XML Nested Payloads and CAPEC-231: XML Oversized Payloads. Please refer to these CAPECs going forward."
      },
      {
        "id": 100,
        "name": "Overflow Buffers",
        "description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
        "prerequisites": [
          "Targeted software performs buffer operations.",
          "Targeted software inadequately performs bounds-checking on buffer operations.",
          "Adversary has the capability to influence the input to buffer operations."
        ],
        "relatedWeaknesses": [
          120,
          119,
          131,
          129,
          805,
          680
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Use a language or compiler that performs automatic bounds checking.",
          "Use secure functions not vulnerable to buffer overflow.",
          "If you have to use dangerous functions, make sure that you do boundary checking.",
          "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
          "Use OS-level preventative functionality. Not a complete solution.",
          "Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software."
        ],
        "relatedAttackPatterns": [
          123
        ]
      },
      {
        "id": 101,
        "name": "Server Side Include (SSI) Injection",
        "description": "An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands.",
        "prerequisites": [
          "A web server that supports server side includes and has them enabled",
          "User controllable input that can carry include directives to the web server"
        ],
        "relatedWeaknesses": [
          97,
          74,
          20
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Set the OPTIONS IncludesNOEXEC in the global access.conf file or local .htaccess (Apache) file to deny SSI execution in directories that do not need them",
          "All user controllable input must be appropriately sanitized before use in the application. This includes omitting, or encoding, certain characters or strings that have the potential of being interpreted as part of an SSI directive",
          "Server Side Includes must be enabled only if there is a strong business reason to do so. Every additional component enabled on the web server increases the attack surface as well as administrative overhead"
        ],
        "relatedAttackPatterns": [
          253,
          600
        ]
      },
      {
        "id": 102,
        "name": "Session Sidejacking",
        "description": "Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim. This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.",
        "prerequisites": [
          "An attacker and the victim are both using the same WiFi network.",
          "The victim has an active session with a target system.",
          "The victim is not using a secure channel to communicate with the target system (e.g. SSL, VPN, etc.)",
          "The victim initiated communication with a target system that requires transfer of the session token or the target application uses AJAX and thereby periodically \"rings home\" asynchronously using the session token"
        ],
        "relatedWeaknesses": [
          294,
          522,
          523,
          319,
          614
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Make sure that HTTPS is used to communicate with the target system. Alternatively, use VPN if possible. It is important to ensure that all communication between the client and the server happens via an encrypted secure channel.",
          "Modify the session token with each transmission and protect it with cryptography. Add the idea of request sequencing that gives the server an ability to detect replay attacks."
        ],
        "relatedAttackPatterns": [
          593
        ]
      },
      {
        "id": 103,
        "name": "Clickjacking",
        "description": "An adversary tricks a victim into unknowingly initiating some action in one system while interacting with the UI from a seemingly completely different, usually an adversary controlled or intended, system.",
        "prerequisites": [
          "The victim is communicating with the target application via a web based UI and not a thick client",
          "The victim's browser security policies allow at least one of the following JavaScript, Flash, iFrames, ActiveX, or CSS.",
          "The victim uses a modern browser that supports UI elements like clickable buttons (i.e. not using an old text only browser)",
          "The victim has an active session with the target system.",
          "The target system's interaction window is open in the victim's browser and supports the ability for initiating sensitive actions on behalf of the user in the target system"
        ],
        "relatedWeaknesses": [
          1021
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "If using the Firefox browser, use the NoScript plug-in that will help forbid iFrames.",
          "Turn off JavaScript, Flash and disable CSS.",
          "When maintaining an authenticated session with a privileged target system, do not use the same browser to navigate to unfamiliar sites to perform other activities. Finish working with the target system and logout first before proceeding to other tasks."
        ],
        "relatedAttackPatterns": [
          173
        ]
      },
      {
        "id": 104,
        "name": "Cross Zone Scripting",
        "description": "An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security.",
        "prerequisites": [
          "The target must be using a zone-aware browser."
        ],
        "relatedWeaknesses": [
          250,
          638,
          285,
          116,
          20
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Disable script execution.",
          "Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone",
          "Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone",
          "Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum",
          "Ensure proper HTML output encoding before writing user supplied data to the page"
        ],
        "relatedAttackPatterns": [
          233
        ]
      },
      {
        "id": 105,
        "name": "HTTP Request Splitting",
        "description": "An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to split a single HTTP request into multiple unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server). See CanPrecede relationships for possible consequences.",
        "prerequisites": [
          "An additional intermediary HTTP agent such as an application firewall or a web caching proxy between the adversary and the second agent such as a web server, that sends multiple HTTP messages over same network connection.",
          "Differences in the way the two HTTP agents parse and interpret HTTP requests and its headers.",
          "HTTP headers capable of being user-manipulated.",
          "HTTP agents running on HTTP/1.0 or HTTP/1.1 that allow for Keep Alive mode, Pipelined queries, and Chunked queries and responses."
        ],
        "relatedWeaknesses": [
          74,
          113,
          138,
          436
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
          "Configuration: front-end HTTP agents notice ambiguous requests.",
          "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
          "Configuration: Disable reuse of back-end connections.",
          "Configuration: Use HTTP/2 for back-end connections.",
          "Configuration: Use the same web server software for front-end and back-end server.",
          "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
          "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
          "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
          "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
        ],
        "relatedAttackPatterns": [
          220,
          34,
          115,
          141,
          63,
          593,
          148,
          154
        ]
      },
      {
        "id": 106,
        "name": "DEPRECATED: XSS through Log Files",
        "description": "This attack pattern has been deprecated as it referes to an existing chain relationship between \"CAPEC-93 : Log Injection-Tampering-Forging\" and \"CAPEC-63 : Cross-Site Scripting\". Please refer to these CAPECs going forward."
      },
      {
        "id": 107,
        "name": "Cross Site Tracing",
        "description": "Cross Site Tracing (XST) enables an adversary to steal the victim's session cookie and possibly other authentication credentials transmitted in the header of the HTTP request when the victim's browser communicates to a destination system's web server.",
        "prerequisites": [
          "HTTP TRACE is enabled on the web server",
          "The destination system is susceptible to XSS or an adversary can leverage some other weakness to bypass the same origin policy",
          "Scripting is enabled in the client's browser",
          "HTTP is used as the communication protocol between the server and the client"
        ],
        "relatedWeaknesses": [
          693,
          648
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Administrators should disable support for HTTP TRACE at the destination's web server. Vendors should disable TRACE by default.",
          "Patch web browser against known security origin policy bypass exploits."
        ],
        "relatedAttackPatterns": [
          593
        ]
      },
      {
        "id": 108,
        "name": "Command Line Execution through SQL Injection",
        "description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
        "prerequisites": [
          "The application does not properly validate data before storing in the database",
          "Backend application implicitly trusts the data stored in the database",
          "Malicious data is used on the backend as a command line argument"
        ],
        "relatedWeaknesses": [
          89,
          74,
          20,
          78,
          114
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Availability Unreliable Execution",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Disable MSSQL xp_cmdshell directive on the database",
          "Properly validate the data (syntactically and semantically) before writing it to the database.",
          "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
        ],
        "relatedAttackPatterns": [
          66
        ]
      },
      {
        "id": 109,
        "name": "Object Relational Mapping Injection",
        "description": "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject their own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
        "prerequisites": [
          "An application uses data access layer generated by an ORM tool or framework",
          "An application uses user supplied data in queries executed against the database",
          "The separation between data plane and control plane is not ensured, through either developer error or an underlying weakness in the data access layer code generation framework"
        ],
        "relatedWeaknesses": [
          20,
          89,
          564
        ],
        "consequences": [
          "Integrity Modify Data",
          "Availability Unreliable Execution",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework",
          "Ensure to keep up to date with security relevant updates to the persistence framework used within your application."
        ],
        "relatedAttackPatterns": [
          66
        ]
      },
      {
        "id": 110,
        "name": "SQL Injection through SOAP Parameter Tampering",
        "description": "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
        "prerequisites": [
          "SOAP messages are used as a communication mechanism in the system",
          "SOAP parameters are not properly validated at the service provider",
          "The service provider does not properly utilize parameter binding when building SQL queries"
        ],
        "relatedWeaknesses": [
          89,
          20
        ],
        "consequences": [
          "Integrity Modify Data",
          "Availability Unreliable Execution",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Properly validate and sanitize/reject user input at the service provider.",
          "Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers' supplied data from controlling the structure of the executed query.",
          "At the database level, ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible, run queries against pre-generated views rather than the tables directly."
        ],
        "relatedAttackPatterns": [
          66,
          108
        ]
      },
      {
        "id": 111,
        "name": "JSON Hijacking (aka JavaScript Hijacking)",
        "description": "An attacker targets a system that uses JavaScript Object Notation (JSON) as a transport mechanism between the client and the server (common in Web 2.0 systems using AJAX) to steal possibly confidential information transmitted from the server back to the client inside the JSON object by taking advantage of the loophole in the browser's Same Origin Policy that does not prohibit JavaScript from one website to be included and executed in the context of another website.",
        "prerequisites": [
          "JSON is used as a transport mechanism between the client and the server",
          "The target server cannot differentiate real requests from forged requests",
          "The JSON object returned from the server can be accessed by the attackers' malicious code via a script tag"
        ],
        "relatedWeaknesses": [
          345,
          346,
          352
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Ensure that server side code can differentiate between legitimate requests and forged requests. The solution is similar to protection against Cross Site Request Forger (CSRF), which is to use a hard to guess random nonce (that is unique to the victim's session with the server) that the attacker has no way of knowing (at least in the absence of other weaknesses). Each request from the client to the server should contain this nonce and the server should reject all requests that do not contain the nonce.",
          "On the client side, the system's design could make it difficult to get access to the JSON object content via the script tag. Since the JSON object is never assigned locally to a variable, it cannot be readily modified by the attacker before being used by a script tag. For instance, if while(1) was added to the beginning of the JavaScript returned by the server, trying to access it with a script tag would result in an infinite loop. On the other hand, legitimate client side code can remove the while(1) statement after which the JavaScript can be evaluated. A similar result can be achieved by surrounding the returned JavaScript with comment tags, or using other similar techniques (e.g. wrapping the JavaScript with HTML tags).",
          "Make the URLs in the system used to retrieve JSON objects unpredictable and unique for each user session.",
          "Ensure that to the extent possible, no sensitive data is passed from the server to the client via JSON objects. JavaScript was never intended to play that role, hence the same origin policy does not adequate address this scenario."
        ],
        "relatedAttackPatterns": [
          212
        ]
      },
      {
        "id": 112,
        "name": "Brute Force",
        "description": "In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset.",
        "prerequisites": [
          "The attacker must be able to determine when they have successfully guessed the secret. As such, one-time pads are immune to this type of attack since there is no way to determine when a guess is correct."
        ],
        "relatedWeaknesses": [
          330,
          326,
          521
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Select a provably large secret space for selection of the secret. Provably large means that the procedure by which the secret is selected does not have artifacts that significantly reduce the size of the total secret space.",
          "Use a secret space that is well known and with no known patterns that may reduce functional size.",
          "Do not provide the means for an attacker to determine success independently. This forces the attacker to check their guesses against an external authority, which can slow the attack and warn the defender. This mitigation may not be possible if testing material must appear externally, such as with a transmitted cryptotext."
        ]
      },
      {
        "id": 113,
        "name": "Interface Manipulation",
        "description": "An adversary manipulates the use or processing of an interface (e.g. Application Programming Interface (API) or System-on-Chip (SoC)) resulting in an adverse impact upon the security of the system implementing the interface. This can allow the adversary to bypass access control and/or execute functionality not intended by the interface implementation, possibly compromising the system which integrates the interface. Interface manipulation can take on a number of forms including forcing the unexpected use of an interface or the use of an interface in an unintended way.",
        "prerequisites": [
          "The target system must expose interface functionality in a manner that can be discovered and manipulated by an adversary. This may require reverse engineering the interface or decrypting/de-obfuscating client-server exchanges."
        ],
        "relatedWeaknesses": [
          1192
        ]
      },
      {
        "id": 114,
        "name": "Authentication Abuse",
        "description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
        "prerequisites": [
          "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc. which is flawed in some way."
        ],
        "relatedWeaknesses": [
          287,
          1244
        ]
      },
      {
        "id": 115,
        "name": "Authentication Bypass",
        "description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
        "prerequisites": [
          "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc."
        ],
        "relatedWeaknesses": [
          287
        ]
      },
      {
        "id": 116,
        "name": "Excavation",
        "description": "An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes.",
        "prerequisites": [
          "An adversary requires some way of interacting with the system."
        ],
        "relatedWeaknesses": [
          200,
          1243
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Minimize error/response output to only what is necessary for functional use or corrective language.",
          "Remove potentially sensitive information that is not necessary for the application's functionality."
        ],
        "relatedAttackPatterns": [
          163
        ]
      },
      {
        "id": 117,
        "name": "Interception",
        "description": "An adversary monitors data streams to or from the target for information gathering purposes. This attack may be undertaken to solely gather sensitive information or to support a further attack against the target. This attack pattern can involve sniffing network traffic as well as other types of data streams (e.g. radio). The adversary can attempt to initiate the establishment of a data stream or passively observe the communications as they unfold. In all variants of this attack, the adversary is not the intended recipient of the data stream. In contrast to other means of gathering information (e.g., targeting data leaks), the adversary must actively position themself so as to observe explicit data channels (e.g. network traffic) and read the content. However, this attack differs from a Adversary-In-the-Middle (CAPEC-94) attack, as the adversary does not alter the content of the communications nor forward data to the intended recipient.",
        "prerequisites": [
          "The target must transmit data over a medium that is accessible to the adversary."
        ],
        "relatedWeaknesses": [
          319
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Leverage encryption to encode the transmission of data thus making it accessible only to authorized parties."
        ]
      },
      {
        "id": 120,
        "name": "Double Encoding",
        "description": "The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. This may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as those that might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings, but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target.",
        "prerequisites": [
          "The target's filters must fail to detect that a character has been doubly encoded but its interpreting engine must still be able to convert a doubly encoded character to an un-encoded character.",
          "The application accepts and decodes URL string request.",
          "The application performs insufficient filtering/canonicalization on the URLs."
        ],
        "relatedWeaknesses": [
          173,
          172,
          177,
          181,
          183,
          184,
          74,
          20,
          697,
          692
        ],
        "mitigations": [
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
          "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
          "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
          "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
          "Refer to the RFCs to safely decode URL.",
          "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
          "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
        ],
        "relatedAttackPatterns": [
          267
        ]
      },
      {
        "id": 121,
        "name": "Exploit Non-Production Interfaces",
        "description": "An adversary exploits a sample, demonstration, test, or debug interface that is unintentionally enabled on a production system, with the goal of gleaning information or leveraging functionality that would otherwise be unavailable.",
        "prerequisites": [
          "The target must have configured non-production interfaces and failed to secure or remove them when brought into a production environment."
        ],
        "relatedWeaknesses": [
          489,
          1209,
          1259,
          1267,
          1270,
          1294,
          1295,
          1296,
          1302,
          1313
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges Bypass Protection Mechanism",
          "Confidentiality Access Control Authorization Read Data Execute Unauthorized Commands",
          "Access Control Integrity Modify Data Alter Execution Logic"
        ],
        "mitigations": [
          "Ensure that production systems do not contain non-production interfaces and that these interfaces are only used in development environments."
        ],
        "relatedAttackPatterns": [
          113
        ]
      },
      {
        "id": 122,
        "name": "Privilege Abuse",
        "description": "An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources.",
        "prerequisites": [
          "The target must have misconfigured their access control mechanisms such that sensitive information, which should only be accessible to more trusted users, remains accessible to less trusted users.",
          "The adversary must have access to the target, albeit with an account that is less privileged than would be appropriate for the targeted resources."
        ],
        "relatedWeaknesses": [
          269,
          732,
          1317
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Authorization Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Configure account privileges such privileged/administrator functionality is not exposed to non-privileged/lower accounts."
        ],
        "relatedAttackPatterns": [
          664
        ]
      },
      {
        "id": 123,
        "name": "Buffer Manipulation",
        "description": "An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
        "prerequisites": [
          "The adversary must identify a programmatic means for interacting with a buffer, such as vulnerable C code, and be able to provide input to this interaction."
        ],
        "relatedWeaknesses": [
          119
        ],
        "consequences": [
          "Availability Unreliable Execution A buffer manipulation attack often results in a crash of the application due to the corruption of memory.",
          "Confidentiality Execute Unauthorized Commands Modify Data Read Data If constructed properly, a buffer manipulation attack can be used to contol the execution of the application leading to any number of negative consequenses."
        ],
        "mitigations": [
          "To help protect an application from buffer manipulation attacks, a number of potential mitigations can be leveraged. Before starting the development of the application, consider using a code language (e.g., Java) or compiler that limits the ability of developers to act beyond the bounds of a buffer. If the chosen language is susceptible to buffer related issues (e.g., C) then consider using secure functions instead of those vulnerable to buffer manipulations. If a potentially dangerous function must be used, make sure that proper boundary checking is performed. Additionally, there are often a number of compiler-based mechanisms (e.g., StackGuard, ProPolice and the Microsoft Visual Studio /GS flag) that can help identify and protect against potential buffer issues. Finally, there may be operating system level preventative functionality that can be applied."
        ]
      },
      {
        "id": 124,
        "name": "Shared Resource Manipulation",
        "description": "An adversary exploits a resource shared between multiple applications, an application pool or hardware pin multiplexing to affect behavior. Resources may be shared between multiple applications or between multiple threads of a single application. Resource sharing is usually accomplished through mutual access to a single memory location or multiplexed hardware pins. If an adversary can manipulate this shared resource (usually by co-opting one of the applications or threads) the other applications or threads using the shared resource will often continue to trust the validity of the compromised shared resource and use it in their calculations. This can result in invalid trust assumptions, corruption of additional data through the normal operations of the other users of the shared resource, or even cause a crash or compromise of the sharing applications.",
        "prerequisites": [
          "The target applications, threads or functions must share resources between themselves.",
          "The adversary must be able to manipulate some piece of the shared resource either directly or indirectly and the other users of the data must accept the changed data as valid. Usually this requires that the adversary be able to compromise one of the sharing applications or threads in order to manipulate the shared data."
        ],
        "relatedWeaknesses": [
          1189,
          1331
        ]
      },
      {
        "id": 125,
        "name": "Flooding",
        "description": "An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target.",
        "prerequisites": [
          "Any target that services requests is vulnerable to this attack on some level of scale."
        ],
        "relatedWeaknesses": [
          404,
          770
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption A successful flooding attack compromises the availability of the target system's service by exhausting its available resources."
        ],
        "mitigations": [
          "Ensure that protocols have specific limits of scale configured.",
          "Specify expectations for capabilities and dictate which behaviors are acceptable when resource allocation reaches limits.",
          "Uniformly throttle all requests in order to make it more difficult to consume resources more quickly than they can again be freed."
        ]
      },
      {
        "id": 126,
        "name": "Path Traversal",
        "description": "An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files.",
        "prerequisites": [
          "The attacker must be able to control the path that is requested of the target.",
          "The target must fail to adequately sanitize incoming paths"
        ],
        "relatedWeaknesses": [
          22
        ],
        "consequences": [
          "Integrity Confidentiality Availability Execute Unauthorized Commands The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.",
          "Integrity Modify Data The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.",
          "Confidentiality Read Data The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.",
          "Availability Unreliable Execution The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the software."
        ],
        "mitigations": [
          "Design: Configure the access control correctly.",
          "Design: Enforce principle of least privilege.",
          "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
          "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement.",
          "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
          "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
          "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content.",
          "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
          "Implementation: Use indirect references rather than actual file names.",
          "Implementation: Use possible permissions on file access when developing and deploying web applications.",
          "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- using an allowlist approach."
        ],
        "relatedAttackPatterns": [
          153,
          664
        ]
      },
      {
        "id": 127,
        "name": "Directory Indexing",
        "description": "An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks.",
        "prerequisites": [
          "The target must be misconfigured to return a list of a directory's content when it receives a request that ends in a directory name rather than a file name.",
          "The adversary must be able to control the path that is requested of the target.",
          "The administrator must have failed to properly configure an ACL or has associated an overly permissive ACL with a particular directory.",
          "The server version or patch level must not inherently prevent known directory listing attacks from working."
        ],
        "relatedWeaknesses": [
          424,
          425,
          288,
          285,
          732,
          276,
          693
        ],
        "consequences": [
          "Confidentiality Read Data Information Leakage"
        ],
        "mitigations": [
          "1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors.",
          "2. Preventing with .htaccess in Apache web server: In .htaccess, write \"Options-indexes\".",
          "3. Suppressing error messages: using error 403 \"Forbidden\" message exactly like error 404 \"Not Found\" message."
        ],
        "relatedAttackPatterns": [
          54
        ]
      },
      {
        "id": 128,
        "name": "Integer Attacks",
        "description": "An attacker takes advantage of the structure of integer variables to cause these variables to assume values that are not expected by an application. For example, adding one to the largest positive integer in a signed integer variable results in a negative number. Negative numbers may be illegal in an application and the application may prevent an attacker from providing them directly, but the application may not consider that adding two positive numbers can create a negative number do to the structure of integer storage formats.",
        "prerequisites": [
          "The target application must have an integer variable for which only some of the possible integer values are expected by the application and where there are no checks on the value of the variable before use.",
          "The attacker must be able to manipulate the targeted integer variable such that normal operations result in non-standard values due to the storage structure of integers."
        ],
        "relatedWeaknesses": [
          682
        ],
        "relatedAttackPatterns": [
          153
        ]
      },
      {
        "id": 129,
        "name": "Pointer Manipulation",
        "description": "This attack pattern involves an adversary manipulating a pointer within a target application resulting in the application accessing an unintended memory location. This can result in the crashing of the application or, for certain pointer values, access to data that would not normally be possible or the execution of arbitrary code. Since pointers are simply integer variables, Integer Attacks may often be used in Pointer Attacks.",
        "prerequisites": [
          "The target application must have a pointer variable that the attacker can influence to hold an arbitrary value."
        ],
        "relatedWeaknesses": [
          682,
          822,
          823
        ]
      },
      {
        "id": 130,
        "name": "Excessive Allocation",
        "description": "An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.",
        "prerequisites": [
          "The target must accept service requests from the attacker and the adversary must be able to control the resource allocation associated with this request to be in excess of the normal allocation. The latter is usually accomplished through the presence of a bug on the target that allows the adversary to manipulate variables used in the allocation."
        ],
        "relatedWeaknesses": [
          404,
          770,
          1325
        ],
        "consequences": [
          "Availability Resource Consumption A successful excessive allocation attack forces the target system to exhaust its resources, thereby compromising the availability of its service."
        ],
        "mitigations": [
          "Limit the amount of resources that are accessible to unprivileged users.",
          "Assume all input is malicious. Consider all potentially relevant properties when validating input.",
          "Consider uniformly throttling all requests in order to make it more difficult to consume resources more quickly than they can again be freed.",
          "Use resource-limiting settings, if possible."
        ]
      },
      {
        "id": 131,
        "name": "Resource Leak Exposure",
        "description": "An adversary utilizes a resource leak on the target to deplete the quantity of the resource available to service legitimate requests.",
        "prerequisites": [
          "The target must have a resource leak that the adversary can repeatedly trigger."
        ],
        "relatedWeaknesses": [
          404
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption A successful resource leak exposure attack compromises the availability of the target system's services."
        ],
        "mitigations": [
          "If possible, leverage coding language(s) that do not allow this weakness to occur (e.g., Java, Ruby, and Python all perform automatic garbage collection that releases memory for objects that have been deallocated).",
          "Memory should always be allocated/freed using matching functions (e.g., malloc/free, new/delete, etc.)",
          "Implement best practices with respect to memory management, including the freeing of all allocated resources at all exit points and ensuring consistency with how and where memory is freed in a function."
        ]
      },
      {
        "id": 132,
        "name": "Symlink Attack",
        "description": "An adversary positions a symbolic link in such a manner that the targeted user or application accesses the link's endpoint, assuming that it is accessing a file with the link's name.",
        "prerequisites": [
          "The targeted application must perform the desired activities on a file without checking whether the file is a symbolic link or not. The adversary must be able to predict the name of the file the target application is modifying and be able to create a new symbolic link where that file would appear."
        ],
        "relatedWeaknesses": [
          59
        ],
        "consequences": [
          "Confidentiality Other Information Leakage",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Design: Check for the existence of files to be created, if in existence verify they are neither symlinks nor hard links before opening them.",
          "Implementation: Use randomly generated file names for temporary files. Give the files restrictive permissions."
        ],
        "relatedAttackPatterns": [
          159
        ]
      },
      {
        "id": 133,
        "name": "Try All Common Switches",
        "description": "An attacker attempts to invoke all common switches and options in the target application for the purpose of discovering weaknesses in the target. For example, in some applications, adding a --debug switch causes debugging information to be displayed, which can sometimes reveal sensitive processing or configuration information to an attacker. This attack differs from other forms of API abuse in that the attacker is indiscriminately attempting to invoke options in the hope that one of them will work rather than specifically targeting a known option. Nonetheless, even if the attacker is familiar with the published options of a targeted application this attack method may still be fruitful as it might discover unpublicized functionality.",
        "prerequisites": [
          "The attacker must be able to control the options or switches sent to the target."
        ],
        "relatedWeaknesses": [
          912
        ],
        "mitigations": [
          "Design: Minimize switch and option functionality to only that necessary for correct function of the command.",
          "Implementation: Remove all debug and testing options from production code."
        ],
        "relatedAttackPatterns": [
          113
        ]
      },
      {
        "id": 134,
        "name": "Email Injection",
        "description": "An adversary manipulates the headers and content of an email message by injecting data via the use of delimiter characters native to the protocol.",
        "prerequisites": [
          "The target application must allow the user to send email to some recipient, to specify the content at least one header field in the message, and must fail to sanitize against the injection of command separators.",
          "The adversary must have the ability to access the target mail application."
        ],
        "relatedWeaknesses": [
          150
        ],
        "relatedAttackPatterns": [
          137
        ]
      },
      {
        "id": 135,
        "name": "Format String Injection",
        "description": "An adversary includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An adversary can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the adversary can write to the program stack.",
        "prerequisites": [
          "The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters."
        ],
        "relatedWeaknesses": [
          134,
          20,
          74
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Access Control Gain Privileges",
          "Integrity Execute Unauthorized Commands Run Arbitrary Code",
          "Access Control Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Limit the usage of formatting string functions.",
          "Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters."
        ],
        "relatedAttackPatterns": [
          137
        ]
      },
      {
        "id": 136,
        "name": "LDAP Injection",
        "description": "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
        "prerequisites": [
          "The target application must accept a string as user input, fail to sanitize characters that have a special meaning in LDAP queries in the user input, and insert the user-supplied string in an LDAP query which is then processed."
        ],
        "relatedWeaknesses": [
          77,
          90,
          20
        ],
        "consequences": [
          "Availability Unreliable Execution",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.",
          "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 137,
        "name": "Parameter Injection",
        "description": "An adversary manipulates the content of request parameters for the purpose of undermining the security of the target. Some parameter encodings use text characters as separators. For example, parameters in a HTTP GET message are encoded as name-value pairs separated by an ampersand (&). If an attacker can supply text strings that are used to fill in these parameters, then they can inject special characters used in the encoding scheme to add or modify parameters. For example, if user input is fed directly into an HTTP GET request and the user provides the value \"myInput&new_param=myValue\", then the input parameter is set to myInput, but a new parameter (new_param) is also added with a value of myValue. This can significantly change the meaning of the query that is processed by the server. Any encoding scheme where parameters are identified and separated by text characters is potentially vulnerable to this attack - the HTTP GET encoding used above is just one example.",
        "prerequisites": [
          "The target application must use a parameter encoding where separators and parameter identifiers are expressed in regular text.",
          "The target application must accept a string as user input, fail to sanitize characters that have a special meaning in the parameter encoding, and insert the user-supplied string in an encoding which is then processed."
        ],
        "relatedWeaknesses": [
          88
        ],
        "consequences": [
          "Integrity Modify Data Successful parameter injection attacks mean a compromise to integrity of the application."
        ],
        "mitigations": [
          "Implement an audit log written to a separate host. In the event of a compromise, the audit log may be able to provide evidence and details of the compromise.",
          "Treat all user input as untrusted data that must be validated before use."
        ]
      },
      {
        "id": 138,
        "name": "Reflection Injection",
        "description": "An adversary supplies a value to the target application which is then used by reflection methods to identify a class, method, or field. For example, in the Java programming language the reflection libraries permit an application to inspect, load, and invoke classes and their components by name. If an adversary can control the input into these methods including the name of the class/method/field or the parameters passed to methods, they can cause the targeted application to invoke incorrect methods, read random fields, or even to load and utilize malicious classes that the adversary created. This can lead to the application revealing sensitive information, returning incorrect results, or even having the adversary take control of the targeted application.",
        "prerequisites": [
          "The target application must utilize reflection libraries and allow users to directly control the parameters to these methods. If the adversary can host classes where the target can invoke them, more powerful variants of this attack are possible.",
          "The target application must accept a string as user input, fail to sanitize characters that have a special meaning in the parameter encoding, and insert the user-supplied string in an encoding which is then processed."
        ],
        "relatedWeaknesses": [
          470
        ],
        "relatedAttackPatterns": [
          137
        ]
      },
      {
        "id": 139,
        "name": "Relative Path Traversal",
        "description": "An attacker exploits a weakness in input validation on the target by supplying a specially constructed path utilizing dot and slash characters for the purpose of obtaining access to arbitrary files or resources. An attacker modifies a known path on the target in order to reach material that is not available through intended channels. These attacks normally involve adding additional path separators (/ or \\) and/or dots (.), or encodings thereof, in various combinations in order to reach parent directories or entirely separate trees of the target's directory structure.",
        "prerequisites": [
          "The target application must accept a string as user input, fail to sanitize combinations of characters in the input that have a special meaning in the context of path navigation, and insert the user-supplied string into path navigation commands."
        ],
        "relatedWeaknesses": [
          23
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Access Control Bypass Protection Mechanism",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content.",
          "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- using an allowlist approach.",
          "Implementation: Prefer working without user input when using file system calls",
          "Implementation: Use indirect references rather than actual file names.",
          "Implementation: Use possible permissions on file access when developing and deploying web applications."
        ],
        "relatedAttackPatterns": [
          126
        ]
      },
      {
        "id": 140,
        "name": "Bypassing of Intermediate Forms in Multiple-Form Sets",
        "description": "Some web applications require users to submit information through an ordered sequence of web forms. This is often done if there is a very large amount of information being collected or if information on earlier forms is used to pre-populate fields or determine which additional information the application needs to collect. An attacker who knows the names of the various forms in the sequence may be able to explicitly type in the name of a later form and navigate to it without first going through the previous forms. This can result in incomplete collection of information, incorrect assumptions about the information submitted by the attacker, or other problems that can impair the functioning of the application.",
        "prerequisites": [
          "The target must collect information from the user in a series of forms where each form has its own URL that the attacker can anticipate and the application must fail to detect attempts to access intermediate forms without first filling out the previous forms."
        ],
        "relatedWeaknesses": [
          372
        ],
        "relatedAttackPatterns": [
          74
        ]
      },
      {
        "id": 141,
        "name": "Cache Poisoning",
        "description": "An attacker exploits the functionality of cache technologies to cause specific data to be cached that aids the attackers' objectives. This describes any attack whereby an attacker places incorrect or harmful material in cache. The targeted cache can be an application's cache (e.g. a web browser cache) or a public cache (e.g. a DNS or ARP cache). Until the cache is refreshed, most applications or clients will treat the corrupted cache value as valid. This can lead to a wide range of exploits including redirecting web browsers towards sites that install malware and repeatedly incorrect calculations based on the incorrect value.",
        "prerequisites": [
          "The attacker must be able to modify the value stored in a cache to match a desired value.",
          "The targeted application must not be able to detect the illicit modification of the cache and must trust the cache value in its calculations."
        ],
        "relatedWeaknesses": [
          348,
          345,
          349,
          346
        ],
        "mitigations": [
          "Configuration: Disable client side caching.",
          "Implementation: Listens for query replies on a network, and sends a notification via email when an entry changes."
        ],
        "relatedAttackPatterns": [
          161
        ]
      },
      {
        "id": 142,
        "name": "DNS Cache Poisoning",
        "description": "A domain name server translates a domain name (such as www.example.com) into an IP address that Internet hosts use to contact Internet resources. An adversary modifies a public DNS cache to cause certain names to resolve to incorrect addresses that the adversary specifies. The result is that client applications that rely upon the targeted cache for domain name resolution will be directed not to the actual address of the specified domain name but to some other address. Adversaries can use this to herd clients to sites that install malware on the victim's computer or to masquerade as part of a Pharming attack.",
        "prerequisites": [
          "A DNS cache must be vulnerable to some attack that allows the adversary to replace addresses in its lookup table.Client applications must trust the corrupted cashed values and utilize them for their domain name resolutions."
        ],
        "relatedWeaknesses": [
          348,
          345,
          349,
          346,
          350
        ],
        "mitigations": [
          "Configuration: Make sure your DNS servers have been updated to the latest versions",
          "Configuration: UNIX services like rlogin, rsh/rcp, xhost, and nfs are all susceptible to wrong information being held in a cache. Care should be taken with these services so they do not rely upon DNS caches that have been exposed to the Internet.",
          "Configuration: Disable client side DNS caching."
        ],
        "relatedAttackPatterns": [
          141,
          89
        ]
      },
      {
        "id": 143,
        "name": "Detect Unpublicized Web Pages",
        "description": "An adversary searches a targeted web site for web pages that have not been publicized. In doing this, the adversary may be able to gain access to information that the targeted site did not intend to make public.",
        "prerequisites": [
          "The targeted web site must include pages within its published tree that are not connected to its tree of links. The sensitivity of the content of these pages determines the severity of this attack."
        ],
        "relatedWeaknesses": [
          425
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 144,
        "name": "Detect Unpublicized Web Services",
        "description": "An adversary searches a targeted web site for web services that have not been publicized. This attack can be especially dangerous since unpublished but available services may not have adequate security controls placed upon them given that an administrator may believe they are unreachable.",
        "prerequisites": [
          "The targeted web site must include unpublished services within its web tree. The nature of these services determines the severity of this attack."
        ],
        "relatedWeaknesses": [
          425
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 145,
        "name": "Checksum Spoofing",
        "description": "An adversary spoofs a checksum message for the purpose of making a payload appear to have a valid corresponding checksum. Checksums are used to verify message integrity. They consist of some value based on the value of the message they are protecting. Hash codes are a common checksum mechanism. Both the sender and recipient are able to compute the checksum based on the contents of the message. If the message contents change between the sender and recipient, the sender and recipient will compute different checksum values. Since the sender's checksum value is transmitted with the message, the recipient would know that a modification occurred. In checksum spoofing an adversary modifies the message body and then modifies the corresponding checksum so that the recipient's checksum calculation will match the checksum (created by the adversary) in the message. This would prevent the recipient from realizing that a change occurred.",
        "prerequisites": [
          "The adversary must be able to intercept a message from the sender (keeping the recipient from getting it), modify it, and send the modified message to the recipient.",
          "The sender and recipient must use a checksum to protect the integrity of their message and transmit this checksum in a manner where the adversary can intercept and modify it.",
          "The checksum value must be computable using information known to the adversary. A cryptographic checksum, which uses a key known only to the sender and recipient, would thwart this attack."
        ],
        "relatedWeaknesses": [
          354
        ],
        "relatedAttackPatterns": [
          148
        ]
      },
      {
        "id": 146,
        "name": "XML Schema Poisoning",
        "description": "An adversary corrupts or modifies the content of XML schema information passed between a client and server for the purpose of undermining the security of the target. XML Schemas provide the structure and content definitions for XML documents. Schema poisoning is the ability to manipulate a schema either by replacing or modifying it to compromise the programs that process documents that use this schema.",
        "prerequisites": [
          "Some level of access to modify the target schema.",
          "The schema used by the target application must be improperly secured against unauthorized modification and manipulation."
        ],
        "relatedWeaknesses": [
          15,
          472
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption A successful schema poisoning attack can compromise the availability of the target system's service by exhausting its available resources.",
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Protect the schema against unauthorized modification.",
          "Implementation: For applications that use a known schema, use a local copy or a known good repository instead of the schema reference supplied in the XML document. Additionally, ensure that the proper permissions are set on local files to avoid unauthorized modification.",
          "Implementation: For applications that leverage remote schemas, use the HTTPS protocol to prevent modification of traffic in transit and to avoid unauthorized modification."
        ],
        "relatedAttackPatterns": [
          271
        ]
      },
      {
        "id": 147,
        "name": "XML Ping of the Death",
        "description": "An attacker initiates a resource depletion attack where a large number of small XML messages are delivered at a sufficiently rapid rate to cause a denial of service or crash of the target. Transactions such as repetitive SOAP transactions can deplete resources faster than a simple flooding attack because of the additional resources used by the SOAP protocol and the resources necessary to process SOAP messages. The transactions used are immaterial as long as they cause resource utilization on the target. In other words, this is a normal flooding attack augmented by using messages that will require extra processing on the target.",
        "prerequisites": [
          "The target must receive and process XML transactions."
        ],
        "relatedWeaknesses": [
          400,
          770
        ],
        "consequences": [
          "Availability Resource Consumption DoS: resource consumption (other)"
        ],
        "mitigations": [
          "Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval.",
          "Implementation: Provide for network flow control and traffic shaping to control access to the resources."
        ],
        "relatedAttackPatterns": [
          528
        ]
      },
      {
        "id": 148,
        "name": "Content Spoofing",
        "description": "An adversary modifies content to make it contain something other than what the original content producer intended while keeping the apparent source of the content unchanged. The term content spoofing is most often used to describe modification of web pages hosted by a target to display the adversary's content instead of the owner's content. However, any content can be spoofed, including the content of email messages, file transfers, or the content of other network communication protocols. Content can be modified at the source (e.g. modifying the source file for a web page) or in transit (e.g. intercepting and modifying a message between the sender and recipient). Usually, the adversary will attempt to hide the fact that the content has been modified, but in some cases, such as with web site defacement, this is not necessary. Content Spoofing can lead to malware exposure, financial fraud (if the content governs financial transactions), privacy violations, and other unwanted outcomes.",
        "prerequisites": [
          "The target must provide content but fail to adequately protect it against modification.The adversary must have the means to alter data to which they are not authorized. If the content is to be modified in transit, the adversary must be able to intercept the targeted messages."
        ],
        "relatedWeaknesses": [
          345
        ],
        "consequences": [
          "Integrity Modify Data A successful content spoofing attack compromises the integrity of the application data."
        ]
      },
      {
        "id": 149,
        "name": "Explore for Predictable Temporary File Names",
        "description": "An attacker explores a target to identify the names and locations of predictable temporary files for the purpose of launching further attacks against the target. This involves analyzing naming conventions and storage locations of the temporary files created by a target application. If an attacker can predict the names of temporary files they can use this information to mount other attacks, such as information gathering and symlink attacks.",
        "prerequisites": [
          "The targeted application must create names for temporary files using a predictable procedure, e.g. using sequentially increasing numbers.",
          "The attacker must be able to see the names of the files the target is creating."
        ],
        "relatedWeaknesses": [
          377
        ],
        "relatedAttackPatterns": [
          497,
          155
        ]
      },
      {
        "id": 150,
        "name": "Collect Data from Common Resource Locations",
        "description": "An adversary exploits well-known locations for resources for the purposes of undermining the security of the target. In many, if not most systems, files and resources are organized in a default tree structure. This can be useful for adversaries because they often know where to look for resources or files that are necessary for attacks. Even when the precise location of a targeted resource may not be known, naming conventions may indicate a small area of the target machine's file tree where the resources are typically located. For example, configuration files are normally stored in the /etc director on Unix systems. Adversaries can take advantage of this to commit other types of attacks.",
        "prerequisites": [
          "The targeted applications must either expect files to be located at a specific location or, if the location of the files can be configured by the user, the user either failed to move the files from the default location or placed them in a conventional location for files of the given type."
        ],
        "relatedWeaknesses": [
          552,
          1239,
          1258,
          1266,
          1272,
          1323,
          1330
        ],
        "relatedAttackPatterns": [
          116
        ]
      },
      {
        "id": 151,
        "name": "Identity Spoofing",
        "description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
        "prerequisites": [
          "The identity associated with the message or resource must be removable or modifiable in an undetectable way."
        ],
        "relatedWeaknesses": [
          287
        ],
        "consequences": [
          "Confidentiality Integrity Authentication Access Control Gain Privileges"
        ],
        "mitigations": [
          "Employ robust authentication processes (e.g., multi-factor authentication)."
        ]
      },
      {
        "id": 153,
        "name": "Input Data Manipulation",
        "description": "An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target.",
        "prerequisites": [
          "The target must accept user data for processing and the manner in which this data is processed must depend on some aspect of the format or flags that the attacker can control."
        ],
        "relatedWeaknesses": [
          20
        ]
      },
      {
        "id": 154,
        "name": "Resource Location Spoofing",
        "description": "An adversary deceives an application or user and convinces them to request a resource from an unintended location. By spoofing the location, the adversary can cause an alternate resource to be used, often one that the adversary controls and can be used to help them achieve their malicious goals.",
        "prerequisites": [
          "None. All applications rely on file paths and therefore, in theory, they or their resources could be affected by this type of attack."
        ],
        "relatedWeaknesses": [
          451
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "Monitor network activity to detect any anomalous or unauthorized communication exchanges."
        ]
      },
      {
        "id": 155,
        "name": "Screen Temporary Files for Sensitive Information",
        "description": "An adversary exploits the temporary, insecure storage of information by monitoring the content of files used to store temp data during an application's routine execution flow. Many applications use temporary files to accelerate processing or to provide records of state across multiple executions of the application. Sometimes, however, these temporary files may end up storing sensitive information. By screening an application's temporary files, an adversary might be able to discover such sensitive information. For example, web browsers often cache content to accelerate subsequent lookups. If the content contains sensitive information then the adversary could recover this from the web cache.",
        "prerequisites": [
          "The target application must utilize temporary files and must fail to adequately secure them against other parties reading them."
        ],
        "relatedWeaknesses": [
          377
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 157,
        "name": "Sniffing Attacks",
        "description": "In this attack pattern, the adversary intercepts information transmitted between two third parties. The adversary must be able to observe, read, and/or hear the communication traffic, but not necessarily block the communication or change its content. Any transmission medium can theoretically be sniffed if the adversary can examine the contents between the sender and recipient. Sniffing Attacks are similar to Adversary-In-The-Middle attacks (CAPEC-94), but are entirely passive. AiTM attacks are predominantly active and often alter the content of the communications themselves.",
        "prerequisites": [
          "The target data stream must be transmitted on a medium to which the adversary has access."
        ],
        "relatedWeaknesses": [
          311
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Encrypt sensitive information when transmitted on insecure mediums to prevent interception."
        ],
        "relatedAttackPatterns": [
          117,
          652
        ]
      },
      {
        "id": 158,
        "name": "Sniffing Network Traffic",
        "description": "In this attack pattern, the adversary monitors network traffic between nodes of a public or multicast network in an attempt to capture sensitive information at the protocol level. Network sniffing applications can reveal TCP/IP, DNS, Ethernet, and other low-level network communication information. The adversary takes a passive role in this attack pattern and simply observes and analyzes the traffic. The adversary may precipitate or indirectly influence the content of the observed transaction, but is never the intended recipient of the target information.",
        "prerequisites": [
          "The target must be communicating on a network protocol visible by a network sniffing application.",
          "The adversary must obtain a logical position on the network from intercepting target network traffic is possible. Depending on the network topology, traffic sniffing may be simple or challenging. If both the target sender and target recipient are members of a single subnet, the adversary must also be on that subnet in order to see their traffic communication."
        ],
        "relatedWeaknesses": [
          311
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Obfuscate network traffic through encryption to prevent its readability by network sniffers.",
          "Employ appropriate levels of segmentation to your network in accordance with best practices."
        ],
        "relatedAttackPatterns": [
          157
        ]
      },
      {
        "id": 159,
        "name": "Redirect Access to Libraries",
        "description": "An adversary exploits a weakness in the way an application searches for external libraries to manipulate the execution flow to point to an adversary supplied library or code base. This pattern of attack allows the adversary to compromise the application or server via the execution of unauthorized code. An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. If an adversary can redirect an application's attempts to access these libraries to other libraries that the adversary supplies, the adversary will be able to force the targeted application to execute arbitrary code. This is especially dangerous if the targeted application has enhanced privileges. Access can be redirected through a number of techniques, including the use of symbolic links, search path modification, and relative path manipulation.",
        "prerequisites": [
          "The target must utilize external libraries and must fail to verify the integrity of these libraries before using them."
        ],
        "relatedWeaknesses": [
          706
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Implementation: Restrict the permission to modify the entries in the configuration file.",
          "Implementation: Check the integrity of the dynamically linked libraries before use them.",
          "Implementation: Use obfuscation and other techniques to prevent reverse engineering the libraries."
        ],
        "relatedAttackPatterns": [
          154,
          185
        ]
      },
      {
        "id": 160,
        "name": "Exploit Script-Based APIs",
        "description": "Some APIs support scripting instructions as arguments. Methods that take scripted instructions (or references to scripted instructions) can be very flexible and powerful. However, if an attacker can specify the script that serves as input to these methods they can gain access to a great deal of functionality. For example, HTML pages support tags that allow scripting languages to be embedded in the page and then interpreted by the receiving web browser. If the content provider is malicious, these scripts can compromise the client application. Some applications may even execute the scripts under their own identity (rather than the identity of the user providing the script) which can allow attackers to perform activities that would otherwise be denied to them.",
        "prerequisites": [
          "The target application must include the use of APIs that execute scripts.",
          "The target application must allow the attacker to provide some or all of the arguments to one of these script interpretation methods and must fail to adequately filter these arguments for dangerous or unwanted script commands."
        ],
        "relatedWeaknesses": [
          346
        ],
        "relatedAttackPatterns": [
          113
        ]
      },
      {
        "id": 161,
        "name": "Infrastructure Manipulation",
        "description": "An attacker exploits characteristics of the infrastructure of a network entity in order to perpetrate attacks or information gathering on network objects or effect a change in the ordinary information flow between network objects. Most often, this involves manipulation of the routing of network messages so, instead of arriving at their proper destination, they are directed towards an entity of the attackers' choosing, usually a server controlled by the attacker. The victim is often unaware that their messages are not being processed correctly. For example, a targeted client may believe they are connecting to their own bank but, in fact, be connecting to a Pharming site controlled by the attacker which then collects the user's login information in order to hijack the actual bank account.",
        "prerequisites": [
          "The targeted client must access the site via infrastructure that the attacker has co-opted and must fail to adequately verify that the communication channel is operating correctly (e.g. by verifying that they are, in fact, connected to the site they intended.)"
        ],
        "relatedWeaknesses": [
          923
        ],
        "relatedAttackPatterns": [
          664
        ]
      },
      {
        "id": 162,
        "name": "Manipulating Hidden Fields",
        "description": "An adversary exploits a weakness in the server's trust of client-side processing by modifying data on the client-side, such as price information, and then submitting this data to the server, which processes the modified data. For example, eShoplifting is a data manipulation attack against an on-line merchant during a purchasing transaction. The manipulation of price, discount or quantity fields in the transaction message allows the adversary to acquire items at a lower cost than the merchant intended. The adversary performs a normal purchasing transaction but edits hidden fields within the HTML form response that store price or other information to give themselves a better deal. The merchant then uses the modified pricing information in calculating the cost of the selected items.",
        "prerequisites": [
          "The targeted site must contain hidden fields to be modified.",
          "The targeted site must not validate the hidden fields with backend processing."
        ],
        "relatedWeaknesses": [
          602
        ],
        "relatedAttackPatterns": [
          77
        ]
      },
      {
        "id": 163,
        "name": "Spear Phishing",
        "description": "An adversary targets a specific user or group with a Phishing (CAPEC-98) attack tailored to a category of users in order to have maximum relevance and deceptive capability. Spear Phishing is an enhanced version of the Phishing attack targeted to a specific user or group. The quality of the targeted email is usually enhanced by appearing to come from a known or trusted entity. If the email account of some trusted entity has been compromised the message may be digitally signed. The message will contain information specific to the targeted users that will enhance the probability that they will follow the URL to the compromised site. For example, the message may indicate knowledge of the targets employment, residence, interests, or other information that suggests familiarity. As soon as the user follows the instructions in the message, the attack proceeds as a standard Phishing attack.",
        "prerequisites": [
          "None. Any user can be targeted by a Spear Phishing attack."
        ],
        "relatedWeaknesses": [
          451
        ],
        "consequences": [
          "Confidentiality Read Data Information Leakage",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges Privilege Escalation",
          "Integrity Modify Data Data Modification"
        ],
        "mitigations": [
          "Do not follow any links that you receive within your e-mails and certainly do not input any login credentials on the page that they take you too. Instead, call your Bank, PayPal, eBay, etc., and inquire about the problem. A safe practice would also be to type the URL of your bank in the browser directly and only then log in. Also, never reply to any e-mails that ask you to provide sensitive information of any kind."
        ],
        "relatedAttackPatterns": [
          98
        ]
      },
      {
        "id": 164,
        "name": "Mobile Phishing",
        "description": "An adversary targets mobile phone users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Mobile Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a text or SMS message, rather than email. The user is enticed to provide information or visit a compromised web site via this message. Apart from the manner in which the attack is initiated, the attack proceeds as a standard Phishing attack.",
        "prerequisites": [
          "An adversary needs mobile phone numbers to initiate contact with the victim.",
          "An adversary needs to correctly guess the entity with which the victim does business and impersonate it. Most of the time phishers just use the most popular banks/services and send out their \"hooks\" to many potential victims.",
          "An adversary needs to have a sufficiently compelling call to action to prompt the user to take action.",
          "The replicated website needs to look extremely similar to the original website and the URL used to get to that website needs to look like the real URL of the said business entity."
        ],
        "relatedWeaknesses": [
          451
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Do not follow any links that you receive within text messages and do not input any login credentials on the page that they take you too. Instead, call your Bank, PayPal, eBay, etc., and inquire about the problem. Safe practices also include leveraging the entity's mobile application or directly typing the entity's URL in the browser and only then logging in. Never reply to any text messages that ask you to provide sensitive information of any kind."
        ],
        "relatedAttackPatterns": [
          98
        ]
      },
      {
        "id": 165,
        "name": "File Manipulation",
        "description": "An attacker modifies file contents or attributes (such as extensions or names) of files in a manner to cause incorrect processing by an application. Attackers use this class of attacks to cause applications to enter unstable states, overwrite or expose sensitive information, and even execute arbitrary code with the application's privileges. This class of attacks differs from attacks on configuration information (even if file-based) in that file manipulation causes the file processing to result in non-standard behaviors, such as buffer overflows or use of the incorrect interpreter. Configuration attacks rely on the application interpreting files correctly in order to insert harmful configuration information. Likewise, resource location attacks rely on controlling an application's ability to locate files, whereas File Manipulation attacks do not require the application to look in a non-default location, although the two classes of attacks are often combined.",
        "prerequisites": [
          "The target must use the affected file without verifying its integrity."
        ]
      },
      {
        "id": 166,
        "name": "Force the System to Reset Values",
        "description": "An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions.",
        "prerequisites": [
          "The targeted application must have a reset function that returns the configuration of the application to an earlier state.",
          "The reset functionality must be inadequately protected against use."
        ],
        "relatedWeaknesses": [
          306,
          1221,
          1232
        ],
        "relatedAttackPatterns": [
          161
        ]
      },
      {
        "id": 167,
        "name": "White Box Reverse Engineering",
        "description": "An attacker discovers the structure, function, and composition of a type of computer software through white box analysis techniques. White box techniques involve methods which can be applied to a piece of software when an executable or some other compiled object can be directly subjected to analysis, revealing at least a portion of its machine instructions that can be observed upon execution.",
        "prerequisites": [
          "Direct access to the object or software."
        ],
        "relatedWeaknesses": [
          1323
        ],
        "relatedAttackPatterns": [
          188
        ]
      },
      {
        "id": 168,
        "name": "Windows ::DATA Alternate Data Stream",
        "description": "An attacker exploits the functionality of Microsoft NTFS Alternate Data Streams (ADS) to undermine system security. ADS allows multiple \"files\" to be stored in one directory entry referenced as filename:streamname. One or more alternate data streams may be stored in any file or directory. Normal Microsoft utilities do not show the presence of an ADS stream attached to a file. The additional space for the ADS is not recorded in the displayed file size. The additional space for ADS is accounted for in the used space on the volume. An ADS can be any type of file. ADS are copied by standard Microsoft utilities between NTFS volumes. ADS can be used by an attacker or intruder to hide tools, scripts, and data from detection by normal system utilities. Many anti-virus programs do not check for or scan ADS. Windows Vista does have a switch (-R) on the command line DIR command that will display alternate streams.",
        "prerequisites": [
          "The target must be running the Microsoft NTFS file system."
        ],
        "relatedWeaknesses": [
          212,
          69
        ],
        "mitigations": [
          "Design: Use FAT file systems which do not support Alternate Data Streams.",
          "Implementation: Use Vista dir with the -R switch or utility to find Alternate Data Streams and take appropriate action with those discovered.",
          "Implementation: Use products that are Alternate Data Stream aware for virus scanning and system security operations."
        ],
        "relatedAttackPatterns": [
          636
        ]
      },
      {
        "id": 169,
        "name": "Footprinting",
        "description": "An adversary engages in probing and exploration activities to identify constituents and properties of the target.",
        "prerequisites": [
          "An application must publicize identifiable information about the system or application through voluntary or involuntary means. Certain identification details of information systems are visible on communication networks (e.g., if an adversary uses a sniffer to inspect the traffic) due to their inherent structure and protocol standards. Any system or network that can be detected can be footprinted. However, some configuration choices may limit the useful information that can be collected during a footprinting attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Keep patches up to date by installing weekly or daily if possible.",
          "Shut down unnecessary services/ports.",
          "Change default passwords by choosing strong passwords.",
          "Curtail unexpected input.",
          "Encrypt and password-protect sensitive data.",
          "Avoid including information that has the potential to identify and compromise your organization's security such as access to business plans, formulas, and proprietary documents."
        ]
      },
      {
        "id": 170,
        "name": "Web Application Fingerprinting",
        "description": "An attacker sends a series of probes to a web application in order to elicit version-dependent and type-dependent behavior that assists in identifying the target. An attacker could learn information such as software versions, error pages, and response headers, variations in implementations of the HTTP protocol, directory structures, and other similar information about the targeted service. This information can then be used by an attacker to formulate a targeted attack plan. While web application fingerprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.",
        "prerequisites": [
          "Any web application can be fingerprinted. However, some configuration choices can limit the useful information an attacker may collect during a fingerprinting attack."
        ],
        "relatedWeaknesses": [
          497
        ],
        "consequences": [
          "Confidentiality Other Information Leakage"
        ],
        "mitigations": [
          "Implementation: Obfuscate server fields of HTTP response.",
          "Implementation: Hide inner ordering of HTTP response header.",
          "Implementation: Customizing HTTP error codes such as 404 or 500.",
          "Implementation: Hide URL file extension.",
          "Implementation: Hide HTTP response header software information filed.",
          "Implementation: Hide cookie's software information filed.",
          "Implementation: Appropriately deal with error messages.",
          "Implementation: Obfuscate database type in Database API's error message."
        ],
        "relatedAttackPatterns": [
          541
        ]
      },
      {
        "id": 171,
        "name": "DEPRECATED: Variable Manipulation",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-77 : Manipulating User-Controlled Variables\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 173,
        "name": "Action Spoofing",
        "description": "An adversary is able to disguise one action for another and therefore trick a user into initiating one type of action when they intend to initiate a different action. For example, a user might be led to believe that clicking a button will submit a query, but in fact it downloads software. Adversaries may perform this attack through social means, such as by simply convincing a victim to perform the action or relying on a user's natural inclination to do so, or through technical means, such as a clickjacking attack where a user sees one interface but is actually interacting with a second, invisible, interface.",
        "prerequisites": [
          "The adversary must convince the victim into performing the decoy action.",
          "The adversary must have the means to control a user's interface to present them with a decoy action as well as the actual malicious action. Simple versions of this attack can be performed using web pages requiring only that the adversary be able to host (or control) content that the user visits."
        ],
        "relatedWeaknesses": [
          451
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Action spoofing can result in a wide variety of consequences and negatively affect all three elements of the security triad."
        ],
        "mitigations": [
          "Avoid interacting with suspicious sites or clicking suspicious links.",
          "An organization should provide regular, robust cybersecurity training to its employees."
        ]
      },
      {
        "id": 174,
        "name": "Flash Parameter Injection",
        "description": "An adversary takes advantage of improper data validation to inject malicious global parameters into a Flash file embedded within an HTML document. Flash files can leverage user-submitted data to configure the Flash document and access the embedding HTML document.",
        "relatedWeaknesses": [
          88
        ],
        "consequences": [
          "Confidentiality Other Information Leakage",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "User input must be sanitized according to context before reflected back to the user. The JavaScript function 'encodeURI' is not always sufficient for sanitizing input intended for global Flash parameters. Extreme caution should be taken when saving user input in Flash cookies. In such cases the Flash file itself will need to be fixed and recompiled, changing the name of the local shared objects (Flash cookies)."
        ],
        "relatedAttackPatterns": [
          182,
          460,
          63,
          178
        ]
      },
      {
        "id": 175,
        "name": "Code Inclusion",
        "description": "An adversary exploits a weakness on the target to force arbitrary code to be retrieved locally or from a remote location and executed. This differs from code injection in that code injection involves the direct inclusion of code while code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
        "prerequisites": [
          "The target application must include external code/libraries that are executed when the application runs and the adversary must be able to influence the specific files that get included.",
          "The victim must run the targeted application, possibly using the crafted parameters that the adversary uses to identify the code to include."
        ],
        "relatedWeaknesses": [
          829
        ]
      },
      {
        "id": 176,
        "name": "Configuration/Environment Manipulation",
        "description": "An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.",
        "prerequisites": [
          "The target application must consult external files or configuration controls to control its execution. All but the very simplest applications meet this requirement."
        ],
        "relatedWeaknesses": [
          15,
          1233,
          1234,
          1304,
          1328
        ]
      },
      {
        "id": 177,
        "name": "Create files with the same name as files protected with a higher classification",
        "description": "An attacker exploits file location algorithms in an operating system or application by creating a file with the same name as a protected or privileged file. The attacker could manipulate the system if the attacker-created file is trusted by the operating system or an application component that attempts to load the original file. Applications often load or include external files, such as libraries or configuration files. These files should be protected against malicious manipulation. However, if the application only uses the name of the file when locating it, an attacker may be able to create a file with the same name and place it in a directory that the application will search before the directory with the legitimate file is searched. Because the attackers' file is discovered first, it would be used by the target application. This attack can be extremely destructive if the referenced file is executable and/or is granted special privileges based solely on having a particular name.",
        "prerequisites": [
          "The target application must include external files. Most non-trivial applications meet this criterion.",
          "The target application does not verify that a located file is the one it was looking for through means other than the name. Many applications fail to perform checks of this type.",
          "The directories the target application searches to find the included file include directories writable by the attacker which are searched before the protected directory containing the actual files. It is much less common for applications to meet this criterion, but if an attacker can manipulate the application's search path (possibly by controlling environmental variables) then they can force this criterion to be met."
        ],
        "relatedWeaknesses": [
          706
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 178,
        "name": "Cross-Site Flashing",
        "description": "An attacker is able to trick the victim into executing a Flash document that passes commands or calls to a Flash player browser plugin, allowing the attacker to exploit native Flash functionality in the client browser. This attack pattern occurs where an attacker can provide a crafted link to a Flash document (SWF file) which, when followed, will cause additional malicious instructions to be executed. The attacker does not need to serve or control the Flash document. The attack takes advantage of the fact that Flash files can reference external URLs. If variables that serve as URLs that the Flash application references can be controlled through parameters, then by creating a link that includes values for those parameters, an attacker can cause arbitrary content to be referenced and possibly executed by the targeted Flash application.",
        "prerequisites": [
          "The targeted Flash application must reference external URLs and the locations thus referenced must be controllable through parameters. The Flash application must fail to sanitize such parameters against malicious manipulation. The victim must follow a crafted link created by the attacker."
        ],
        "relatedWeaknesses": [
          601
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Implementation: Only allow known URL to be included as remote flash movies in a flash application",
          "Configuration: Properly configure the crossdomain.xml file to only include the known domains that should host remote flash movies."
        ],
        "relatedAttackPatterns": [
          182
        ]
      },
      {
        "id": 179,
        "name": "Calling Micro-Services Directly",
        "description": "An attacker is able to discover and query Micro-services at a web location and thereby expose the Micro-services to further exploitation by gathering information about their implementation and function. Micro-services in web pages allow portions of a page to connect to the server and update content without needing to cause the entire page to update. This allows user activity to change portions of the page more quickly without causing disruptions elsewhere.",
        "prerequisites": [
          "The target site must use micro-services that interact with the server and one or more of these micro-services must be vulnerable to some other attack pattern."
        ],
        "relatedAttackPatterns": [
          554
        ]
      },
      {
        "id": 180,
        "name": "Exploiting Incorrectly Configured Access Control Security Levels",
        "description": "An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the system or network. Sensitive functionality should always be protected with access controls. However configuring all but the most trivial access control systems can be very complicated and there are many opportunities for mistakes. If an attacker can learn of incorrectly configured access security settings, they may be able to exploit this in an attack.",
        "prerequisites": [
          "The target must apply access controls, but incorrectly configure them. However, not all incorrect configurations can be exploited by an attacker. If the incorrect configuration applies too little security to some functionality, then the attacker may be able to exploit it if the access control would be the only thing preventing an attacker's access and it no longer does so. If the incorrect configuration applies too much security, it must prevent legitimate activity and the attacker must be able to force others to require this activity.."
        ],
        "relatedWeaknesses": [
          732,
          1190,
          1191,
          1193,
          1220,
          1268,
          1280,
          1297,
          1311,
          1315,
          1318,
          1320,
          1321
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Authorization Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Design: Configure the access control correctly."
        ],
        "relatedAttackPatterns": [
          122,
          17
        ]
      },
      {
        "id": 181,
        "name": "Flash File Overlay",
        "description": "An attacker creates a transparent overlay using flash in order to intercept user actions for the purpose of performing a clickjacking attack. In this technique, the Flash file provides a transparent overlay over HTML content. Because the Flash application is on top of the content, user actions, such as clicks, are caught by the Flash application rather than the underlying HTML. The action is then interpreted by the overlay to perform the actions the attacker wishes.",
        "prerequisites": [
          "The victim must be tricked into navigating to the attackers' decoy site and performing the actions on the decoy page.",
          "The victim's browser must support invisible Flash overlays."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "relatedAttackPatterns": [
          103
        ]
      },
      {
        "id": 182,
        "name": "Flash Injection",
        "description": "An attacker tricks a victim to execute malicious flash content that executes commands or makes flash calls specified by the attacker. One example of this attack is cross-site flashing, an attacker controlled parameter to a reference call loads from content specified by the attacker.",
        "prerequisites": [
          "The target must be capable of running Flash applications. In some cases, the victim must follow an attacker-supplied link."
        ],
        "relatedWeaknesses": [
          20,
          184,
          697
        ],
        "consequences": [
          "Confidentiality Other Information Leakage",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Implementation: remove sensitive information such as user name and password in the SWF file.",
          "Implementation: use validation on both client and server side.",
          "Implementation: remove debug information.",
          "Implementation: use SSL when loading external data",
          "Implementation: use crossdomain.xml file to allow the application domain to load stuff or the SWF file called by other domain."
        ],
        "relatedAttackPatterns": [
          137,
          248
        ]
      },
      {
        "id": 183,
        "name": "IMAP/SMTP Command Injection",
        "description": "An adversary exploits weaknesses in input validation on web-mail servers to execute commands on the IMAP/SMTP server. Web-mail servers often sit between the Internet and the IMAP or SMTP mail server. User requests are received by the web-mail servers which then query the back-end mail server for the requested information and return this response to the user. In an IMAP/SMTP command injection attack, mail-server commands are embedded in parts of the request sent to the web-mail server. If the web-mail server fails to adequately sanitize these requests, these commands are then sent to the back-end mail server when it is queried by the web-mail server, where the commands are then executed. This attack can be especially dangerous since administrators may assume that the back-end server is protected against direct Internet access and therefore may not secure it adequately against the execution of malicious commands.",
        "prerequisites": [
          "The target environment must consist of a web-mail server that the attacker can query and a back-end mail server. The back-end mail server need not be directly accessible to the attacker.",
          "The web-mail server must fail to adequately sanitize fields received from users and passed on to the back-end mail server.",
          "The back-end mail server must not be adequately secured against receiving malicious commands from the web-mail server."
        ],
        "relatedWeaknesses": [
          77
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 184,
        "name": "Software Integrity Attack",
        "description": "An attacker initiates a series of events designed to cause a user, program, server, or device to perform actions which undermine the integrity of software code, device data structures, or device firmware, achieving the modification of the target's integrity to achieve an insecure state.",
        "relatedWeaknesses": [
          494
        ]
      },
      {
        "id": 185,
        "name": "Malicious Software Download",
        "description": "An attacker uses deceptive methods to cause a user or an automated process to download and install dangerous code that originates from an attacker controlled source. There are several variations to this strategy of attack.",
        "relatedWeaknesses": [
          494
        ],
        "relatedAttackPatterns": [
          184,
          662
        ]
      },
      {
        "id": 186,
        "name": "Malicious Software Update",
        "description": "An adversary uses deceptive methods to cause a user or an automated process to download and install dangerous code believed to be a valid update that originates from an adversary controlled source.",
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Access Control Availability Confidentiality Execute Unauthorized Commands Utilize the built-in software update mechanisms of the commercial components to deliver software that could compromise security credentials, enable a denial-of-service attack, or enable tracking."
        ],
        "mitigations": [
          "Validate software updates before installing."
        ],
        "relatedAttackPatterns": [
          184,
          98
        ]
      },
      {
        "id": 187,
        "name": "Malicious Automated Software Update via Redirection",
        "description": "An attacker exploits two layers of weaknesses in server or client software for automated update mechanisms to undermine the integrity of the target code-base. The first weakness involves a failure to properly authenticate a server as a source of update or patch content. This type of weakness typically results from authentication mechanisms which can be defeated, allowing a hostile server to satisfy the criteria that establish a trust relationship. The second weakness is a systemic failure to validate the identity and integrity of code downloaded from a remote location, hence the inability to distinguish malicious code from a legitimate update.",
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Access Control Availability Confidentiality Execute Unauthorized Commands"
        ],
        "relatedAttackPatterns": [
          186
        ]
      },
      {
        "id": 188,
        "name": "Reverse Engineering",
        "description": "An adversary discovers the structure, function, and composition of an object, resource, or system by using a variety of analysis techniques to effectively determine how the analyzed entity was constructed or operates. The goal of reverse engineering is often to duplicate the function, or a part of the function, of an object in order to duplicate or \"back engineer\" some aspect of its functioning. Reverse engineering techniques can be applied to mechanical objects, electronic devices, or software, although the methodology and techniques involved in each type of analysis differ widely.",
        "prerequisites": [
          "Access to targeted system, resources, and information."
        ],
        "relatedWeaknesses": [
          1278
        ],
        "mitigations": [
          "Employ code obfuscation techniques to prevent the adversary from reverse engineering the targeted entity."
        ]
      },
      {
        "id": 189,
        "name": "Black Box Reverse Engineering",
        "description": "An adversary discovers the structure, function, and composition of a type of computer software through black box analysis techniques. 'Black Box' methods involve interacting with the software indirectly, in the absence of direct access to the executable object. Such analysis typically involves interacting with the software at the boundaries of where the software interfaces with a larger execution environment, such as input-output vectors, libraries, or APIs. Black Box Reverse Engineering also refers to gathering physical side effects of a hardware device, such as electromagnetic radiation or sounds.",
        "relatedWeaknesses": [
          203,
          1255,
          1300
        ],
        "relatedAttackPatterns": [
          188
        ]
      },
      {
        "id": 190,
        "name": "Reverse Engineer an Executable to Expose Assumed Hidden Functionality",
        "description": "An attacker analyzes a binary file or executable for the purpose of discovering the structure, function, and possibly source-code of the file by using a variety of analysis techniques to effectively determine how the software functions and operates. This type of analysis is also referred to as Reverse Code Engineering, as techniques exist for extracting source code from an executable. Several techniques are often employed for this purpose, both black box and white box. The use of computer bus analyzers and packet sniffers allows the binary to be studied at a level of interactions with its computing environment, such as a host OS, inter-process communication, and/or network communication. This type of analysis falls into the 'black box' category because it involves behavioral analysis of the software without reference to source code, object code, or protocol specifications.",
        "relatedWeaknesses": [
          912
        ],
        "relatedAttackPatterns": [
          167
        ]
      },
      {
        "id": 191,
        "name": "Read Sensitive Constants Within an Executable",
        "description": "An adversary engages in activities to discover any sensitive constants present within the compiled code of an executable. These constants may include literal ASCII strings within the file itself, or possibly strings hard-coded into particular routines that can be revealed by code refactoring methods including static and dynamic analysis.",
        "prerequisites": [
          "Access to a binary or executable such that it can be analyzed by various utilities."
        ],
        "relatedWeaknesses": [
          798
        ],
        "relatedAttackPatterns": [
          167
        ]
      },
      {
        "id": 192,
        "name": "Protocol Analysis",
        "description": "An adversary engages in activities to decipher and/or decode protocol information for a network or application communication protocol used for transmitting information between interconnected nodes or systems on a packet-switched data network. While this type of analysis involves the analysis of a networking protocol inherently, it does not require the presence of an actual or physical network.",
        "prerequisites": [
          "Access to a binary executable.",
          "The ability to observe and interact with a communication channel between communicating processes."
        ],
        "relatedWeaknesses": [
          326
        ],
        "consequences": [
          "Confidentiality Read Data Successful deciphering of protocol information compromises the confidentiality of future sensitive communications.",
          "Integrity Modify Data Modifying communications after successful deciphering of protocol information compromises integrity."
        ]
      },
      {
        "id": 193,
        "name": "PHP Remote File Inclusion",
        "description": "In this pattern the adversary is able to load and execute arbitrary code remotely available from the application. This is usually accomplished through an insecurely configured PHP runtime environment and an improperly sanitized \"include\" or \"require\" call, which the user can then control to point to any web-accessible file. This allows adversaries to hijack the targeted application and force it to execute their own instructions.",
        "prerequisites": [
          "Target application server must allow remote files to be included in the \"require\", \"include\", etc. PHP directives",
          "The adversary must have the ability to make HTTP requests to the target web application."
        ],
        "relatedWeaknesses": [
          98,
          80
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Implementation: Perform input validation for all remote content, including remote and user-generated content",
          "Implementation: Only allow known files to be included (allowlist)",
          "Implementation: Make use of indirect references passed in URL parameters instead of file names",
          "Configuration: Ensure that remote scripts cannot be include in the \"include\" or \"require\" PHP directives"
        ],
        "relatedAttackPatterns": [
          253
        ]
      },
      {
        "id": 194,
        "name": "Fake the Source of Data",
        "description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
        "prerequisites": [
          "This attack is only applicable when a vulnerable entity associates data or services with an identity. Without such an association, there would be no reason to fake the source."
        ],
        "relatedWeaknesses": [
          287
        ],
        "consequences": [
          "Integrity Alter Execution Logic By faking the source of data or services, an adversary can cause a target to make incorrect decisions about how to proceed.",
          "Integrity Gain Privileges By impersonating identities that have an increased level of access, an adversary gain privilege that they many not have otherwise had.",
          "Integrity Hide Activities Faking the source of data or services can be used to create a false trail in logs as the target will associate any actions with the impersonated identity instead of the adversary."
        ],
        "relatedAttackPatterns": [
          151,
          657,
          667
        ]
      },
      {
        "id": 195,
        "name": "Principal Spoof",
        "description": "A Principal Spoof is a form of Identity Spoofing where an adversary pretends to be some other person in an interaction. This is often accomplished by crafting a message (either written, verbal, or visual) that appears to come from a person other than the adversary. Phishing and Pharming attacks often attempt to do this so that their attempts to gather sensitive information appear to come from a legitimate source. A Principal Spoof does not use stolen or spoofed authentication credentials, instead relying on the appearance and content of the message to reflect identity.",
        "prerequisites": [
          "The target must associate data or activities with a person's identity and the adversary must be able to modify this identity without detection."
        ],
        "relatedAttackPatterns": [
          151
        ]
      },
      {
        "id": 196,
        "name": "Session Credential Falsification through Forging",
        "description": "An attacker creates a false but functional session credential in order to gain or usurp access to a service. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. If an attacker is able to forge valid session credentials they may be able to bypass authentication or piggy-back off some other authenticated user's session. This attack differs from Reuse of Session IDs and Session Sidejacking attacks in that in the latter attacks an attacker uses a previous or existing credential without modification while, in a forging attack, the attacker must create their own credential, although it may be based on previously observed credentials.",
        "prerequisites": [
          "The targeted application must use session credentials to identify legitimate users. Session identifiers that remains unchanged when the privilege levels change. Predictable session identifiers."
        ],
        "relatedWeaknesses": [
          384,
          664
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Implementation: Use session IDs that are difficult to guess or brute-force: One way for the attackers to obtain valid session IDs is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult.",
          "Implementation: Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes."
        ],
        "relatedAttackPatterns": [
          384,
          61,
          21
        ]
      },
      {
        "id": 197,
        "name": "Exponential Data Expansion",
        "description": "An adversary submits data to a target application which contains nested exponential data expansion to produce excessively large output. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. However, this capability can be abused to create excessive demands on a processor's CPU and memory. A small number of nested expansions can result in an exponential growth in demands on memory.",
        "prerequisites": [
          "This type of attack requires that the target must receive input but either fail to provide an upper limit for entity expansion or provide a limit that is so large that it does not preclude significant resource consumption."
        ],
        "relatedWeaknesses": [
          770,
          776
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input. Use methods that limit entity expansion and throw exceptions on attempted entity expansion.",
          "Implementation: For XML based data - disable altogether the use of inline DTD schemas when parsing XML objects. If a DTD must be used, normalize, filter and use an allowlist and parse with methods and routines that will detect entity expansion from untrusted sources."
        ],
        "relatedAttackPatterns": [
          230
        ]
      },
      {
        "id": 198,
        "name": "XSS Targeting Error Pages",
        "description": "An adversary distributes a link (or possibly some other query structure) with a request to a third party web server that is malformed and also contains a block of exploit code in order to have the exploit become live code in the resulting error page.",
        "prerequisites": [
          "A third party web server which fails to adequately sanitize messages sent in error pages.",
          "The victim must be made to execute a query crafted by the adversary which results in the infected error report."
        ],
        "relatedWeaknesses": [
          81
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input.",
          "Implementation: Normalize, filter and use an allowlist for any input that will be used in error messages.",
          "Implementation: The victim should configure the browser to minimize active content from untrusted sources."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 199,
        "name": "XSS Using Alternate Syntax",
        "description": "An adversary uses alternate forms of keywords or commands that result in the same action as the primary form but which may not be caught by filters. For example, many keywords are processed in a case insensitive manner. If the site's web filtering algorithm does not convert all tags into a consistent case before the comparison with forbidden keywords it is possible to bypass filters (e.g., incomplete black lists) by using an alternate case structure. For example, the \"script\" tag using the alternate forms of \"Script\" or \"ScRiPt\" may bypass filters where \"script\" is the only form tested. Other variants using different syntax representations are also possible as well as using pollution meta-characters or entities that are eventually ignored by the rendering engine. The attack can result in the execution of otherwise prohibited functionality.",
        "prerequisites": [
          "Target client software must allow scripting such as JavaScript."
        ],
        "relatedWeaknesses": [
          87
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Design: Utilize strict type, character, and encoding enforcement",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Ensure all content coming from the client is using the same encoding; if not, the server-side application must canonicalize the data before applying any filtering.",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser",
          "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 200,
        "name": "Removal of filters: Input filters, output filters, data masking",
        "description": "An attacker removes or disables filtering mechanisms on the target application. Input filters prevent invalid data from being sent to an application (for example, overly large inputs that might cause a buffer overflow or other malformed inputs that may not be correctly handled by an application). Input filters might also be designed to constrained executable content.",
        "prerequisites": [
          "The target application must utilize some sort of filtering mechanism (input, output, or data masking)."
        ],
        "relatedAttackPatterns": [
          207
        ]
      },
      {
        "id": 201,
        "name": "Serialized Data External Linking",
        "description": "An adversary creates a serialized data file (e.g. XML, YAML, etc...) that contains an external data reference. Because serialized data parsers may not validate documents with external references, there may be no checks on the nature of the reference in the external data. This can allow an adversary to open arbitrary files or connections, which may further lead to the adversary gaining access to information on the system that they would normally be unable to obtain.",
        "prerequisites": [
          "The target must follow external data references without validating the validity of the reference target."
        ],
        "relatedWeaknesses": [
          829
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Configure the serialized data processor to only retrieve external entities from trusted sources."
        ],
        "relatedAttackPatterns": [
          122,
          278
        ]
      },
      {
        "id": 202,
        "name": "Create Malicious Client",
        "description": "An adversary creates a client application to interface with a target service where the client violates assumptions the service makes about clients. Services that have designated client applications (as opposed to services that use general client applications, such as IMAP or POP mail servers which can interact with any IMAP or POP client) may assume that the client will follow specific procedures.",
        "prerequisites": [
          "The targeted service must make assumptions about the behavior of the client application that interacts with it, which can be abused by an adversary."
        ],
        "relatedWeaknesses": [
          602
        ],
        "relatedAttackPatterns": [
          22
        ]
      },
      {
        "id": 203,
        "name": "Manipulate Registry Information",
        "description": "An adversary exploits a weakness in authorization in order to modify content within a registry (e.g., Windows Registry, Mac plist, application registry). Editing registry information can permit the adversary to hide configuration information or remove indicators of compromise to cover up activity. Many applications utilize registries to store configuration and service information. As such, modification of registry information can affect individual services (affecting billing, authorization, or even allowing for identity spoofing) or the overall configuration of a targeted application. For example, both Java RMI and SOAP use registries to track available services. Changing registry values is sometimes a preliminary step towards completing another attack pattern, but given the long term usage of many registry values, manipulation of registry information could be its own end.",
        "prerequisites": [
          "The targeted application must rely on values stored in a registry.",
          "The adversary must have a means of elevating permissions in order to access and modify registry content through either administrator privileges (e.g., credentialed access), or a remote access tool capable of editing a registry through an API."
        ],
        "relatedWeaknesses": [
          15
        ],
        "mitigations": [
          "Ensure proper permissions are set for Registry hives to prevent users from modifying keys.",
          "Employ a robust and layered defensive posture in order to prevent unauthorized users on your system.",
          "Employ robust identification and audit/blocking using an allowlist of applications on your system. Unnecessary applications, utilities, and configurations will have a presence in the system registry that can be leveraged by an adversary through this attack pattern."
        ],
        "relatedAttackPatterns": [
          176
        ]
      },
      {
        "id": 204,
        "name": "Lifting Sensitive Data Embedded in Cache",
        "description": "An adversary examines a target application's cache, or a browser cache, for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information.",
        "prerequisites": [
          "The target application must store sensitive information in a cache.",
          "The cache must be inadequately protected against attacker access."
        ],
        "relatedWeaknesses": [
          524,
          311,
          1239,
          1258
        ],
        "relatedAttackPatterns": [
          167,
          560
        ]
      },
      {
        "id": 205,
        "name": "DEPRECATED: Lifting credential(s)/key material embedded in client distributions (thick or thin)",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-37 : Retrieve Embedded Sensitive Data. Please refer to this other pattern going forward."
      },
      {
        "id": 206,
        "name": "Signing Malicious Code",
        "description": "The adversary extracts credentials used for code signing from a production environment and then uses these credentials to sign malicious content with the developer's key. Many developers use signing keys to sign code or hashes of code. When users or applications verify the signatures are accurate they are led to believe that the code came from the owner of the signing key and that the code has not been modified since the signature was applied. If the adversary has extracted the signing credentials then they can use those credentials to sign their own code bundles. Users or tools that verify the signatures attached to the code will likely assume the code came from the legitimate developer and install or run the code, effectively allowing the adversary to execute arbitrary code on the victim's computer. This differs from CAPEC-673, because the adversary is performing the code signing.",
        "prerequisites": [
          "The targeted developer must use a signing key to sign code bundles. (Note that not doing this is not a defense - it only means that the adversary does not need to steal the signing key before forging code bundles in the developer's name.)"
        ],
        "relatedWeaknesses": [
          732
        ],
        "mitigations": [
          "Ensure digital certificates are protected and inaccessible by unauthorized uses.",
          "If a digital certificate has been compromised it should be revoked and regenerated.",
          "Even if a piece of software has a valid and trusted digital signature, it should be assessed for any weaknesses and vulnerabilities."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 207,
        "name": "Removing Important Client Functionality",
        "description": "An adversary removes or disables functionality on the client that the server assumes to be present and trustworthy.",
        "prerequisites": [
          "The targeted server must assume the client performs important actions to protect the server or the server functionality. For example, the server may assume the client filters outbound traffic or that the client performs all price calculations correctly. Moreover, the server must fail to detect when these assumptions are violated by a client."
        ],
        "relatedWeaknesses": [
          602
        ],
        "consequences": [
          "Confidentiality Other Information Leakage",
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Design: For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side.",
          "Design: Ship client-side application with integrity checks (code signing) when possible.",
          "Design: Use obfuscation and other techniques to prevent reverse engineering the client code."
        ],
        "relatedAttackPatterns": [
          22
        ]
      },
      {
        "id": 208,
        "name": "Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements",
        "description": "An attacker removes or modifies the logic on a client associated with monetary calculations resulting in incorrect information being sent to the server. A server may rely on a client to correctly compute monetary information. For example, a server might supply a price for an item and then rely on the client to correctly compute the total cost of a purchase given the number of items the user is buying. If the attacker can remove or modify the logic that controls these calculations, they can return incorrect values to the server. The attacker can use this to make purchases for a fraction of the legitimate cost or otherwise avoid correct billing for activities.",
        "prerequisites": [
          "The targeted server must rely on the client to correctly perform monetary calculations and must fail to detect errors in these calculations."
        ],
        "relatedWeaknesses": [
          602
        ],
        "relatedAttackPatterns": [
          207
        ]
      },
      {
        "id": 209,
        "name": "XSS Using MIME Type Mismatch",
        "description": "An adversary creates a file with scripting content but where the specified MIME type of the file is such that scripting is not expected. The adversary tricks the victim into accessing a URL that responds with the script file. Some browsers will detect that the specified MIME type of the file does not match the actual type of its content and will automatically switch to using an interpreter for the real content type. If the browser does not invoke script filters before doing this, the adversary's script may run on the target unsanitized, possibly revealing the victim's cookies or executing arbitrary script in their browser.",
        "prerequisites": [
          "The victim must follow a crafted link that references a scripting file that is mis-typed as a non-executable file.",
          "The victim's browser must detect the true type of a mis-labeled scripting file and invoke the appropriate script interpreter without first performing filtering on the content."
        ],
        "relatedWeaknesses": [
          79,
          20,
          646
        ],
        "relatedAttackPatterns": [
          592
        ]
      },
      {
        "id": 211,
        "name": "DEPRECATED: Leveraging web tools (e.g. Mozilla's GreaseMonkey, Firebug) to change application behavior",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern."
      },
      {
        "id": 212,
        "name": "Functionality Misuse",
        "description": "An adversary leverages a legitimate capability of an application in such a way as to achieve a negative technical impact. The system functionality is not altered or modified but used in a way that was not intended. This is often accomplished through the overuse of a specific functionality or by leveraging functionality with design flaws that enables the adversary to gain access to unauthorized, sensitive data.",
        "prerequisites": [
          "The adversary has the capability to interact with the application directly.The target system does not adequately implement safeguards to prevent misuse of authorized actions/processes."
        ],
        "relatedWeaknesses": [
          1242,
          1246,
          1281
        ],
        "consequences": [
          "Confidentiality Gain Privileges A successful attack of this kind can compromise the confidentiality of an authorized user's credentials.",
          "Confidentiality Integrity Availability Other Depending on the adversary's intended technical impact, a successful attack of this kind can compromise any or all elements of the security triad."
        ],
        "mitigations": [
          "Perform comprehensive threat modeling, a process of identifying, evaluating, and mitigating potential threats to the application. This effort can help reveal potentially obscure application functionality that can be manipulated for malicious purposes.",
          "When implementing security features, consider how they can be misused and compromised."
        ]
      },
      {
        "id": 213,
        "name": "DEPRECATED: Directory Traversal",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-126 : Path Traversal\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 214,
        "name": "DEPRECATED: Fuzzing for garnering J2EE/.NET-based stack traces, for application mapping",
        "description": "This attack pattern has been deprecated as it was merged into \"CAPEC-215 : Fuzzing for application mapping\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 215,
        "name": "Fuzzing for application mapping",
        "description": "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash.",
        "prerequisites": [
          "The target application must fail to sanitize incoming messages adequately before processing."
        ],
        "relatedWeaknesses": [
          209,
          532
        ],
        "consequences": [
          "Confidentiality Other Information Leakage"
        ],
        "mitigations": [
          "Design: Construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are catalogued and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally.",
          "Design: wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion.",
          "Implementation: Obfuscate server fields of HTTP response.",
          "Implementation: Hide inner ordering of HTTP response header.",
          "Implementation: Customizing HTTP error codes such as 404 or 500.",
          "Implementation: Hide HTTP response header software information filed.",
          "Implementation: Hide cookie's software information filed.",
          "Implementation: Obfuscate database type in Database API's error message."
        ],
        "relatedAttackPatterns": [
          54,
          28
        ]
      },
      {
        "id": 216,
        "name": "Communication Channel Manipulation",
        "description": "An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.",
        "prerequisites": [
          "The target application must leverage an open communications channel.",
          "The channel on which the target communicates must be vulnerable to interception (e.g., adversary in the middle attack - CAPEC-94)."
        ],
        "relatedWeaknesses": [
          306
        ],
        "consequences": [
          "Integrity Read Data Modify Data Other The adversary's injection of additional content into a communication channel negatively impacts the integrity of that channel.",
          "Confidentiality Read Data A successful Communication Channel Manipulation attack can result in sensitive information exposure to the adversary, thereby compromising the communication channel's confidentiality."
        ],
        "mitigations": [
          "Encrypt all sensitive communications using properly-configured cryptography.",
          "Design the communication system such that it associates proper authentication/authorization with each channel/message."
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 217,
        "name": "Exploiting Incorrectly Configured SSL/TLS",
        "description": "An adversary takes advantage of incorrectly configured SSL/TLS communications that enables access to data intended to be encrypted. The adversary may also use this type of attack to inject commands or other traffic into the encrypted stream to cause compromise of either the client or server.",
        "prerequisites": [
          "Access to the client/server stream."
        ],
        "relatedWeaknesses": [
          201
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Do not use SSL, as all SSL versions have been broken and should not be used. If TLS is not an option for the client or server, consider setting timeouts on SSL sessions to extremely low values to lessen the potential impact.",
          "Only use TLS version 1.2+, as versions 1.0 and 1.1 are insecure.",
          "Configure TLS to use secure algorithms. The current recommendation is to use ECDH, ECDSA, AES256-GCM, and SHA384 for the most security."
        ],
        "relatedAttackPatterns": [
          216
        ]
      },
      {
        "id": 218,
        "name": "Spoofing of UDDI/ebXML Messages",
        "description": "An attacker spoofs a UDDI, ebXML, or similar message in order to impersonate a service provider in an e-business transaction. UDDI, ebXML, and similar standards are used to identify businesses in e-business transactions. Among other things, they identify a particular participant, WSDL information for SOAP transactions, and supported communication protocols, including security protocols. By spoofing one of these messages an attacker could impersonate a legitimate business in a transaction or could manipulate the protocols used between a client and business. This could result in disclosure of sensitive information, loss of message integrity, or even financial fraud.",
        "prerequisites": [
          "The targeted business's UDDI or ebXML information must be served from a location that the attacker can spoof or compromise or the attacker must be able to intercept and modify unsecured UDDI/ebXML messages in transit."
        ],
        "relatedWeaknesses": [
          345
        ],
        "mitigations": [
          "Implementation: Clients should only trust UDDI, ebXML, or similar messages that are verifiably signed by a trusted party."
        ],
        "relatedAttackPatterns": [
          148
        ]
      },
      {
        "id": 219,
        "name": "XML Routing Detour Attacks",
        "description": "An attacker subverts an intermediate system used to process XML content and forces the intermediate to modify and/or re-route the processing of the content. XML Routing Detour Attacks are Adversary in the Middle type attacks (CAPEC-94). The attacker compromises or inserts an intermediate system in the processing of the XML message. For example, WS-Routing can be used to specify a series of nodes or intermediaries through which content is passed. If any of the intermediate nodes in this route are compromised by an attacker they could be used for a routing detour attack. From the compromised system the attacker is able to route the XML process to other nodes of their choice and modify the responses so that the normal chain of processing is unaware of the interception. This system can forward the message to an outside entity and hide the forwarding and processing from the legitimate processing systems by altering the header information.",
        "prerequisites": [
          "The targeted system must have multiple stages processing of XML content."
        ],
        "relatedWeaknesses": [
          441,
          610
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Design: Specify maximum number intermediate nodes for the request and require SSL connections with mutual authentication.",
          "Implementation: Use SSL for connections between all parties with mutual authentication."
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 220,
        "name": "Client-Server Protocol Manipulation",
        "description": "An adversary takes advantage of weaknesses in the protocol by which a client and server are communicating to perform unexpected actions. Communication protocols are necessary to transfer messages between client and server applications. Moreover, different protocols may be used for different types of interactions.",
        "prerequisites": [
          "The client and/or server must utilize a protocol that has a weakness allowing manipulation of the interaction."
        ],
        "relatedWeaknesses": [
          757
        ],
        "relatedAttackPatterns": [
          272
        ]
      },
      {
        "id": 221,
        "name": "Data Serialization External Entities Blowup",
        "description": "This attack takes advantage of the entity replacement property of certain data serialization languages (e.g., XML, YAML, etc.) where the value of the replacement is a URI. A well-crafted file could have the entity refer to a URI that consumes a large amount of resources to create a denial of service condition. This can cause the system to either freeze, crash, or execute arbitrary code depending on the URI.",
        "prerequisites": [
          "A server that has an implementation that accepts entities containing URI values."
        ],
        "relatedWeaknesses": [
          611
        ],
        "consequences": [
          "Availability Resource Consumption",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code"
        ],
        "mitigations": [
          "This attack may be mitigated by tweaking the XML parser to not resolve external entities. If external entities are needed, then implement a custom XmlResolver that has a request timeout, data retrieval limit, and restrict resources it can retrieve locally.",
          "This attack may be mitigated by tweaking the serialized data parser to not resolve external entities. If external entities are needed, then implement a custom resolver that has a request timeout, data retrieval limit, and restrict resources it can retrieve locally."
        ],
        "relatedAttackPatterns": [
          231,
          278
        ]
      },
      {
        "id": 222,
        "name": "iFrame Overlay",
        "description": "In an iFrame overlay attack the victim is tricked into unknowingly initiating some action in one system while interacting with the UI from seemingly completely different system.",
        "prerequisites": [
          "The victim is communicating with the target application via a web based UI and not a thick client. The victim's browser security policies allow iFrames. The victim uses a modern browser that supports UI elements like clickable buttons (i.e. not using an old text only browser). The victim has an active session with the target system. The target system's interaction window is open in the victim's browser and supports the ability for initiating sensitive actions on behalf of the user in the target system."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Configuration: Disable iFrames in the Web browser.",
          "Operation: When maintaining an authenticated session with a privileged target system, do not use the same browser to navigate to unfamiliar sites to perform other activities. Finish working with the target system and logout first before proceeding to other tasks.",
          "Operation: If using the Firefox browser, use the NoScript plug-in that will help forbid iFrames."
        ],
        "relatedAttackPatterns": [
          103
        ]
      },
      {
        "id": 224,
        "name": "Fingerprinting",
        "description": "An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Most commonly, fingerprinting is done to determine operating system and application versions. Fingerprinting can be done passively as well as actively. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.",
        "prerequisites": [
          "A means by which to interact with the target system directly."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "While some information is shared by systems automatically based on standards and protocols, remove potentially sensitive information that is not necessary for the application's functionality as much as possible."
        ]
      },
      {
        "id": 226,
        "name": "Session Credential Falsification through Manipulation",
        "description": "An attacker manipulates an existing credential in order to gain access to a target application. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. An attacker may be able to manipulate a credential sniffed from an existing connection in order to gain access to a target server.",
        "prerequisites": [
          "The targeted application must use session credentials to identify legitimate users."
        ],
        "relatedWeaknesses": [
          565,
          472
        ],
        "relatedAttackPatterns": [
          196
        ]
      },
      {
        "id": 227,
        "name": "Sustained Client Engagement",
        "description": "An adversary attempts to deny legitimate users access to a resource by continually engaging a specific resource in an attempt to keep the resource tied up as long as possible. The adversary's primary goal is not to crash or flood the target, which would alert defenders; rather it is to repeatedly perform actions or abuse algorithmic flaws such that a given resource is tied up and not available to a legitimate user. By carefully crafting a requests that keep the resource engaged through what is seemingly benign requests, legitimate users are limited or completely denied access to the resource.",
        "prerequisites": [
          "This pattern of attack requires a temporal aspect to the servicing of a given request. Success can be achieved if the adversary can make requests that collectively take more time to complete than legitimate user requests within the same time frame."
        ],
        "relatedWeaknesses": [
          400
        ],
        "mitigations": [
          "Potential mitigations include requiring a unique login for each resource request, constraining local unprivileged access by disallowing simultaneous engagements of the resource, or limiting access to the resource to one access per IP address. In such scenarios, the adversary would have to increase engagements either by launching multiple sessions manually or programmatically to counter such defenses."
        ]
      },
      {
        "id": 228,
        "name": "DTD Injection",
        "description": "An attacker injects malicious content into an application's DTD in an attempt to produce a negative technical impact. DTDs are used to describe how XML documents are processed. Certain malformed DTDs (for example, those with excessive entity expansion as described in CAPEC 197) can cause the XML parsers that process the DTDs to consume excessive resources resulting in resource depletion.",
        "prerequisites": [
          "The target must be running an XML based application that leverages DTDs."
        ],
        "relatedWeaknesses": [
          829
        ],
        "mitigations": [
          "Design: Sanitize incoming DTDs to prevent excessive expansion or other actions that could result in impacts like resource depletion.",
          "Implementation: Disallow the inclusion of DTDs as part of incoming messages.",
          "Implementation: Use XML parsing tools that protect against DTD attacks."
        ],
        "relatedAttackPatterns": [
          250,
          197,
          491
        ]
      },
      {
        "id": 229,
        "name": "Serialized Data Parameter Blowup",
        "description": "This attack exploits certain serialized data parsers (e.g., XML, YAML, etc.) which manage data in an inefficient manner. The attacker crafts an serialized data file with multiple configuration parameters in the same dataset. In a vulnerable parser, this results in a denial of service condition where CPU resources are exhausted because of the parsing algorithm. The weakness being exploited is tied to parser implementation and not language specific.",
        "prerequisites": [
          "The server accepts input in the form of serialized data and is using a parser with a runtime longer than O(n) for the insertion of a new configuration parameter in the data container.(examples are .NET framework 1.0 and 1.1)"
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "This attack may be mitigated completely by using a parser that is not using a vulnerable container.",
          "Mitigation may limit the number of configuration parameters per dataset."
        ],
        "relatedAttackPatterns": [
          231
        ]
      },
      {
        "id": 230,
        "name": "Serialized Data with Nested Payloads",
        "description": "Applications often need to transform data in and out of a data format (e.g., XML and YAML) by using a parser. It may be possible for an adversary to inject data that may have an adverse effect on the parser when it is being processed. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. By nesting these structures, causing the data to be repeatedly substituted, an adversary can cause the parser to consume more resources while processing, causing excessive memory consumption and CPU utilization.",
        "prerequisites": [
          "An application's user-controllable data is expressed in a language that supports subsitution.",
          "An application does not perform sufficient validation to ensure that user-controllable data is not malicious."
        ],
        "relatedWeaknesses": [
          112,
          20,
          674,
          770
        ],
        "consequences": [
          "Availability Resource Consumption",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Carefully validate and sanitize all user-controllable data prior to passing it to the data parser routine. Ensure that the resultant data is safe to pass to the data parser.",
          "Perform validation on canonical data.",
          "Pick a robust implementation of the data parser."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 231,
        "name": "Oversized Serialized Data Payloads",
        "description": "An adversary injects oversized serialized data payloads into a parser during data processing to produce adverse effects upon the parser such as exhausting system resources and arbitrary code execution.",
        "prerequisites": [
          "An application uses an parser for serialized data to perform transformation on user-controllable data.",
          "An application does not perform sufficient validation to ensure that user-controllable data is safe for a data parser."
        ],
        "relatedWeaknesses": [
          112,
          20,
          674,
          770
        ],
        "consequences": [
          "Availability Resource Consumption",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Carefully validate and sanitize all user-controllable serialized data prior to passing it to the parser routine. Ensure that the resultant data is safe to pass to the parser.",
          "Perform validation on canonical data.",
          "Pick a robust implementation of the serialized data parser.",
          "Validate data against a valid schema or DTD prior to parsing."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 233,
        "name": "Privilege Escalation",
        "description": "An adversary exploits a weakness enabling them to elevate their privilege and perform an action that they are not supposed to be authorized to perform.",
        "relatedWeaknesses": [
          269,
          1264,
          1311
        ]
      },
      {
        "id": 234,
        "name": "Hijacking a privileged process",
        "description": "An adversary gains control of a process that is assigned elevated privileges in order to execute arbitrary code with those privileges. Some processes are assigned elevated privileges on an operating system, usually through association with a particular user, group, or role. If an attacker can hijack this process, they will be able to assume its level of privilege in order to execute their own code.",
        "prerequisites": [
          "The targeted process or operating system must contain a bug that allows attackers to hijack the targeted process."
        ],
        "relatedWeaknesses": [
          732,
          648
        ],
        "relatedAttackPatterns": [
          233,
          242,
          175,
          100
        ]
      },
      {
        "id": 235,
        "name": "DEPRECATED: Implementing a callback to system routine (old AWT Queue)",
        "description": "This attack pattern has been deprecated. Please refer to CAPEC:30 - Hijacking a Privileged Thread of Execution."
      },
      {
        "id": 236,
        "name": "DEPRECATED: Catching exception throw/signal from privileged block",
        "description": "This attack pattern has been deprecated as it did not have enough distinction from CAPEC-30 : Hijacking a Privileged Thread of Execution. Please refer to CAPEC-30 moving forward."
      },
      {
        "id": 237,
        "name": "Escaping a Sandbox by Calling Code in Another Language",
        "description": "The attacker may submit malicious code of another language to obtain access to privileges that were not intentionally exposed by the sandbox, thus escaping the sandbox. For instance, Java code cannot perform unsafe operations, such as modifying arbitrary memory locations, due to restrictions placed on it by the Byte code Verifier and the JVM. If allowed, Java code can call directly into native C code, which may perform unsafe operations, such as call system calls and modify arbitrary memory locations on their behalf. To provide isolation, Java does not grant untrusted code with unmediated access to native C code. Instead, the sandboxed code is typically allowed to call some subset of the pre-existing native code that is part of standard libraries.",
        "relatedWeaknesses": [
          693
        ],
        "consequences": [
          "Access Control Authorization Bypass Protection Mechanism",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges"
        ],
        "mitigations": [
          "Assurance: Sanitize the code of the standard libraries to make sure there is no security weaknesses in them.",
          "Design: Use obfuscation and other techniques to prevent reverse engineering the standard libraries.",
          "Assurance: Use static analysis tool to do code review and dynamic tool to do penetration test on the standard library.",
          "Configuration: Get latest updates for the computer."
        ],
        "relatedAttackPatterns": [
          480
        ]
      },
      {
        "id": 238,
        "name": "DEPRECATED: Using URL/codebase / G.A.C. (code source) to convince sandbox of privilege",
        "description": "This attack pattern has been deprecated as it did not appear to be a valid attack pattern."
      },
      {
        "id": 239,
        "name": "DEPRECATED: Subversion of Authorization Checks: Cache Filtering, Programmatic Security, etc.",
        "description": "This attack pattern has been deprecated as it did not contain any content and did not serve any useful purpose. Please refer to \"CAPEC-207: removing Important Client Functionality\" going forward."
      },
      {
        "id": 240,
        "name": "Resource Injection",
        "description": "An adversary exploits weaknesses in input validation by manipulating resource identifiers enabling the unintended modification or specification of a resource.",
        "prerequisites": [
          "The target application allows the user to both specify the identifier used to access a system resource. Through this permission, the user gains the capability to perform actions on that resource (e.g., overwrite the file)"
        ],
        "relatedWeaknesses": [
          99
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Ensure all input content that is delivered to client is sanitized against an acceptable content specification.",
          "Perform input validation for all content.",
          "Enforce regular patching of software."
        ]
      },
      {
        "id": 241,
        "name": "DEPRECATED: Code Injection",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-242 : Code Injection\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 242,
        "name": "Code Injection",
        "description": "An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
        "prerequisites": [
          "The target software does not validate user-controlled input such that the execution of a process may be altered by sending code in through legitimate data channels, using no other mechanism."
        ],
        "relatedWeaknesses": [
          94
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Code Injection attack patterns can result in a wide variety of consequences and negatively affect all three elements of the security triad."
        ],
        "mitigations": [
          "Utilize strict type, character, and encoding enforcement",
          "Ensure all input content that is delivered to client is sanitized against an acceptable content specification.",
          "Perform input validation for all content.",
          "Enforce regular patching of software."
        ]
      },
      {
        "id": 243,
        "name": "XSS Targeting HTML Attributes",
        "description": "An adversary inserts commands to perform cross-site scripting (XSS) actions in HTML attributes. Many filters do not adequately sanitize attributes against the presence of potentially dangerous commands even if they adequately sanitize tags. For example, dangerous expressions could be inserted into a style attribute in an anchor tag, resulting in the execution of malicious code when the resulting page is rendered. If a victim is tricked into viewing the rendered page the attack proceeds like a normal XSS attack, possibly resulting in the loss of sensitive cookies or other malicious activities.",
        "prerequisites": [
          "The target application must fail to adequately sanitize HTML attributes against the presence of dangerous commands."
        ],
        "relatedWeaknesses": [
          83
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input.",
          "Implementation: Normalize, filter and use an allowlist for all input including that which is not expected to have any scripting content.",
          "Implementation: The victim should configure the browser to minimize active content from untrusted sources."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 244,
        "name": "XSS Targeting URI Placeholders",
        "description": "An attack of this type exploits the ability of most browsers to interpret \"data\", \"javascript\" or other URI schemes as client-side executable content placeholders. This attack consists of passing a malicious URI in an anchor tag HREF attribute or any other similar attributes in other HTML tags. Such malicious URI contains, for example, a base64 encoded HTML content with an embedded cross-site scripting payload. The attack is executed when the browser interprets the malicious content i.e., for example, when the victim clicks on the malicious link.",
        "prerequisites": [
          "Target client software must allow scripting such as JavaScript and allows executable content delivered using a data URI scheme."
        ],
        "relatedWeaknesses": [
          83
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Design: Use browser technologies that do not allow client side scripting.",
          "Design: Utilize strict type, character, and encoding enforcement.",
          "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
          "Implementation: Ensure all content coming from the client is using the same encoding; if not, the server-side application must canonicalize the data before applying any filtering.",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content",
          "Implementation: Perform output validation for all remote content.",
          "Implementation: Disable scripting languages such as JavaScript in browser",
          "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 245,
        "name": "XSS Using Doubled Characters",
        "description": "The adversary bypasses input validation by using doubled characters in order to perform a cross-site scripting attack. Some filters fail to recognize dangerous sequences if they are preceded by repeated characters. For example, by doubling the < before a script command, (<<script or %3C%3script using URI encoding) the filters of some web applications may fail to recognize the presence of a script tag. If the targeted server is vulnerable to this type of bypass, the adversary can create a crafted URL or other trap to cause a victim to view a page on the targeted server where the malicious content is executed, as per a normal XSS attack.",
        "prerequisites": [
          "The targeted web application does not fully normalize input before checking for prohibited syntax. In particular, it must fail to recognize prohibited methods preceded by certain sequences of repeated characters."
        ],
        "relatedWeaknesses": [
          85
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input.",
          "Implementation: Normalize, filter and sanitize all user supplied fields.",
          "Implementation: The victim should configure the browser to minimize active content from untrusted sources."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 246,
        "name": "DEPRECATED: XSS Using Flash",
        "description": "This pattern has been deprecated as it is covered by a chaining relationship between CAPEC-174: Flash Parameter Injection and CAPEC-591: Stored XSS. Please refer to these CAPECs going forward."
      },
      {
        "id": 247,
        "name": "XSS Using Invalid Characters",
        "description": "An adversary inserts invalid characters in identifiers to bypass application filtering of input. Filters may not scan beyond invalid characters but during later stages of processing content that follows these invalid characters may still be processed. This allows the adversary to sneak prohibited commands past filters and perform normally prohibited operations. Invalid characters may include null, carriage return, line feed or tab in an identifier. Successful bypassing of the filter can result in a XSS attack, resulting in the disclosure of web cookies or possibly other results.",
        "prerequisites": [
          "The target must fail to remove invalid characters from input and fail to adequately scan beyond these characters."
        ],
        "relatedWeaknesses": [
          86
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input.",
          "Implementation: Normalize, filter and use an allowlist for any input that will be included in any subsequent web pages or back end operations.",
          "Implementation: The victim should configure the browser to minimize active content from untrusted sources."
        ],
        "relatedAttackPatterns": [
          591,
          592,
          588
        ]
      },
      {
        "id": 248,
        "name": "Command Injection",
        "description": "An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.",
        "prerequisites": [
          "The target application must accept input from the user and then use this input in the construction of commands to be executed. In virtually all cases, this is some form of string input that is concatenated to a constant string defined by the application to form the full command to be executed."
        ],
        "relatedWeaknesses": [
          77
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands A successful command injection attack enables an adversary to alter the command being executed and achieve a variety of negative consequences depending on the makeup of the new command. This includes potential information disclosure or the corruption of application data."
        ],
        "mitigations": [
          "All user-controllable input should be validated and filtered for potentially unwanted characters. Using an allowlist for input is desired, but if use of a denylist approach is necessary, then focusing on command related terms and delimiters is necessary.",
          "Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example, quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter.",
          "Input should be parameterized, or restricted to data sections of a command, thus removing the chance that the input will be treated as part of the command itself."
        ]
      },
      {
        "id": 249,
        "name": "DEPRECATED: Linux Terminal Injection",
        "description": "This attack pattern has been deprecated as it is covered by \"CAPEC-40 : Manipulating Writeable Terminal Devices\". Please refer to this CAPEC going forward."
      },
      {
        "id": 250,
        "name": "XML Injection",
        "description": "An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information.",
        "prerequisites": [
          "XML queries used to process user input and retrieve information stored in XML documents",
          "User-controllable input not properly sanitized"
        ],
        "relatedWeaknesses": [
          91,
          74,
          20,
          707
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XML data or a query.",
          "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 251,
        "name": "Local Code Inclusion",
        "description": "The attacker forces an application to load arbitrary code files from the local machine. The attacker could use this to try to load old versions of library files that have known vulnerabilities, to load files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.",
        "prerequisites": [
          "The targeted application must have a bug that allows an adversary to control which code file is loaded at some juncture.",
          "Some variants of this attack may require that old versions of some code files be present and in predictable locations."
        ],
        "relatedWeaknesses": [
          829
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands Through local code inclusion, the adversary compromises the integrity of the application.",
          "Confidentiality Read Data An attacker may leverage local code inclusion in order to print sensitive data to a page, such as hidden configuration files or or password hashes."
        ],
        "mitigations": [
          "Implementation: Avoid passing user input to filesystem or framework API. If necessary to do so, implement a specific, allowlist approach."
        ],
        "relatedAttackPatterns": [
          175
        ]
      },
      {
        "id": 252,
        "name": "PHP Local File Inclusion",
        "description": "The attacker loads and executes an arbitrary local PHP file on a target machine. The attacker could use this to try to load old versions of PHP files that have known vulnerabilities, to load PHP files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.",
        "prerequisites": [
          "The targeted PHP application must have a bug that allows an attacker to control which code file is loaded at some juncture."
        ],
        "relatedWeaknesses": [
          829
        ],
        "relatedAttackPatterns": [
          251
        ]
      },
      {
        "id": 253,
        "name": "Remote Code Inclusion",
        "description": "The attacker forces an application to load arbitrary code files from a remote location. The attacker could use this to try to load old versions of library files that have known vulnerabilities, to load malicious files that the attacker placed on the remote machine, or to otherwise change the functionality of the targeted application in unexpected ways.",
        "prerequisites": [
          "Target application server must allow remote files to be included.The malicious file must be placed on the remote machine previously."
        ],
        "relatedWeaknesses": [
          829
        ],
        "mitigations": [
          "Minimize attacks by input validation and sanitization of any user data that will be used by the target application to locate a remote file to be included."
        ],
        "relatedAttackPatterns": [
          175,
          664
        ]
      },
      {
        "id": 254,
        "name": "DEPRECATED: DTD Injection in a SOAP Message",
        "description": "This pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the pattern CAPEC-228 : DTD Injection going forward."
      },
      {
        "id": 256,
        "name": "SOAP Array Overflow",
        "description": "An attacker sends a SOAP request with an array whose actual length exceeds the length indicated in the request. If the server processing the transmission naively trusts the specified size, then an attacker can intentionally understate the size of the array, possibly resulting in a buffer overflow if the server attempts to read the entire data set into the memory it allocated for a smaller array.",
        "prerequisites": [
          "The targeted SOAP server must trust that the array size as stated in messages it receives is correct, but read through the entire content of the message regardless of the stated size of the array."
        ],
        "relatedWeaknesses": [
          805
        ],
        "mitigations": [
          "If the server either verifies the correctness of the stated array size or if the server stops processing an array once the stated number of elements have been read, regardless of the actual array size, then this attack will fail. The former detects the malformed SOAP message while the latter ensures that the server does not attempt to load more data than was allocated for."
        ],
        "relatedAttackPatterns": [
          100
        ]
      },
      {
        "id": 257,
        "name": "DEPRECATED: Abuse of Transaction Data Structure",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern."
      },
      {
        "id": 258,
        "name": "DEPRECATED: Passively Sniffing and Capturing Application Code Bound for an Authorized Client During Dynamic Update",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-65 : Sniff Application Code\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 259,
        "name": "DEPRECATED: Passively Sniffing and Capturing Application Code Bound for an Authorized Client During Patching",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-65 : Sniff Application Code\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 260,
        "name": "DEPRECATED: Passively Sniffing and Capturing Application Code Bound for an Authorized Client During Initial Distribution",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-65 : Sniff Application Code\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 261,
        "name": "Fuzzing for garnering other adjacent user/sensitive data",
        "description": "An adversary who is authorized to send queries to a target sends variants of expected queries in the hope that these modified queries might return information (directly or indirectly through error logs) beyond what the expected set of queries should provide.",
        "prerequisites": [
          "The server must assume that the queries it receives follow specific templates and/or have fields or attributes that follow specific procedures. The server must process queries that it receives without adequately checking or sanitizing queries to ensure they follow these templates."
        ],
        "relatedWeaknesses": [
          20
        ],
        "relatedAttackPatterns": [
          54
        ]
      },
      {
        "id": 263,
        "name": "Force Use of Corrupted Files",
        "description": "This describes an attack where an application is forced to use a file that an attacker has corrupted. The result is often a denial of service caused by the application being unable to process the corrupted file, but other results, including the disabling of filters or access controls (if the application fails in an unsafe way rather than failing by locking down) or buffer overflows are possible.",
        "prerequisites": [
          "The targeted application must utilize a configuration file that an attacker is able to corrupt. In some cases, the attacker must be able to force the (re-)reading of the corrupted file if the file is normally only consulted at startup.",
          "The severity of the attack hinges on how the application responds to the corrupted file. If the application detects the corruption and locks down, this may result in the denial of services provided by the application. If the application fails to detect the corruption, the result could be a more severe denial of service (crash or hang) or even an exploitable buffer overflow. If the application detects the corruption but fails in an unsafe way, this attack could result in the continuation of services but without certain security structures, such as filters or access controls. For example, if the corrupted file configures filters, an unsafe response from an application could result in simply disabling the filtering mechanisms due to the lack of usable configuration data."
        ],
        "relatedWeaknesses": [
          829
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 264,
        "name": "DEPRECATED: Environment Variable Manipulation",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-13 : Subverting Environment Variable Values\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 265,
        "name": "DEPRECATED: Global variable manipulation",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-77 : Manipulating User-Controlled Variables\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 266,
        "name": "DEPRECATED: Manipulate Canonicalization",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 267,
        "name": "Leverage Alternate Encoding",
        "description": "An adversary leverages the possibility to encode potentially harmful input or content used by applications such that the applications are ineffective at validating this encoding standard.",
        "prerequisites": [
          "The application's decoder accepts and interprets encoded characters. Data canonicalization, input filtering and validating is not done properly leaving the door open to harmful characters for the target host."
        ],
        "relatedWeaknesses": [
          173,
          172,
          180,
          181,
          73,
          74,
          20,
          697,
          692
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism",
          "Availability Unreliable Execution Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Assume all input might use an improper representation. Use canonicalized data inside the application; all data must be converted into the representation used inside the application (UTF-8, UTF-16, etc.)",
          "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input."
        ],
        "relatedAttackPatterns": [
          153
        ]
      },
      {
        "id": 268,
        "name": "Audit Log Manipulation",
        "description": "The attacker injects, manipulates, deletes, or forges malicious log entries into the log file, in an attempt to mislead an audit of the log file or cover tracks of an attack. Due to either insufficient access controls of the log files or the logging mechanism, the attacker is able to perform such actions.",
        "prerequisites": [
          "The target host is logging the action and data of the user.",
          "The target host insufficiently protects access to the logs or logging mechanisms."
        ],
        "relatedWeaknesses": [
          117
        ],
        "relatedAttackPatterns": [
          161
        ]
      },
      {
        "id": 269,
        "name": "DEPRECATED: Registry Manipulation",
        "description": "This pattern has been deprecated as it was determined to be a duplicate of another pattern. Please refer to the pattern CAPEC-203 : Manipulate Application Registry Values going forward."
      },
      {
        "id": 270,
        "name": "Modification of Registry Run Keys",
        "description": "An adversary adds a new entry to the \"run keys\" in the Windows registry so that an application of their choosing is executed when a user logs in. In this way, the adversary can get their executable to operate and run on the target system with the authorized user's level of permissions. This attack is a good way for an adversary to run persistent spyware on a user's machine, such as a keylogger.",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack."
        ],
        "relatedWeaknesses": [
          15
        ],
        "consequences": [
          "Integrity Modify Data Gain Privileges"
        ],
        "mitigations": [
          "Identify programs that may be used to acquire process information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          203,
          568,
          529,
          646,
          555
        ]
      },
      {
        "id": 271,
        "name": "Schema Poisoning",
        "description": "An adversary corrupts or modifies the content of a schema for the purpose of undermining the security of the target. Schemas provide the structure and content definitions for resources used by an application. By replacing or modifying a schema, the adversary can affect how the application handles or interprets a resource, often leading to possible denial of service, entering into an unexpected state, or recording incomplete data.",
        "prerequisites": [
          "Some level of access to modify the target schema.",
          "The schema used by the target application must be improperly secured against unauthorized modification and manipulation."
        ],
        "relatedWeaknesses": [
          15
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption A successful schema poisoning attack can compromise the availability of the target system's service by exhausting its available resources.",
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: Protect the schema against unauthorized modification.",
          "Implementation: For applications that use a known schema, use a local copy or a known good repository instead of the schema reference supplied in the schema document.",
          "Implementation: For applications that leverage remote schemas, use the HTTPS protocol to prevent modification of traffic in transit and to avoid unauthorized modification."
        ],
        "relatedAttackPatterns": [
          176,
          94
        ]
      },
      {
        "id": 272,
        "name": "Protocol Manipulation",
        "description": "An adversary subverts a communications protocol to perform an attack. This type of attack can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
        "prerequisites": [
          "The protocol or implementations thereof must contain bugs that an adversary can exploit."
        ]
      },
      {
        "id": 273,
        "name": "HTTP Response Smuggling",
        "description": "An adversary manipulates and injects malicious content in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., server). See CanPrecede relationships for possible consequences.",
        "prerequisites": [
          "A vulnerable or compromised server or domain/site capable of allowing adversary to insert/inject malicious content that will appear in the server's response to target HTTP agents (e.g., proxies and users' web browsers).",
          "Differences in the way the two HTTP agents parse and interpret HTTP responses and its headers.",
          "HTTP agents running on HTTP/1.1 that allow for Keep Alive mode, Pipelined queries, and Chunked queries and responses."
        ],
        "relatedWeaknesses": [
          74,
          436,
          444
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
          "Configuration: front-end HTTP agents notice ambiguous requests.",
          "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
          "Configuration: Disable reuse of back-end connections.",
          "Configuration: Use HTTP/2 for back-end connections.",
          "Configuration: Use the same web server software for front-end and back-end server.",
          "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
          "Configuration: Prioritize Transfer-Encoding header over Content-Length, whenever an HTTP message contains both.",
          "Configuration: Disallow HTTP messages with both Transfer-Encoding and Content-Length or Double Content-Length Headers.",
          "Configuration: Disallow Malformed/Invalid Transfer-Encoding Headers used in obfuscation, such as:",
          "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
          "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
          "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
        ],
        "relatedAttackPatterns": [
          220,
          33,
          115,
          141,
          63,
          593,
          148,
          154
        ]
      },
      {
        "id": 274,
        "name": "HTTP Verb Tampering",
        "description": "An attacker modifies the HTTP Verb (e.g. GET, PUT, TRACE, etc.) in order to bypass access restrictions. Some web environments allow administrators to restrict access based on the HTTP Verb used with requests. However, attackers can often provide a different HTTP Verb, or even provide a random string as a verb in order to bypass these protections. This allows the attacker to access data that should otherwise be protected.",
        "prerequisites": [
          "The targeted system must attempt to filter access based on the HTTP verb used in requests."
        ],
        "relatedWeaknesses": [
          302,
          654
        ],
        "mitigations": [
          "Design: Ensure that only legitimate HTTP verbs are allowed.",
          "Design: Do not use HTTP verbs as factors in access decisions."
        ],
        "relatedAttackPatterns": [
          220
        ]
      },
      {
        "id": 275,
        "name": "DNS Rebinding",
        "description": "An adversary serves content whose IP address is resolved by a DNS server that the adversary controls. After initial contact by a web browser (or similar client), the adversary changes the IP address to which its name resolves, to an address within the target organization that is not publicly accessible. This allows the web browser to examine this internal address on behalf of the adversary.",
        "prerequisites": [
          "The target browser must access content server from the adversary controlled DNS name. Web advertisements are often used for this purpose. The target browser must honor the TTL value returned by the adversary and re-resolve the adversary's DNS name after initial contact."
        ],
        "relatedWeaknesses": [
          350
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges",
          "Access Control Authorization Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Design: IP Pinning causes browsers to record the IP address to which a given name resolves and continue using this address regardless of the TTL set in the DNS response. Unfortunately, this is incompatible with the design of some legitimate sites.",
          "Implementation: Reject HTTP request with a malicious Host header.",
          "Implementation: Employ DNS resolvers that prevent external names from resolving to internal addresses."
        ],
        "relatedAttackPatterns": [
          194
        ]
      },
      {
        "id": 276,
        "name": "Inter-component Protocol Manipulation",
        "description": "Inter-component protocols are used to communicate between different software and hardware modules within a single computer. Common examples are: interrupt signals and data pipes. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
        "relatedWeaknesses": [
          707
        ],
        "relatedAttackPatterns": [
          272
        ]
      },
      {
        "id": 277,
        "name": "Data Interchange Protocol Manipulation",
        "description": "Data Interchange Protocols are used to transmit structured data between entities. These protocols are often specific to a particular domain (B2B: purchase orders, invoices, transport logistics and waybills, medical records). They are often, but not always, XML-based. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
        "relatedWeaknesses": [
          707
        ],
        "relatedAttackPatterns": [
          272
        ]
      },
      {
        "id": 278,
        "name": "Web Services Protocol Manipulation",
        "description": "An adversary manipulates a web service related protocol to cause a web application or service to react differently than intended. This can either be performed through the manipulation of call parameters to include unexpected values, or by changing the called function to one that should normally be restricted or limited. By leveraging this pattern of attack, the adversary is able to gain access to data or resources normally restricted, or to cause the application or service to crash.",
        "prerequisites": [
          "The targeted application or service must rely on web service protocols in such a way that malicious manipulation of them can alter functionality."
        ],
        "relatedWeaknesses": [
          707
        ],
        "mitigations": [
          "Design: Range, size and value and consistency verification for any arguments supplied to applications and services from external sources and devise appropriate error response.",
          "Design: Ensure that function calls that should not be called by an unprivileged user are not accessible to them."
        ],
        "relatedAttackPatterns": [
          272
        ]
      },
      {
        "id": 279,
        "name": "SOAP Manipulation",
        "description": "Simple Object Access Protocol (SOAP) is used as a communication protocol between a client and server to invoke web services on the server. It is an XML-based protocol, and therefore suffers from many of the same shortcomings as other XML-based protocols. Adversaries can make use of these shortcomings and manipulate the content of SOAP paramters, leading to undesirable behavior on the server and allowing the adversary to carry out a number of further attacks.",
        "prerequisites": [
          "An application uses SOAP-based web service api.",
          "An application does not perform sufficient input validation to ensure that user-controllable data is safe for an XML parser.",
          "The targeted server either fails to verify that data in SOAP messages conforms to the appropriate XML schema, or it fails to correctly handle the complete range of data allowed by the schema."
        ],
        "relatedWeaknesses": [
          707
        ],
        "consequences": [
          "Availability Resource Consumption",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands"
        ],
        "relatedAttackPatterns": [
          278,
          110,
          228
        ]
      },
      {
        "id": 280,
        "name": "DEPRECATED: SOAP Parameter Tampering",
        "description": "This attack pattern has been deprecated as its contents have been included in CAPEC-279 : SOAP Manipulation. Please refer to this other pattern going forward."
      },
      {
        "id": 285,
        "name": "ICMP Echo Request Ping",
        "description": "An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss.",
        "prerequisites": [
          "The ability to send an ICMP type 8 query (Echo Request) to a remote target and receive an ICMP type 0 message (ICMP Echo Reply) in response. Any firewalls or access control lists between the sender and receiver must allow ICMP Type 8 and ICMP Type 0 messages in order for a ping operation to succeed."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other A successful attack of this kind can identify open ports and available services on a system."
        ],
        "mitigations": [
          "Consider configuring firewall rules to block ICMP Echo requests and prevent replies. If not practical, monitor and consider action when a system has fast and a repeated pattern of requests that move incrementally through port numbers."
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 287,
        "name": "TCP SYN Scan",
        "description": "An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its many advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed.",
        "prerequisites": [
          "This scan type is not possible with some operating systems (Windows XP SP 2). On Linux and Unix systems it requires root privileges to use raw sockets."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other A successful attack of this kind can identify open ports and available services on a system.",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 288,
        "name": "DEPRECATED: ICMP Echo Request Ping",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-285\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 289,
        "name": "DEPRECATED: Infrastructure-based footprinting",
        "description": "This attack pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the meta level pattern CAPEC-169 : going forward, or to any of its children patterns."
      },
      {
        "id": 290,
        "name": "Enumerate Mail Exchange (MX) Records",
        "description": "An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.",
        "prerequisites": [
          "The adversary requires access to a DNS server that will return the MX records for a network."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          309
        ]
      },
      {
        "id": 291,
        "name": "DNS Zone Transfers",
        "description": "An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.",
        "prerequisites": [
          "Access to a DNS server that allows Zone transfers."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "relatedAttackPatterns": [
          309
        ]
      },
      {
        "id": 292,
        "name": "Host Discovery",
        "description": "An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.",
        "prerequisites": [
          "The adversary requires logical access to the target network in order to carry out host discovery."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 293,
        "name": "Traceroute Route Enumeration",
        "description": "An adversary uses a traceroute utility to map out the route which data flows through the network in route to a target destination. Tracerouting can allow the adversary to construct a working topology of systems and routers by listing the systems through which data passes through on their way to the targeted machine. This attack can return varied results depending upon the type of traceroute that is performed. Traceroute works by sending packets to a target while incrementing the Time-to-Live field in the packet header. As the packet traverses each hop along its way to the destination, its TTL expires generating an ICMP diagnostic message that identifies where the packet expired. Traditional techniques for tracerouting involved the use of ICMP and UDP, but as more firewalls began to filter ingress ICMP, methods of traceroute using TCP were developed.",
        "prerequisites": [
          "A network capable of routing the attackers' packets to the destination network."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other"
        ],
        "relatedAttackPatterns": [
          309
        ]
      },
      {
        "id": 294,
        "name": "ICMP Address Mask Request",
        "description": "An adversary sends an ICMP Type 17 Address Mask Request to gather information about a target's networking configuration. ICMP Address Mask Requests are defined by RFC-950, \"Internet Standard Subnetting Procedure.\" An Address Mask Request is an ICMP type 17 message that triggers a remote system to respond with a list of its related subnets, as well as its default gateway and broadcast address via an ICMP type 18 Address Mask Reply datagram. Gathering this type of information helps the adversary plan router-based attacks as well as denial-of-service attacks against the broadcast address.",
        "prerequisites": [
          "The ability to send an ICMP type 17 query (Address Mask Request) to a remote target and receive an ICMP type 18 message (ICMP Address Mask Reply) in response. Generally, modern operating systems will ignore ICMP type 17 messages, however, routers will commonly respond to this request."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Hide Activities"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 295,
        "name": "Timestamp Request",
        "description": "This pattern of attack leverages standard requests to learn the exact time associated with a target system. An adversary may be able to use the timestamp returned from the target to attack time-based security algorithms, such as random number generators, or time-based authentication mechanisms.",
        "prerequisites": [
          "The ability to send a timestamp request to a remote target and receive a response."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 296,
        "name": "ICMP Information Request",
        "description": "An adversary sends an ICMP Information Request to a host to determine if it will respond to this deprecated mechanism. ICMP Information Requests are a deprecated message type. Information Requests were originally used for diskless machines to automatically obtain their network configuration, but this message type has been superseded by more robust protocol implementations like DHCP.",
        "prerequisites": [
          "The ability to send an ICMP Type 15 Information Request and receive an ICMP Type 16 Information Reply in response."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 297,
        "name": "TCP ACK Ping",
        "description": "An adversary sends a TCP segment with the ACK flag set to a remote host for the purpose of determining if the host is alive. This is one of several TCP 'ping' types. The RFC 793 expected behavior for a service is to respond with a RST 'reset' packet to any unsolicited ACK segment that is not part of an existing connection. So by sending an ACK segment to a port, the adversary can identify that the host is alive by looking for a RST packet. Typically, a remote server will respond with a RST regardless of whether a port is open or closed. In this way, TCP ACK pings cannot discover the state of a remote port because the behavior is the same in either case. The firewall will look up the ACK packet in its state-table and discard the segment because it does not correspond to any active connection. A TCP ACK Ping can be used to discover if a host is alive via RST response packets sent from the host.",
        "prerequisites": [
          "The ability to send an ACK packet to a remote host and identify the response. Creating the ACK packet without building a full connection requires the use of raw sockets. As a result, it is not possible to send a TCP ACK ping from some systems (Windows XP SP 2) without the use of third-party packet drivers like Winpcap. On other systems (BSD, Linux) administrative privileges are required in order to write to the raw socket.",
          "The target must employ a stateless firewall that lacks a rule set that rejects unsolicited ACK packets.",
          "The adversary requires the ability to craft custom TCP ACK segments for use during network reconnaissance. Sending an ACK ping requires the ability to access \"raw sockets\" in order to create the packets with direct access to the packet header."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Leverage stateful firewalls that allow for the rejection of a packet that is not part of an existing connection."
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 298,
        "name": "UDP Ping",
        "description": "An adversary sends a UDP datagram to the remote host to determine if the host is alive. If a UDP datagram is sent to an open UDP port there is very often no response, so a typical strategy for using a UDP ping is to send the datagram to a random high port on the target. The goal is to solicit an 'ICMP port unreachable' message from the target, indicating that the host is alive. UDP pings are useful because some firewalls are not configured to block UDP datagrams sent to strange or typically unused ports, like ports in the 65K range. Additionally, while some firewalls may filter incoming ICMP, weaknesses in firewall rule-sets may allow certain types of ICMP (host unreachable, port unreachable) which are useful for UDP ping attempts.",
        "prerequisites": [
          "The adversary requires the ability to send a UDP datagram to a remote host and receive a response.",
          "The adversary requires the ability to craft custom UDP Packets for use during network reconnaissance.",
          "The target's firewall must not be configured to block egress ICMP messages."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Configure your firewall to block egress ICMP messages."
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 299,
        "name": "TCP SYN Ping",
        "description": "An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC 793 behavior specifies that when a TCP port is open, a host must respond to an incoming SYN \"synchronize\" packet by completing stage two of the 'three-way handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793 behavior is to respond with a RST \"reset\" packet. This behavior can be used to 'ping' a target to see if it is alive by sending a TCP SYN packet to a port and then looking for a RST or an ACK packet in response.",
        "prerequisites": [
          "The ability to send a TCP SYN packet to a remote target. Depending upon the operating system, the ability to craft SYN packets may require elevated privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 300,
        "name": "Port Scanning",
        "description": "An adversary uses a combination of techniques to determine the state of the ports on a remote target. Any service or application available for TCP or UDP networking will have a port open for communications over the network.",
        "prerequisites": [
          "The adversary requires logical access to the target's network in order to carry out this type of attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 301,
        "name": "TCP Connect Scan",
        "description": "An adversary uses full TCP connection attempts to determine if a port is open on the target system. The scanning process involves completing a 'three-way handshake' with a remote port, and reports the port as closed if the full handshake cannot be established. An advantage of TCP connect scanning is that it works against any TCP/IP stack.",
        "prerequisites": [
          "The adversary requires logical access to the target network. The TCP connect Scan requires the ability to connect to an available port and complete a 'three-way-handshake' This scanning technique does not require any special privileges in order to perform. This type of scan works against all TCP/IP stack implementations."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Employ a robust network defense posture that includes an IDS/IPS system."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 302,
        "name": "TCP FIN Scan",
        "description": "An adversary uses a TCP FIN scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with the FIN bit set in the packet header. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow the adversary to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
        "prerequisites": [
          "FIN scanning requires the use of raw sockets, and thus cannot be performed from some Windows systems (Windows XP SP 2, for example). On Unix and Linux, raw socket manipulations require root privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "FIN scans are detected via heuristic (non-signature) based algorithms, much in the same way as other scan types are detected. An IDS/IPS system with heuristic algorithms is required to detect them."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 303,
        "name": "TCP Xmas Scan",
        "description": "An adversary uses a TCP XMAS scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with all possible flags set in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
        "prerequisites": [
          "The adversary needs logical access to the target network. XMAS scanning requires the use of raw sockets, and thus cannot be performed from some Windows systems (Windows XP SP 2, for example). On Unix and Linux, raw socket manipulations require root privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities",
          "Availability Unreliable Execution"
        ],
        "mitigations": [
          "Employ a robust network defensive posture that includes a managed IDS/IPS."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 304,
        "name": "TCP Null Scan",
        "description": "An adversary uses a TCP NULL scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with no flags in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
        "prerequisites": [
          "The adversary requires logical access to the target network. NULL scanning requires the use of raw sockets, and thus cannot be performed from some Windows systems (Windows XP SP 2, for example). On Unix and Linux, raw socket manipulations require root privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Employ a robust network defensive posture that includes a managed IDS/IPS."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 305,
        "name": "TCP ACK Scan",
        "description": "An adversary uses TCP ACK segments to gather information about firewall or ACL configuration. The purpose of this type of scan is to discover information about filter configurations rather than port state. This type of scanning is rarely useful alone, but when combined with SYN scanning, gives a more complete picture of the type of firewall rules that are present.",
        "prerequisites": [
          "The adversary requires logical access to the target network. ACK scanning requires the use of raw sockets, and thus cannot be performed from some Windows systems (Windows XP SP 2, for example). On Unix and Linux, raw socket manipulations require root privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 306,
        "name": "TCP Window Scan",
        "description": "An adversary engages in TCP Window scanning to analyze port status and operating system type. TCP Window scanning uses the ACK scanning method but examine the TCP Window Size field of response RST packets to make certain inferences. While TCP Window Scans are fast and relatively stealthy, they work against fewer TCP stack implementations than any other type of scan. Some operating systems return a positive TCP window size when a RST packet is sent from an open port, and a negative value when the RST originates from a closed port. TCP Window scanning is one of the most complex scan types, and its results are difficult to interpret. Window scanning alone rarely yields useful information, but when combined with other types of scanning is more useful. It is a generally more reliable means of making inference about operating system versions than port status.",
        "prerequisites": [
          "TCP Window scanning requires the use of raw sockets, and thus cannot be performed from some Windows systems (Windows XP SP 2, for example). On Unix and Linux, raw socket manipulations require root privileges."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 307,
        "name": "TCP RPC Scan",
        "description": "An adversary scans for RPC services listing on a Unix/Linux host.",
        "prerequisites": [
          "RPC scanning requires no special privileges when it is performed via a native system utility."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Typically, an IDS/IPS system is very effective against this type of attack."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 308,
        "name": "UDP Scan",
        "description": "An adversary engages in UDP scanning to gather information about UDP port status on the target system. UDP scanning methods involve sending a UDP datagram to the target port and looking for evidence that the port is closed. Open UDP ports usually do not respond to UDP datagrams as there is no stateful mechanism within the protocol that requires building or establishing a session. Responses to UDP datagrams are therefore application specific and cannot be relied upon as a method of detecting an open port. UDP scanning relies heavily upon ICMP diagnostic messages in order to determine the status of a remote port.",
        "prerequisites": [
          "The ability to send UDP datagrams to a host and receive ICMP error messages from that host. In cases where particular types of ICMP messaging is disallowed, the reliability of UDP scanning drops off sharply."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Firewalls or ACLs which block egress ICMP error types effectively prevent UDP scans from returning any useful information.",
          "UDP scanning is complicated by rate limiting mechanisms governing ICMP error messages."
        ],
        "relatedAttackPatterns": [
          300
        ]
      },
      {
        "id": 309,
        "name": "Network Topology Mapping",
        "description": "An adversary engages in scanning activities to map network nodes, hosts, devices, and routes. Adversaries usually perform this type of network reconnaissance during the early stages of attack against an external network. Many types of scanning utilities are typically employed, including ICMP tools, network mappers, port scanners, and route testing utilities such as traceroute.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other"
        ],
        "relatedAttackPatterns": [
          169,
          664
        ]
      },
      {
        "id": 310,
        "name": "Scanning for Vulnerable Software",
        "description": "An attacker engages in scanning activity to find vulnerable software versions or types, such as operating system versions or network services. Vulnerable or exploitable network configurations, such as improperly firewalled systems, or misconfigured systems in the DMZ or external network, provide windows of opportunity for an attacker. Common types of vulnerable software include unpatched operating systems or services (e.g FTP, Telnet, SMTP, SNMP) running on open ports that the attacker has identified. Attackers usually begin probing for vulnerable software once the external network has been port scanned and potential targets have been revealed.",
        "prerequisites": [
          "Access to the network on which the targeted system resides.",
          "Software tools used to probe systems over a range of ports and protocols."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          541
        ]
      },
      {
        "id": 311,
        "name": "DEPRECATED: OS Fingerprinting",
        "description": "This pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the standard level patterns CAPEC-312 : Active OS Fingerprinting or CAPEC-313 : Passive OS Fingerprinting going forward, or to any of the detailed patterns that are children of them."
      },
      {
        "id": 312,
        "name": "Active OS Fingerprinting",
        "description": "An adversary engages in activity to detect the operating system or firmware version of a remote target by interrogating a device, server, or platform with a probe designed to solicit behavior that will reveal information about the operating systems or firmware in the environment. Operating System detection is possible because implementations of common protocols (Such as IP or TCP) differ in distinct ways. While the implementation differences are not sufficient to 'break' compatibility with the protocol the differences are detectable because the target will respond in unique ways to specific probing activity that breaks the semantic or logical rules of packet construction for a protocol. Different operating systems will have a unique response to the anomalous input, providing the basis to fingerprint the OS behavior. This type of OS fingerprinting can distinguish between operating system types and versions.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Hide Activities"
        ],
        "relatedAttackPatterns": [
          224
        ]
      },
      {
        "id": 313,
        "name": "Passive OS Fingerprinting",
        "description": "An adversary engages in activity to detect the version or type of OS software in a an environment by passively monitoring communication between devices, nodes, or applications. Passive techniques for operating system detection send no actual probes to a target, but monitor network or client-server communication between nodes in order to identify operating systems based on observed behavior as compared to a database of known signatures or values. While passive OS fingerprinting is not usually as reliable as active methods, it is generally better able to evade detection.",
        "prerequisites": [
          "The ability to monitor network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Hide Activities"
        ],
        "relatedAttackPatterns": [
          224
        ]
      },
      {
        "id": 314,
        "name": "DEPRECATED: IP Fingerprinting Probes",
        "description": "This pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the standard level pattern CAPEC-312 : Active OS Fingerprinting going forward, or to any of the detailed patterns that children of CAPEC-312."
      },
      {
        "id": 315,
        "name": "DEPRECATED: TCP/IP Fingerprinting Probes",
        "description": "This pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the standard level pattern CAPEC-312 : Active OS Fingerprinting going forward, or to any of the detailed patterns that are children of CAPEC-312."
      },
      {
        "id": 316,
        "name": "DEPRECATED: ICMP Fingerprinting Probes",
        "description": "This pattern has been deprecated as it was determined to be an unnecessary layer of abstraction. Please refer to the standard level pattern CAPEC-312 : Active OS Fingerprinting going forward, or to any of the detailed patterns that are children of CAPEC-312."
      },
      {
        "id": 317,
        "name": "IP ID Sequencing Probe",
        "description": "This OS fingerprinting probe analyzes the IP 'ID' field sequence number generation algorithm of a remote host. Operating systems generate IP 'ID' numbers differently, allowing an attacker to identify the operating system of the host by examining how is assigns ID numbers when generating response packets. RFC 791 does not specify how ID numbers are chosen or their ranges, so ID sequence generation differs from implementation to implementation. There are two kinds of IP 'ID' sequence number analysis - IP 'ID' Sequencing: analyzing the IP 'ID' sequence generation algorithm for one protocol used by a host and Shared IP 'ID' Sequencing: analyzing the packet ordering via IP 'ID' values spanning multiple protocols, such as between ICMP and TCP.",
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 318,
        "name": "IP 'ID' Echoed Byte-Order Probe",
        "description": "This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'ID' value from the probe packet. An attacker sends a UDP datagram with an arbitrary IP 'ID' value to a closed port on the remote host to observe the manner in which this bit is echoed back in the ICMP error message. The identification field (ID) is typically utilized for reassembling a fragmented packet. Some operating systems or router firmware reverse the bit order of the ID field when echoing the IP Header portion of the original datagram within an ICMP error message.",
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 319,
        "name": "IP (DF) 'Don't Fragment Bit' Echoing Probe",
        "description": "This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'DF' (Don't Fragment) bit in a response packet. An attacker sends a UDP datagram with the DF bit set to a closed port on the remote host to observe whether the 'DF' bit is set in the response packet. Some operating systems will echo the bit in the ICMP error message while others will zero out the bit in the response packet.",
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 320,
        "name": "TCP Timestamp Probe",
        "description": "This OS fingerprinting probe examines the remote server's implementation of TCP timestamps. Not all operating systems implement timestamps within the TCP header, but when timestamps are used then this provides the attacker with a means to guess the operating system of the target. The attacker begins by probing any active TCP service in order to get response which contains a TCP timestamp. Different Operating systems update the timestamp value using different intervals. This type of analysis is most accurate when multiple timestamp responses are received and then analyzed. TCP timestamps can be found in the TCP Options field of the TCP header.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card.The target OS must support the TCP timestamp option in order to obtain a fingerprint."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 321,
        "name": "TCP Sequence Number Probe",
        "description": "This OS fingerprinting probe tests the target system's assignment of TCP sequence numbers. One common way to test TCP Sequence Number generation is to send a probe packet to an open port on the target and then compare the how the Sequence Number generated by the target relates to the Acknowledgement Number in the probe packet. Different operating systems assign Sequence Numbers differently, so a fingerprint of the operating system can be obtained by categorizing the relationship between the acknowledgement number and sequence number as follows: 1) the Sequence Number generated by the target is Zero, 2) the Sequence Number generated by the target is the same as the acknowledgement number in the probe, 3) the Sequence Number generated by the target is the acknowledgement number plus one, or 4) the Sequence Number is any other non-zero number.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 322,
        "name": "TCP (ISN) Greatest Common Divisor Probe",
        "description": "This OS fingerprinting probe sends a number of TCP SYN packets to an open port of a remote machine. The Initial Sequence Number (ISN) in each of the SYN/ACK response packets is analyzed to determine the smallest number that the target host uses when incrementing sequence numbers. This information can be useful for identifying an operating system because particular operating systems and versions increment sequence numbers using different values. The result of the analysis is then compared against a database of OS behaviors to determine the OS type and/or version.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 323,
        "name": "TCP (ISN) Counter Rate Probe",
        "description": "This OS detection probe measures the average rate of initial sequence number increments during a period of time. Sequence numbers are incremented using a time-based algorithm and are susceptible to a timing analysis that can determine the number of increments per unit time. The result of this analysis is then compared against a database of operating systems and versions to determine likely operation system matches.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 324,
        "name": "TCP (ISN) Sequence Predictability Probe",
        "description": "This type of operating system probe attempts to determine an estimate for how predictable the sequence number generation algorithm is for a remote host. Statistical techniques, such as standard deviation, can be used to determine how predictable the sequence number generation is for a system. This result can then be compared to a database of operating system behaviors to determine a likely match for operating system and version.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 325,
        "name": "TCP Congestion Control Flag (ECN) Probe",
        "description": "This OS fingerprinting probe checks to see if the remote host supports explicit congestion notification (ECN) messaging. ECN messaging was designed to allow routers to notify a remote host when signal congestion problems are occurring. Explicit Congestion Notification messaging is defined by RFC 3168. Different operating systems and versions may or may not implement ECN notifications, or may respond uniquely to particular ECN flag types.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 326,
        "name": "TCP Initial Window Size Probe",
        "description": "This OS fingerprinting probe checks the initial TCP Window size. TCP stacks limit the range of sequence numbers allowable within a session to maintain the \"connected\" state within TCP protocol logic. The initial window size specifies a range of acceptable sequence numbers that will qualify as a response to an ACK packet within a session. Various operating systems use different Initial window sizes. The initial window size can be sampled by establishing an ordinary TCP connection.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 327,
        "name": "TCP Options Probe",
        "description": "This OS fingerprinting probe analyzes the type and order of any TCP header options present within a response segment. Most operating systems use unique ordering and different option sets when options are present. RFC 793 does not specify a required order when options are present, so different implementations use unique ways of ordering or structuring TCP options. TCP options can be generated by ordinary TCP traffic.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 328,
        "name": "TCP 'RST' Flag Checksum Probe",
        "description": "This OS fingerprinting probe performs a checksum on any ASCII data contained within the data portion or a RST packet. Some operating systems will report a human-readable text message in the payload of a 'RST' (reset) packet when specific types of connection errors occur. RFC 1122 allows text payloads within reset packets but not all operating systems or routers implement this functionality.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 329,
        "name": "ICMP Error Message Quoting Probe",
        "description": "An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the amount of data returned or \"Quoted\" from the originating request that generated the ICMP error message.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 330,
        "name": "ICMP Error Message Echoing Integrity Probe",
        "description": "An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the integrity of data returned or \"Quoted\" from the originating request that generated the error message.",
        "prerequisites": [
          "The ability to monitor and interact with network communications.Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 331,
        "name": "ICMP IP Total Length Field Probe",
        "description": "An adversary sends a UDP packet to a closed port on the target machine to solicit an IP Header's total length field value within the echoed 'Port Unreachable\" error message. This type of behavior is useful for building a signature-base of operating system responses, particularly when error messages contain other types of information that is useful identifying specific operating system responses.",
        "prerequisites": [
          "The ability to monitor and interact with network communications. Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          204
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 332,
        "name": "ICMP IP 'ID' Field Error Message Probe",
        "description": "An adversary sends a UDP datagram having an assigned value to its internet identification field (ID) to a closed port on a target to observe the manner in which this bit is echoed back in the ICMP error message. This allows the attacker to construct a fingerprint of specific OS behaviors.",
        "prerequisites": [
          "The ability to monitor and interact with network communications. Access to at least one host, and the privileges to interface with the network interface card."
        ],
        "relatedWeaknesses": [
          204
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "relatedAttackPatterns": [
          312
        ]
      },
      {
        "id": 383,
        "name": "Harvesting Information via API Event Monitoring",
        "description": "An adversary hosts an event within an application framework and then monitors the data exchanged during the course of the event for the purpose of harvesting any important data leaked during the transactions. One example could be harvesting lists of usernames or userIDs for the purpose of sending spam messages to those users. One example of this type of attack involves the adversary creating an event within the sub-application. Assume the adversary hosts a \"virtual sale\" of rare items. As other users enter the event, the attacker records via AiTM (CAPEC-94) proxy the user_ids and usernames of everyone who attends. The adversary would then be able to spam those users within the application using an automated script.",
        "prerequisites": [
          "The target software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          311,
          319,
          419,
          602
        ],
        "consequences": [
          "Confidentiality Read Data The adversary is able to gather information to potentially support further nefarious activities."
        ],
        "mitigations": [
          "Leverage encryption techniques during information transactions so as to protect them from attack patterns of this kind."
        ],
        "relatedAttackPatterns": [
          407,
          94
        ]
      },
      {
        "id": 384,
        "name": "Application API Message Manipulation via Man-in-the-Middle",
        "description": "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to perform adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system. Despite the use of AiTH software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true \"Adversary-in-the-Middle\" attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          471,
          345,
          346,
          602,
          311
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 385,
        "name": "Transaction or Event Tampering via Application API Manipulation",
        "description": "An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, substitute one item or another, spoof an existing item and conduct a false exchange, or otherwise change the amounts or identity of what is being exchanged. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in game can be monetized via sales for coin, virtual dollars, etc. The purpose of the attack is for the attack to scam the victim by trapping the data packets involved the exchange and altering the integrity of the transfer process.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          471,
          345,
          346,
          602,
          311
        ],
        "relatedAttackPatterns": [
          384
        ]
      },
      {
        "id": 386,
        "name": "Application API Navigation Remapping",
        "description": "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          471,
          345,
          346,
          602,
          311
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 387,
        "name": "Navigation Remapping To Propagate Malicious Content",
        "description": "An adversary manipulates either egress or ingress data from a client within an application framework in order to change the content of messages and thereby circumvent the expected application logic.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          471,
          345,
          346,
          602,
          311
        ],
        "relatedAttackPatterns": [
          386
        ]
      },
      {
        "id": 388,
        "name": "Application API Button Hijacking",
        "description": "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains buttons that point to an attacker controlled destination.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          471,
          345,
          346,
          602,
          311
        ],
        "relatedAttackPatterns": [
          386
        ]
      },
      {
        "id": 389,
        "name": "Content Spoofing Via Application API Manipulation",
        "description": "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, spam-like content, or links to the attackers' code. In general, content-spoofing within an application API can be employed to stage many different types of attacks varied based on the attackers' intent. The techniques require use of specialized software that allow the attacker to use adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system.",
        "prerequisites": [
          "Targeted software is utilizing application framework APIs"
        ],
        "relatedWeaknesses": [
          353
        ],
        "relatedAttackPatterns": [
          384
        ]
      },
      {
        "id": 390,
        "name": "Bypassing Physical Security",
        "description": "Facilities often used layered models for physical security such as traditional locks, Electronic-based card entry systems, coupled with physical alarms. Hardware security mechanisms range from the use of computer case and cable locks as well as RFID tags for tracking computer assets. This layered approach makes it difficult for random physical security breaches to go unnoticed, but is less effective at stopping deliberate and carefully planned break-ins. Avoiding detection begins with evading building security and surveillance and methods for bypassing the electronic or physical locks which secure entry points."
      },
      {
        "id": 391,
        "name": "Bypassing Physical Locks",
        "description": "An attacker uses techniques and methods to bypass physical security measures of a building or facility. Physical locks may range from traditional lock and key mechanisms, cable locks used to secure laptops or servers, locks on server cases, or other such devices. Techniques such as lock bumping, lock forcing via snap guns, or lock picking can be employed to bypass those locks and gain access to the facilities or devices they protect, although stealth, evidence of tampering, and the integrity of the lock following an attack, are considerations that may determine the method employed. Physical locks are limited by the complexity of the locking mechanism. While some locks may offer protections such as shock resistant foam to prevent bumping or lock forcing methods, many commonly employed locks offer no such countermeasures.",
        "relatedAttackPatterns": [
          390
        ]
      },
      {
        "id": 392,
        "name": "Lock Bumping",
        "description": "An attacker uses a bump key to force a lock on a building or facility and gain entry. Lock Bumping is the use of a special type of key that can be tapped or bumped to cause the pins within the lock to fall into temporary alignment, allowing the lock to be opened. Lock bumping allows an attacker to open a lock without having the correct key. A standard lock is secured by a set of internal pins that prevent the device from turning. Spring loaded driver pins push down on the key pins. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. A bump key is a specially constructed key that exploits this design. When the bump key is struck or firmly tapped, its teeth transfer the force of the tap into the key pins, causing the lock to momentarily shift into proper alignment for the mechanism to be opened.",
        "relatedAttackPatterns": [
          391
        ]
      },
      {
        "id": 393,
        "name": "Lock Picking",
        "description": "An attacker uses lock picking tools and techniques to bypass the locks on a building or facility. Lock picking is the use of a special set of tools to manipulate the pins within a lock. Different sets of tools are required for each type of lock. Lock picking attacks have the advantage of being non-invasive in that if performed correctly the lock will not be damaged. A standard lock pin-and-tumbler lock is secured by a set of internal pins that prevent the tumbler device from turning. Spring loaded driver pins push down on the key pins preventing rotation so that the bolt remains in a locked position.. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. Most common locks, such as domestic locks in the US, can be picked using a standard 2 tools (i.e. a torsion wrench and a hook pick).",
        "relatedAttackPatterns": [
          391
        ]
      },
      {
        "id": 394,
        "name": "Using a Snap Gun Lock to Force a Lock",
        "description": "An attacker uses a Snap Gun, also known as a Pick Gun, to force the lock on a building or facility. A Pick Gun is a special type of lock picking instrument that works on similar principles as lock bumping. A snap gun is a hand-held device with an attached metal pick. The metal pick strikes the pins within the lock, transferring motion from the key pins to the driver pins and forcing the lock into momentary alignment. A standard lock is secured by a set of internal pins that prevent the device from turning. Spring loaded driver pins push down on the key pins. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. A Snap Gun exploits this design by using a metal pin to strike all of the key pins at once, forcing the driver pins to shift into an unlocked position. Unlike bump keys or lock picks, a Snap Gun may damage the lock more easily, leaving evidence that the lock has been tampered with.",
        "relatedAttackPatterns": [
          391
        ]
      },
      {
        "id": 395,
        "name": "Bypassing Electronic Locks and Access Controls",
        "description": "An attacker exploits security assumptions to bypass electronic locks or other forms of access controls. Most attacks against electronic access controls follow similar methods but utilize different tools. Some electronic locks utilize magnetic strip cards, others employ RFID tags embedded within a card or badge, or may involve more sophisticated protections such as voice-print, thumb-print, or retinal biometrics. Magnetic Strip and RFID technologies are the most widespread because they are cost effective to deploy and more easily integrated with other electronic security measures. These technologies share common weaknesses that an attacker can exploit to gain access to a facility protected by the mechanisms via copying legitimate cards or badges, or generating new cards using reverse-engineered algorithms.",
        "relatedAttackPatterns": [
          390
        ]
      },
      {
        "id": 396,
        "name": "DEPRECATED: Bypassing Card or Badge-Based Systems",
        "description": "This attack pattern has been deprecated as it a generalization of CAPEC-397: Cloning Magnetic Strip Cards, CAPEC-398: Magnetic Strip Card Brute Force Attacks, CAPEC-399: Cloning RFID Cards or Chips and CAPEC-400: RFID Chip Deactivation or Destruction. Please refer to these CAPECs going forward."
      },
      {
        "id": 397,
        "name": "Cloning Magnetic Strip Cards",
        "description": "An attacker duplicates the data on a Magnetic strip card (i.e. 'swipe card' or 'magstripe') to gain unauthorized access to a physical location or a person's private information. Magstripe cards encode data on a band of iron-based magnetic particles arrayed in a stripe along a rectangular card. Most magstripe card data formats conform to ISO standards 7810, 7811, 7813, 8583, and 4909. The primary advantage of magstripe technology is ease of encoding and portability, but this also renders magnetic strip cards susceptible to unauthorized duplication. If magstripe cards are used for access control, all an attacker need do is obtain a valid card long enough to make a copy of the card and then return the card to its location (i.e. a co-worker's desk). Magstripe reader/writers are widely available as well as software for analyzing data encoded on the cards. By swiping a valid card, it becomes trivial to make any number of duplicates that function as the original.",
        "relatedAttackPatterns": [
          395
        ]
      },
      {
        "id": 398,
        "name": "Magnetic Strip Card Brute Force Attacks",
        "description": "An adversary analyzes the data on two or more magnetic strip cards and is able to generate new cards containing valid sequences that allow unauthorized access and/or impersonation of individuals.",
        "prerequisites": [
          "The ability to calculate a card checksum and write out a valid checksum value. Some cards are protected by a checksum calculation, therefore it is necessary to determine what algorithm is being used to calculate the checksum and to employ that algorithm to calculate and write a new valid checksum for the card being created."
        ],
        "relatedAttackPatterns": [
          395
        ]
      },
      {
        "id": 399,
        "name": "Cloning RFID Cards or Chips",
        "description": "An attacker analyzes data returned by an RFID chip and uses this information to duplicate a RFID signal that responds identically to the target chip. In some cases RFID chips are used for building access control, employee identification, or as markers on products being delivered along a supply chain. Some organizations also embed RFID tags inside computer assets to trigger alarms if they are removed from particular rooms, zones, or buildings. Similar to Magnetic strip cards, RFID cards are susceptible to duplication (cloning) and reuse.",
        "relatedAttackPatterns": [
          395
        ]
      },
      {
        "id": 400,
        "name": "RFID Chip Deactivation or Destruction",
        "description": "An attacker uses methods to deactivate a passive RFID tag for the purpose of rendering the tag, badge, card, or object containing the tag unresponsive. RFID tags are used primarily for access control, inventory, or anti-theft devices. The purpose of attacking the RFID chip is to disable or damage the chip without causing damage to the object housing it.",
        "relatedAttackPatterns": [
          395
        ]
      },
      {
        "id": 401,
        "name": "Physically Hacking Hardware",
        "description": "An adversary exploits a weakness in access control to gain access to currently installed hardware and precedes to implement changes or secretly replace a hardware component which undermines the system's integrity for the purpose of carrying out an attack.",
        "relatedWeaknesses": [
          1263
        ],
        "relatedAttackPatterns": [
          440
        ]
      },
      {
        "id": 402,
        "name": "Bypassing ATA Password Security",
        "description": "An adversary exploits a weakness in ATA security on a drive to gain access to the information the drive contains without supplying the proper credentials. ATA Security is often employed to protect hard disk information from unauthorized access. The mechanism requires the user to type in a password before the BIOS is allowed access to drive contents. Some implementations of ATA security will accept the ATA command to update the password without the user having authenticated with the BIOS. This occurs because the security mechanism assumes the user has first authenticated via the BIOS prior to sending commands to the drive. Various methods exist for exploiting this flaw, the most common being installing the ATA protected drive into a system lacking ATA security features (a.k.a. hot swapping). Once the drive is installed into the new system the BIOS can be used to reset the drive password.",
        "prerequisites": [
          "Access to the system containing the ATA Drive so that the drive can be physically removed from the system."
        ],
        "relatedWeaknesses": [
          285
        ],
        "mitigations": [
          "Avoid using ATA password security when possible.",
          "Use full disk encryption to protect the entire contents of the drive or sensitive partitions on the drive.",
          "Leverage third-party utilities that interface with self-encrypting drives (SEDs) to provide authentication, while relying on the SED itself for data encryption."
        ],
        "relatedAttackPatterns": [
          401
        ]
      },
      {
        "id": 404,
        "name": "DEPRECATED: Social Information Gathering Attacks",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern. Please refer to CAPEC-118 : Collect and Analyze Information."
      },
      {
        "id": 405,
        "name": "DEPRECATED: Social Information Gathering via Research",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern. Please refer to CAPEC-118 : Collect and Analyze Information."
      },
      {
        "id": 406,
        "name": "Dumpster Diving",
        "description": "An adversary cases an establishment and searches through trash bins, dumpsters, or areas where company information may have been accidentally discarded for information items which may be useful to the dumpster diver. The devastating nature of the items and/or information found can be anything from medical records, resumes, personal photos and emails, bank statements, account details or information about software, tech support logs and so much more, including hardware devices. By collecting this information an adversary may be able to learn important facts about the person or organization that play a role in helping the adversary in their attack.",
        "prerequisites": [
          "An adversary must have physical access to the dumpster or downstream processing facility."
        ],
        "consequences": [
          "Confidentiality Other Documents and materials improperly disposed of can lead to information disclosure if an adversary comes across it."
        ],
        "relatedAttackPatterns": [
          150,
          163,
          675
        ]
      },
      {
        "id": 407,
        "name": "Pretexting",
        "description": "An adversary engages in pretexting behavior to solicit information from target persons, or manipulate the target into performing some action that serves the adversary's interests. During a pretexting attack, the adversary creates an invented scenario, assuming an identity or role to persuade a targeted victim to release information or perform some action. It is more than just creating a lie; in some cases it can be creating a whole new identity and then using that identity to manipulate the receipt of information.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the pretext that would influence the actions of the specific target."
        ],
        "consequences": [
          "Confidentiality Other Depending on the adversary's intentions and the specific nature their actions/requests, a successful pretexting attack can result in the compromise to the confidentiality of sensitive information in a variety of contexts."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent successful social engineering attacks."
        ],
        "relatedAttackPatterns": [
          416,
          410,
          163
        ]
      },
      {
        "id": 408,
        "name": "DEPRECATED: Information Gathering from Traditional Sources",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern. Please refer to CAPEC-118 : Collect and Analyze Information."
      },
      {
        "id": 409,
        "name": "DEPRECATED: Information Gathering from Non-Traditional Sources",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate attack pattern. Please refer to CAPEC-118 : Collect and Analyze Information."
      },
      {
        "id": 410,
        "name": "Information Elicitation",
        "description": "An adversary engages an individual using any combination of social engineering methods for the purpose of extracting information. Accurate contextual and environmental queues, such as knowing important information about the target company or individual can greatly increase the success of the attack and the quality of information gathered. Authentic mimicry combined with detailed knowledge increases the success of elicitation attacks."
      },
      {
        "id": 411,
        "name": "DEPRECATED: Pretexting",
        "description": "This attack pattern has been deprecated as it is a duplicate of the existing attack pattern \"CAPEC-407 : Social Information Gathering via Pretexting\". Please refer to this other CAPEC going forward."
      },
      {
        "id": 412,
        "name": "Pretexting via Customer Service",
        "description": "An adversary engages in pretexting behavior, assuming the role of someone who works for Customer Service, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. One example of a scenario such as this would be to call an individual, articulate your false affiliation with a credit card company, and then attempt to get the individual to verify their credit card number.",
        "relatedAttackPatterns": [
          407
        ]
      },
      {
        "id": 413,
        "name": "Pretexting via Tech Support",
        "description": "An adversary engages in pretexting behavior, assuming the role of a tech support worker, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. An adversary who uses social engineering to impersonate a tech support worker can have devastating effects on a network. This is an effective attack vector, because it can give an adversary physical access to network computers. It only takes a matter of seconds for someone to compromise a computer with physical access. One of the best technological tools at the disposal of a social engineer, posing as a technical support person, is a USB thumb drive. These are small, easy to conceal, and can be loaded with different payloads depending on what task needs to be done. However, this form of attack does not require physical access as it can also be effectively carried out via phone or email.",
        "relatedAttackPatterns": [
          407
        ]
      },
      {
        "id": 414,
        "name": "Pretexting via Delivery Person",
        "description": "An adversary engages in pretexting behavior, assuming the role of a delivery person, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. Impersonating a delivery person is an effective attack and an easy attack since not much acting is involved. Usually the hardest part is looking the part and having all of the proper credentials, papers and \"deliveries\" in order to be able to pull it off.",
        "relatedAttackPatterns": [
          407
        ]
      },
      {
        "id": 415,
        "name": "Pretexting via Phone",
        "description": "An adversary engages in pretexting behavior, assuming some sort of trusted role, and contacting the targeted individual or organization via phone to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. This is the most common social engineering attack. Some of the most commonly effective approaches are to impersonate a fellow employee, impersonate a computer technician or to target help desk personnel.",
        "relatedAttackPatterns": [
          407
        ]
      },
      {
        "id": 416,
        "name": "Manipulate Human Behavior",
        "description": "An adversary exploits inherent human psychological predisposition to influence a targeted individual or group to solicit information or manipulate the target into performing an action that serves the adversary's interests. Many interpersonal social engineering techniques do not involve outright deception, although they can; many are subtle ways of manipulating a target to remove barriers, make the target feel comfortable, and produce an exchange in which the target is either more likely to share information directly, or let key information slip out unintentionally. A skilled adversary uses these techniques when appropriate to produce the desired outcome. Manipulation techniques vary from the overt, such as pretending to be a supervisor to a help desk, to the subtle, such as making the target feel comfortable with the adversary's speech and thought patterns.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attack patterns that manipulate human behavior can result in a wide variety of consequences and potentially affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent successful social engineering attacks."
        ]
      },
      {
        "id": 417,
        "name": "Influence Perception",
        "description": "The adversary uses social engineering to exploit the target's perception of the relationship between the adversary and themselves. This goal is to persuade the target to unknowingly perform an action or divulge information that is advantageous to the adversary.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          416
        ]
      },
      {
        "id": 418,
        "name": "Influence Perception of Reciprocation",
        "description": "An adversary uses a social engineering techniques to produce a sense of obligation in the target to perform a certain action or concede some sensitive or key piece of information. Obligation has to do with actions one feels they need to take due to some sort of social, legal, or moral requirement, duty, contract, or promise. There are various techniques for fostering a sense of obligation to reciprocate or concede during ordinary modes of communication. One method is to compliment the target, and follow up the compliment with a question. If performed correctly the target may volunteer a key piece of information, sometimes involuntarily.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 419,
        "name": "DEPRECATED: Target Influence via Perception of Concession",
        "description": "This attack pattern has been deprecated as it was deemed not to be a legitimate pattern."
      },
      {
        "id": 420,
        "name": "Influence Perception of Scarcity",
        "description": "The adversary leverages a perception of scarcity to persuade the target to perform an action or divulge information that is advantageous to the adversary. By conveying a perception of scarcity, or a situation of limited supply, the adversary aims to create a sense of urgency in the context of a target's decision-making process.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 421,
        "name": "Influence Perception of Authority",
        "description": "An adversary uses a social engineering technique to convey a sense of authority that motivates the target to reveal specific information or take specific action. There are various techniques for producing a sense of authority during ordinary modes of communication. One common method is impersonation. By impersonating someone with a position of power within an organization, an adversary may motivate the target individual to reveal some piece of sensitive information or perform an action that benefits the adversary.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 422,
        "name": "Influence Perception of Commitment and Consistency",
        "description": "An adversary uses social engineering to convince the target to do minor tasks as opposed to larger actions. After complying with a request, individuals are more likely to agree to subsequent requests that are similar in type and required effort.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.",
          "Individuals should avoid complying with suspicious requests."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 423,
        "name": "Influence Perception of Liking",
        "description": "The adversary influences the target's actions by building a relationship where the target has a liking to the adversary. People are more likely to be influenced by people of whom they are fond, so the adversary attempts to ingratiate themself with the target via actions, appearance, or a combination thereof.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the types of things that the target likes."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 424,
        "name": "Influence Perception of Consensus or Social Proof",
        "description": "The adversary influences the target's actions by leveraging the inherent human nature to assume behavior of others is appropriate. In situations of uncertainty, people tend to behave in ways they see others behaving. The adversary convinces the target of adopting behavior or actions that is advantageous to the adversary.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          417
        ]
      },
      {
        "id": 425,
        "name": "Target Influence via Framing",
        "description": "An adversary uses framing techniques to contextualize a conversation so that the target is more likely to be influenced by the adversary's point of view. Framing is information and experiences in life that alter the way we react to decisions we must make. This type of persuasive technique exploits the way people are conditioned to perceive data and its significance, while avoiding negative or avoidance responses from the target. Rather than a specific technique framing is a methodology of conversation that slowly encourages the target to adopt to the adversary's perspective. One technique of framing is to avoid the use of the word \"No\" and to contextualize responses in a manner that is positive. When performed skillfully the target is much more likely to volunteer information or perform actions favorable to the adversary.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Other Successful attacks that influence the target via framing into performing an action or sharing sensitive information can result in a variety of consequences that negatively affect the confidentiality of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.",
          "Avoid sharing unnecessary information during interactions beyond what is absolutely required for effective communication."
        ],
        "relatedAttackPatterns": [
          416
        ]
      },
      {
        "id": 426,
        "name": "Influence via Incentives",
        "description": "The adversary incites a behavior from the target by manipulating something of influence. This is commonly associated with financial, social, or ideological incentivization. Examples include monetary fraud, peer pressure, and preying on the target's morals or ethics. The most effective incentive against one target might not be as effective against another, therefore the adversary must gather information about the target's vulnerability to particular incentives.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the incentives that would influence the actions of the specific target."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that successfully incentivize the target into performing an action beneficial to the adversary can result in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          416
        ]
      },
      {
        "id": 427,
        "name": "Influence via Psychological Principles",
        "description": "The adversary shapes the target's actions or behavior by focusing on the ways human interact and learn, leveraging such elements as cognitive and social psychology. In a variety of ways, a target can be influenced to behave or perform an action through capitalizing on what scholarship and research has learned about how and why humans react to specific scenarios and cues.",
        "prerequisites": [
          "The adversary must have the means and knowledge of how to communicate with the target in some manner."
        ],
        "consequences": [
          "Confidentiality Integrity Availability Other Attacks that successfully influence the target into performing an action via psychological principles can result in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system."
        ],
        "mitigations": [
          "An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks."
        ],
        "relatedAttackPatterns": [
          416
        ]
      },
      {
        "id": 428,
        "name": "Influence via Modes of Thinking",
        "description": "The adversary tailors their communication to the language and thought patterns of the target thereby weakening barriers or reluctance to communication. This method is a way of building rapport with a target by matching their speech patterns and the primary ways or dominant senses with which they make abstractions. This technique can be used to make the target more receptive to sharing information because the adversary has adapted their communication forms to match those of the target. When skillfully employed, the target is likely to be unaware that they are being manipulated.",
        "relatedAttackPatterns": [
          427
        ]
      },
      {
        "id": 429,
        "name": "Target Influence via Eye Cues",
        "description": "The adversary gains information via non-verbal means from the target through eye movements.",
        "relatedAttackPatterns": [
          427
        ]
      },
      {
        "id": 430,
        "name": "DEPRECATED:  Target Influence via Micro-Expressions",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 431,
        "name": "DEPRECATED:  Target Influence via Neuro-Linguistic Programming (NLP)",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 432,
        "name": "DEPRECATED:  Target Influence via Voice in NLP",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 433,
        "name": "Target Influence via The Human Buffer Overflow",
        "description": "An attacker utilizes a technique to insinuate commands to the subconscious mind of the target via communication patterns. The human buffer overflow methodology does not rely on over-stimulating the mind of the target, but rather embedding messages within communication that the mind of the listener assembles at a subconscious level. The human buffer-overflow method is similar to subconscious programming to the extent that messages are embedded within the message.",
        "relatedAttackPatterns": [
          427
        ]
      },
      {
        "id": 434,
        "name": "Target Influence via Interview and Interrogation",
        "relatedAttackPatterns": [
          427
        ]
      },
      {
        "id": 435,
        "name": "Target Influence via Instant Rapport",
        "relatedAttackPatterns": [
          427
        ]
      },
      {
        "id": 438,
        "name": "Modification During Manufacture",
        "description": "An attacker modifies a technology, product, or component during a stage in its manufacture for the purpose of carrying out an attack against some entity involved in the supply chain lifecycle. There are an almost limitless number of ways an attacker can modify a technology when they are involved in its manufacture, as the attacker has potential inroads to the software composition, hardware design and assembly, firmware, or basic design mechanics. Additionally, manufacturing of key components is often outsourced with the final product assembled by the primary manufacturer. The greatest risk, however, is deliberate manipulation of design specifications to produce malicious hardware or devices. There are billions of transistors in a single integrated circuit and studies have shown that fewer than 10 transistors are required to create malicious functionality."
      },
      {
        "id": 439,
        "name": "Manipulation During Distribution",
        "description": "An attacker undermines the integrity of a product, software, or technology at some stage of the distribution channel. The core threat of modification or manipulation during distribution arise from the many stages of distribution, as a product may traverse multiple suppliers and integrators as the final asset is delivered. Components and services provided from a manufacturer to a supplier may be tampered with during integration or packaging.",
        "relatedWeaknesses": [
          1269
        ]
      },
      {
        "id": 440,
        "name": "Hardware Integrity Attack",
        "description": "An adversary exploits a weakness in the system maintenance process and causes a change to be made to a technology, product, component, or sub-component or a new one installed during its deployed use at the victim location for the purpose of carrying out an attack.",
        "prerequisites": [
          "Influence over the deployed system at a victim location."
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands"
        ]
      },
      {
        "id": 441,
        "name": "Malicious Logic Insertion",
        "description": "An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.",
        "prerequisites": [
          "Access to the component currently deployed at a victim location."
        ],
        "relatedWeaknesses": [
          284
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ]
      },
      {
        "id": 442,
        "name": "Infected Software",
        "description": "An adversary adds malicious logic, often in the form of a computer virus, to otherwise benign software. This logic is often hidden from the user of the software and works behind the scenes to achieve negative impacts. Many times, the malicious logic is inserted into empty space between legitimate code, and is then called when the software is executed. This pattern of attack focuses on software already fielded and used in operation as opposed to software that is still under development and part of the supply chain.",
        "prerequisites": [
          "Access to the software currently deployed at a victim location. This access is often obtained by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have."
        ],
        "relatedWeaknesses": [
          506
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Leverage anti-virus products to detect and quarantine software with known virus."
        ],
        "relatedAttackPatterns": [
          441
        ]
      },
      {
        "id": 443,
        "name": "Malicious Logic Inserted Into Product by Authorized Developer",
        "description": "An adversary uses their privileged position within an authorized development organization to inject malicious logic into a codebase or product.",
        "prerequisites": [
          "Access to the product during the initial or continuous development."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Assess software and hardware during development and prior to deployment to ensure that it functions as intended and without any malicious functionality. This includes both initial development, as well as updates propagated to the product after deployment."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 444,
        "name": "Development Alteration",
        "description": "An adversary modifies a technology, product, or component during its development to acheive a negative impact once the system is deployed. The goal of the adversary is to modify the system in such a way that the negative impact can be leveraged when the system is later deployed. Development alteration attacks may include attacks that insert malicious logic into the system's software, modify or replace hardware components, and other attacks which negatively impact the system during development. These attacks generally require insider access to modify source code or to tamper with hardware components. The product is then delivered to the user where the negative impact can be leveraged at a later time.",
        "prerequisites": [
          "Access to the system during the development phase to alter and/or modify software and hardware components. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands",
          "Availability Unreliable Execution",
          "Integrity Alter Execution Logic"
        ],
        "mitigations": [
          "Assess software and software components during development and prior to deployment to ensure that they function as intended and without any malicious functionality."
        ],
        "relatedAttackPatterns": [
          438
        ]
      },
      {
        "id": 445,
        "name": "Malicious Logic Insertion into Product Software via Configuration Management Manipulation",
        "description": "An adversary exploits a configuration management system so that malicious logic is inserted into a software products build, update or deployed environment. If an adversary can control the elements included in a product's configuration management for build they can potentially replace, modify or insert code files containing malicious logic. If an adversary can control elements of a product's ongoing operational configuration management baseline they can potentially force clients receiving updates from the system to install insecure software when receiving updates from the server.",
        "prerequisites": [
          "Access to the configuration management system during deployment or currently deployed at a victim location. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Assess software during development and prior to deployment to ensure that it functions as intended and without any malicious functionality.",
          "Leverage anti-virus products to detect and quarantine software with known virus."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 446,
        "name": "Malicious Logic Insertion into Product via Inclusion of Third-Party Component",
        "description": "An adversary conducts supply chain attacks by the inclusion of insecure third-party components into a technology, product, or code-base, possibly packaging a malicious driver or component along with the product before shipping it to the consumer or acquirer.",
        "prerequisites": [
          "Access to the product during the initial or continuous development. This access is often obtained via insider access to include the third-party component after deployment."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Assess software and hardware during development and prior to deployment to ensure that it functions as intended and without any malicious functionality. This includes both initial development, as well as updates propagated to the product after deployment.",
          "Don't assume popular third-party components are free from malware or vulnerabilities. For software, assess for malicious functionality via update/commit reviews or automated static/dynamic analysis prior to including the component within the application and deploying in a production environment."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 447,
        "name": "Design Alteration",
        "description": "An adversary modifies the design of a technology, product, or component to acheive a negative impact once the system is deployed. In this type of attack, the goal of the adversary is to modify the design of the system, prior to development starting, in such a way that the negative impact can be leveraged when the system is later deployed. Design alteration attacks differ from development alteration attacks in that design alteration attacks take place prior to development and which then may or may not be developed by the adverary. Design alteration attacks include modifying system designs to degrade system performance, cause unexpected states or errors, and general design changes that may lead to additional vulnerabilities. These attacks generally require insider access to modify design documents, but they may also be spoofed via web communications. The product is then developed and delivered to the user where the negative impact can be leveraged at a later time.",
        "prerequisites": [
          "Access to system design documentation prior to the development phase. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have.",
          "Ability to forge web communications to deliver modified design documentation."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands",
          "Availability Unreliable Execution",
          "Integrity Alter Execution Logic"
        ],
        "mitigations": [
          "Assess design documentation prior to development to ensure that they function as intended and without any malicious functionality.",
          "Ensure that design documentation is saved in a secure location and has proper access controls set in place to avoid unnecessary modification."
        ],
        "relatedAttackPatterns": [
          438
        ]
      },
      {
        "id": 448,
        "name": "Embed Virus into DLL",
        "description": "An adversary tampers with a DLL and embeds a computer virus into gaps between legitimate machine instructions. These gaps may be the result of compiler optimizations that pad memory blocks for performance gains. The embedded virus then attempts to infect any machine which interfaces with the product, and possibly steal private data or eavesdrop.",
        "prerequisites": [
          "Access to the software currently deployed at a victim location. This access is often obtained by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have."
        ],
        "relatedWeaknesses": [
          506
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Leverage anti-virus products to detect and quarantine software with known virus."
        ],
        "relatedAttackPatterns": [
          442
        ]
      },
      {
        "id": 449,
        "name": "DEPRECATED: Malware Propagation via USB Stick",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-448 : Malware Infection into Product Software. Please refer to this other pattern going forward."
      },
      {
        "id": 450,
        "name": "DEPRECATED: Malware Propagation via USB U3 Autorun",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-448 : Embed Virus into DLL. Please refer to this other pattern going forward."
      },
      {
        "id": 451,
        "name": "DEPRECATED: Malware Propagation via Infected Peripheral Device",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-448 : Malware Infection into Product Software. Please refer to this other pattern going forward."
      },
      {
        "id": 452,
        "name": "Infected Hardware",
        "description": "An adversary inserts malicious logic into hardware, typically in the form of a computer virus or rootkit. This logic is often hidden from the user of the hardware and works behind the scenes to achieve negative impacts. This pattern of attack focuses on hardware already fielded and used in operation as opposed to hardware that is still under development and part of the supply chain.",
        "prerequisites": [
          "Access to the hardware currently deployed at a victim location."
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "relatedAttackPatterns": [
          441
        ]
      },
      {
        "id": 453,
        "name": "DEPRECATED: Malicious Logic Insertion via Counterfeit Hardware",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-452 : Malicious Logic Insertion into Product Hardware. Please refer to this other pattern going forward."
      },
      {
        "id": 454,
        "name": "DEPRECATED: Modification of Existing Components with Counterfeit Hardware",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-452 : Malicious Logic Insertion into Product Hardware. Please refer to this other pattern going forward."
      },
      {
        "id": 455,
        "name": "DEPRECATED: Malicious Logic Insertion via Inclusion of Counterfeit Hardware Components",
        "description": "This attack pattern has been deprecated as it is a duplicate of CAPEC-457 : Malicious Logic Insertion into Product Hardware. Please refer to this other pattern going forward."
      },
      {
        "id": 456,
        "name": "Infected Memory",
        "description": "An adversary inserts malicious logic into memory enabling them to achieve a negative impact. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems that are still under development and part of the supply chain.",
        "relatedWeaknesses": [
          1257,
          1260,
          1274,
          1312,
          1316
        ],
        "consequences": [
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Leverage anti-virus products to detect stop operations with known virus."
        ],
        "relatedAttackPatterns": [
          441
        ]
      },
      {
        "id": 457,
        "name": "USB Memory Attacks",
        "description": "An adversary loads malicious code onto a USB memory stick in order to infect any system which the device is plugged in to. USB drives present a significant security risk for business and government agencies. Given the ability to integrate wireless functionality into a USB stick, it is possible to design malware that not only steals confidential data, but sniffs the network, or monitor keystrokes, and then exfiltrates the stolen data off-site via a Wireless connection. Also, viruses can be transmitted via the USB interface without the specific use of a memory stick. The attacks from USB devices are often of such sophistication that experts conclude they are not the work of single individuals, but suggest state sponsorship. These attacks can be performed by an adversary with direct access to a target system or can be executed via means such as USB Drop Attacks.",
        "prerequisites": [
          "Some level of physical access to the device being attacked.",
          "Information pertaining to the target organization on how to best execute a USB Drop Attack."
        ],
        "relatedWeaknesses": [
          1299
        ],
        "mitigations": [
          "Ensure that proper, physical system access is regulated to prevent an adversary from physically connecting a malicious USB device themself.",
          "Use anti-virus and anti-malware tools which can prevent malware from executing if it finds its way onto a target system. Additionally, make sure these tools are regularly updated to contain up-to-date virus and malware signatures.",
          "Do not connect untrusted USB devices to systems connected on an organizational network. Additionally, use an isolated testing machine to validate untrusted devices and confirm malware does not exist."
        ],
        "relatedAttackPatterns": [
          456,
          529
        ]
      },
      {
        "id": 458,
        "name": "Flash Memory Attacks",
        "description": "An adversary inserts malicious logic into a product or technology via flashing the on-board memory with a code-base that contains malicious logic. Various attacks exist against the integrity of flash memory, the most direct being rootkits coded into the BIOS or chipset of a device.",
        "relatedWeaknesses": [
          1282
        ],
        "relatedAttackPatterns": [
          456
        ]
      },
      {
        "id": 459,
        "name": "Creating a Rogue Certification Authority Certificate",
        "description": "An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate certificate signing requests (CSR) that contain collision blocks in their \"to be signed\" parts. The adversary submits one CSR to be signed by a trusted certificate authority then uses the signed blob to make a second certificate appear signed by said certificate authority. Due to the hash collision, both certificates, though different, hash to the same value and so the signed blob works just as well in the second certificate. The net effect is that the adversary's second X.509 certificate, which the Certification Authority has never seen, is now signed and validated by that Certification Authority.",
        "prerequisites": [
          "Certification Authority is using a hash function with insufficient collision resistance to generate the certificate hash to be signed"
        ],
        "relatedWeaknesses": [
          327,
          295,
          290
        ],
        "consequences": [
          "Access Control Authentication Gain Privileges"
        ],
        "mitigations": [
          "Certification Authorities need to stop using deprecated or cryptographically insecure hashing algorithms to hash the certificates that they are about to sign. Instead they should be using stronger hashing functions such as SHA-256 or SHA-512."
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 460,
        "name": "HTTP Parameter Pollution (HPP)",
        "description": "An adversary adds duplicate HTTP GET/POST parameters by injecting query string delimiters. Via HPP it may be possible to override existing hardcoded HTTP parameters, modify the application behaviors, access and, potentially exploit, uncontrollable variables, and bypass input validation checkpoints and WAF rules.",
        "prerequisites": [
          "HTTP protocol is used with some GET/POST parameters passed"
        ],
        "relatedWeaknesses": [
          88,
          147,
          235
        ],
        "mitigations": [
          "Configuration: If using a Web Application Firewall (WAF), filters should be carefully configured to detect abnormal HTTP requests",
          "Design: Perform URL encoding",
          "Implementation: Use strict regular expressions in URL rewriting",
          "Implementation: Beware of multiple occurrences of a parameter in a Query String"
        ],
        "relatedAttackPatterns": [
          15,
          676
        ]
      },
      {
        "id": 461,
        "name": "Web Services API Signature Forgery Leveraging Hash Function Extension Weakness",
        "description": "An adversary utilizes a hash function extension/padding weakness, to modify the parameters passed to the web service requesting authentication by generating their own call in order to generate a legitimate signature hash (as described in the notes), without knowledge of the secret token sometimes provided by the web service.",
        "prerequisites": [
          "Web services check the signature of the API calls",
          "Authentication tokens / secrets are shared between the server and the legitimate client",
          "The API call signature is generated by concatenating the parameter list with the shared secret and hashing the result.",
          "An iterative hash function like MD5 and SHA1 is used.",
          "An attacker is able to intercept or in some other way gain access to the information passed between the legitimate client and the server in order to retrieve the hash value and length of the original message.",
          "The communication channel between the client and the server is not secured via channel security such as TLS"
        ],
        "relatedWeaknesses": [
          328,
          290
        ],
        "mitigations": [
          "Design: Use a secure message authentication code (MAC) function such as an HMAC-SHA1"
        ],
        "relatedAttackPatterns": [
          115
        ]
      },
      {
        "id": 462,
        "name": "Cross-Domain Search Timing",
        "description": "An attacker initiates cross domain HTTP / GET requests and times the server responses. The timing of these responses may leak important information on what is happening on the server. Browser's same origin policy prevents the attacker from directly reading the server responses (in the absence of any other weaknesses), but does not prevent the attacker from timing the responses to requests that the attacker issued cross domain.",
        "prerequisites": [
          "Ability to issue GET / POST requests cross domainJava Script is enabled in the victim's browserThe victim has an active session with the site from which the attacker would like to receive informationThe victim's site does not protect search functionality with cross site request forgery (CSRF) protection"
        ],
        "relatedWeaknesses": [
          385,
          352,
          208
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design: The victim's site could protect all potentially sensitive functionality (e.g. search functions) with cross site request forgery (CSRF) protection and not perform any work on behalf of forged requests",
          "Design: The browser's security model could be fixed to not leak timing information for cross domain requests"
        ],
        "relatedAttackPatterns": [
          54
        ]
      },
      {
        "id": 463,
        "name": "Padding Oracle Crypto Attack",
        "description": "An adversary is able to efficiently decrypt data without knowing the decryption key if a target system leaks data on whether or not a padding error happened while decrypting the ciphertext. A target system that leaks this type of information becomes the padding oracle and an adversary is able to make use of that oracle to efficiently decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). In addition to performing decryption, an adversary is also able to produce valid ciphertexts (i.e., perform encryption) by using the padding oracle, all without knowing the encryption key.",
        "prerequisites": [
          "The decryption routine does not properly authenticate the message / does not verify its integrity prior to performing the decryption operation",
          "The target system leaks data (in some way) on whether a padding error has occurred when attempting to decrypt the ciphertext.",
          "The padding oracle remains available for enough time / for as many requests as needed for the adversary to decrypt the ciphertext."
        ],
        "relatedWeaknesses": [
          209,
          514,
          649,
          347,
          354,
          696
        ],
        "mitigations": [
          "Design: Use a message authentication code (MAC) or another mechanism to perform verification of message authenticity / integrity prior to decryption",
          "Implementation: Do not leak information back to the user as to any cryptography (e.g., padding) encountered during decryption."
        ],
        "relatedAttackPatterns": [
          97
        ]
      },
      {
        "id": 464,
        "name": "Evercookie",
        "description": "An attacker creates a very persistent cookie that stays present even after the user thinks it has been removed. The cookie is stored on the victim's machine in over ten places. When the victim clears the cookie cache via traditional means inside the browser, that operation removes the cookie from certain places but not others. The malicious code then replicates the cookie from all of the places where it was not deleted to all of the possible storage locations once again. So the victim again has the cookie in all of the original storage locations. In other words, failure to delete the cookie in even one location will result in the cookie's resurrection everywhere. The evercookie will also persist across different browsers because certain stores (e.g., Local Shared Objects) are shared between different browsers.",
        "prerequisites": [
          "The victim's browser is not configured to reject all cookiesThe victim visits a website that serves the attackers' evercookie"
        ],
        "relatedWeaknesses": [
          359
        ],
        "mitigations": [
          "Design: Browser's design needs to be changed to limit where cookies can be stored on the client side and provide an option to clear these cookies in all places, as well as another option to stop these cookies from being written in the first place.",
          "Design: Safari browser's private browsing mode is currently effective against evercookies."
        ],
        "relatedAttackPatterns": [
          554
        ]
      },
      {
        "id": 465,
        "name": "Transparent Proxy Abuse",
        "description": "A transparent proxy serves as an intermediate between the client and the internet at large. It intercepts all requests originating from the client and forwards them to the correct location. The proxy also intercepts all responses to the client and forwards these to the client. All of this is done in a manner transparent to the client.",
        "prerequisites": [
          "Transparent proxy is usedVulnerable configuration of network topology involving the transparent proxy (e.g., no NAT happening between the client and the proxy)Execution of malicious Flash or Applet in the victim's browser"
        ],
        "relatedWeaknesses": [
          441
        ],
        "mitigations": [
          "Design: Ensure that the transparent proxy uses an actual network layer IP address for routing requests. On the transparent proxy, disable the use of routing based on address information in the HTTP host header.",
          "Configuration: Disable in the browser the execution of Java Script, Flash, SilverLight, etc."
        ],
        "relatedAttackPatterns": [
          554
        ]
      },
      {
        "id": 466,
        "name": "Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy",
        "description": "An attacker leverages an adversary in the middle attack (CAPEC-94) in order to bypass the same origin policy protection in the victim's browser. This active adversary in the middle attack could be launched, for instance, when the victim is connected to a public WIFI hot spot. An attacker is able to intercept requests and responses between the victim's browser and some non-sensitive website that does not use TLS.",
        "prerequisites": [
          "The victim and the attacker are both in an environment where an active adversary in the middle attack is possible (e.g., public WIFI hot spot)The victim visits at least one website that does not use TLS / SSL"
        ],
        "relatedWeaknesses": [
          300
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Design: Tunnel communications through a secure proxy",
          "Design: Trust level separation for privileged / non privileged interactions (e.g., two different browsers, two different users, two different operating systems, two different virtual machines)"
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 467,
        "name": "Cross Site Identification",
        "description": "An attacker harvests identifying information about a victim via an active session that the victim's browser has with a social networking site. A victim may have the social networking site open in one tab or perhaps is simply using the \"remember me\" feature to keep their session with the social networking site active. An attacker induces a payload to execute in the victim's browser that transparently to the victim initiates a request to the social networking site (e.g., via available social network site APIs) to retrieve identifying information about a victim. While some of this information may be public, the attacker is able to harvest this information in context and may use it for further attacks on the user (e.g., spear phishing).",
        "prerequisites": [
          "The victim has an active session with the social networking site."
        ],
        "relatedWeaknesses": [
          352,
          359
        ],
        "mitigations": [
          "Usage: Users should always explicitly log out from the social networking sites when done using them.",
          "Usage: Users should not open other tabs in the browser when using a social networking site."
        ],
        "relatedAttackPatterns": [
          62
        ]
      },
      {
        "id": 468,
        "name": "Generic Cross-Browser Cross-Domain Theft",
        "description": "An attacker makes use of Cascading Style Sheets (CSS) injection to steal data cross domain from the victim's browser. The attack works by abusing the standards relating to loading of CSS: 1. Send cookies on any load of CSS (including cross-domain) 2. When parsing returned CSS ignore all data that does not make sense before a valid CSS descriptor is found by the CSS parser.",
        "prerequisites": [
          "No new lines can be present in the injected CSS stringProper HTML or URL escaping of the \" and ' characters is not presentThe attacker has control of two injection points: pre-string and post-string"
        ],
        "relatedWeaknesses": [
          707,
          149,
          177,
          838
        ],
        "mitigations": [
          "Design: Prior to performing CSS parsing, require the CSS to start with well-formed CSS when it is a cross-domain load and the MIME type is broken. This is a browser level fix.",
          "Implementation: Perform proper HTML encoding and URL escaping"
        ],
        "relatedAttackPatterns": [
          242
        ]
      },
      {
        "id": 469,
        "name": "HTTP DoS",
        "description": "An attacker performs flooding at the HTTP level to bring down only a particular web application rather than anything listening on a TCP/IP connection. This denial of service attack requires substantially fewer packets to be sent which makes DoS harder to detect. This is an equivalent of SYN flood in HTTP. The idea is to keep the HTTP session alive indefinitely and then repeat that hundreds of times. This attack targets resource depletion weaknesses in web server software. The web server will wait to attacker's responses on the initiated HTTP sessions while the connection threads are being exhausted.",
        "prerequisites": [
          "HTTP protocol is usedWeb server used is vulnerable to denial of service via HTTP flooding"
        ],
        "relatedWeaknesses": [
          770,
          772
        ],
        "mitigations": [
          "Configuration: Configure web server software to limit the waiting period on opened HTTP sessions",
          "Design: Use load balancing mechanisms"
        ],
        "relatedAttackPatterns": [
          227
        ]
      },
      {
        "id": 470,
        "name": "Expanding Control over the Operating System from the Database",
        "description": "An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine. Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks. These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc.",
        "prerequisites": [
          "A vulnerable DBMS is usedA SQL injection exists that gives an attacker access to the database or an attacker has access to the DBMS via other means"
        ],
        "relatedWeaknesses": [
          250,
          89
        ],
        "mitigations": [
          "Design: Follow the defensive programming practices needed to protect an application accessing the database from SQL injection",
          "Configuration: Ensure that the DBMS is patched with the latest security patches",
          "Design: Ensure that the DBMS login used by the application has the lowest possible level of privileges in the DBMS",
          "Design: Ensure that DBMS runs with the lowest possible level of privileges on the host machine and that it runs as a separate user",
          "Usage: Do not use the DBMS machine for anything else other than the database",
          "Usage: Do not place any trust in the database host on the internal network. Authenticate and validate all network activity originating from the database host.",
          "Usage: Use an intrusion detection system to monitor network connections and logs on the database host.",
          "Implementation: Remove / disable all unneeded / unused functions of the DBMS system that may allow an attacker to elevate privileges if compromised"
        ],
        "relatedAttackPatterns": [
          66
        ]
      },
      {
        "id": 471,
        "name": "Search Order Hijacking",
        "description": "An adversary exploits a weakness in an application's specification of external libraries to exploit the functionality of the loader where the process loading the library searches first in the same directory in which the process binary resides and then in other directories. Exploitation of this preferential search order can allow an attacker to make the loading process load the adversary's rogue library rather than the legitimate library. This attack can be leveraged with many different libraries and with many different loading processes. No forensic trails are left in the system's registry or file system that an incorrect library had been loaded.",
        "prerequisites": [
          "Attacker has a mechanism to place its malicious libraries in the needed location on the file system."
        ],
        "relatedWeaknesses": [
          427
        ],
        "mitigations": [
          "Design: Fix the Windows loading process to eliminate the preferential search order by looking for DLLs in the precise location where they are expected",
          "Design: Sign system DLLs so that unauthorized DLLs can be detected."
        ],
        "relatedAttackPatterns": [
          159
        ]
      },
      {
        "id": 472,
        "name": "Browser Fingerprinting",
        "description": "An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser.",
        "prerequisites": [
          "Victim's browser visits a website that contains attacker's Java ScriptJava Script is not disabled in the victim's browser"
        ],
        "relatedWeaknesses": [
          200
        ],
        "mitigations": [
          "Configuration: Disable Java Script in the browser"
        ],
        "relatedAttackPatterns": [
          541
        ]
      },
      {
        "id": 473,
        "name": "Signature Spoof",
        "description": "An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions.",
        "prerequisites": [
          "The victim or victim system is dependent upon a cryptographic signature-based verification system for validation of one or more security events or actions.",
          "The validation can be bypassed via an attacker-provided signature that makes it appear that the legitimate authoritative or reputable source provided the signature."
        ],
        "relatedWeaknesses": [
          20,
          327,
          290
        ],
        "consequences": [
          "Access Control Authentication Gain Privileges"
        ],
        "relatedAttackPatterns": [
          151
        ]
      },
      {
        "id": 474,
        "name": "Signature Spoofing by Key Theft",
        "description": "An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.",
        "prerequisites": [
          "An authoritative or reputable signer is storing their private signature key with insufficient protection."
        ],
        "relatedWeaknesses": [
          522
        ],
        "mitigations": [
          "Restrict access to private keys from non-supervisory accounts",
          "Restrict access to administrative personnel and processes only",
          "Ensure all remote methods are secured",
          "Ensure all services are patched and up to date"
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 475,
        "name": "Signature Spoofing by Improper Validation",
        "description": "An adversary exploits a cryptographic weakness in the signature verification algorithm implementation to generate a valid signature without knowing the key.",
        "prerequisites": [
          "Recipient is using a weak cryptographic signature verification algorithm or a weak implementation of a cryptographic signature verification algorithm, or the configuration of the recipient's application accepts the use of keys generated using cryptographically weak signature verification algorithms."
        ],
        "relatedWeaknesses": [
          347,
          327,
          295
        ],
        "mitigations": [
          "Use programs and products that contain cryptographic elements that have been thoroughly tested for flaws in the signature verification routines."
        ],
        "relatedAttackPatterns": [
          473,
          542
        ]
      },
      {
        "id": 476,
        "name": "Signature Spoofing by Misrepresentation",
        "description": "An attacker exploits a weakness in the parsing or display code of the recipient software to generate a data blob containing a supposedly valid signature, but the signer's identity is falsely represented, which can lead to the attacker manipulating the recipient software or its victim user to perform compromising actions.",
        "prerequisites": [
          "Recipient is using signature verification software that does not clearly indicate potential homographs in the signer identity.Recipient is using signature verification software that contains a parsing vulnerability, or allows control characters in the signer identity field, such that a signature is mistakenly displayed as valid and from a known or authoritative signer."
        ],
        "relatedWeaknesses": [
          290
        ],
        "mitigations": [
          "Ensure the application is using parsing and data display techniques that will accurately display control characters, international symbols and markings, and ultimately recognize potential homograph attacks."
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 477,
        "name": "Signature Spoofing by Mixing Signed and Unsigned Content",
        "description": "An attacker exploits the underlying complexity of a data structure that allows for both signed and unsigned content, to cause unsigned data to be processed as though it were signed data.",
        "prerequisites": [
          "Signer and recipient are using complex data storage structures that allow for a mix between signed and unsigned data",
          "Recipient is using signature verification software that does not maintain separation between signed and unsigned data once the signature has been verified."
        ],
        "relatedWeaknesses": [
          693,
          311,
          319
        ],
        "mitigations": [
          "Ensure the application is fully patched and does not allow the processing of unsigned data as if it is signed data."
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 478,
        "name": "Modification of Windows Service Configuration",
        "description": "An adversary exploits a weakness in access control to modify the execution parameters of a Windows service. The goal of this attack is to execute a malicious binary in place of an existing service.",
        "prerequisites": [
          "The adversary must have the capability to write to the Windows Registry on the targeted system."
        ],
        "relatedWeaknesses": [
          284
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands By altering specific configuration settings for the service, the adversary could run arbitrary code to be executed."
        ],
        "mitigations": [
          "Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation."
        ],
        "relatedAttackPatterns": [
          203
        ]
      },
      {
        "id": 479,
        "name": "Malicious Root Certificate",
        "description": "An adversary exploits a weakness in authorization and installs a new root certificate on a compromised system. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.",
        "prerequisites": [
          "The adversary must have the ability to create a new root certificate."
        ],
        "relatedWeaknesses": [
          284
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 480,
        "name": "Escaping Virtualization",
        "description": "An adversary gains access to an application, service, or device with the privileges of an authorized or privileged user by escaping the confines of a virtualized environment. The adversary is then able to access resources or execute unauthorized code within the host environment, generally with the privileges of the user running the virtualized process. Successfully executing an attack of this type is often the first step in executing more complex attacks.",
        "relatedWeaknesses": [
          693
        ],
        "consequences": [
          "Access Control Authorization Bypass Protection Mechanism",
          "Authorization Execute Unauthorized Commands Run Arbitrary Code",
          "Accountability Authentication Authorization Non-Repudiation Gain Privileges"
        ],
        "mitigations": [
          "Ensure virtualization software is current and up-to-date.",
          "Abide by the least privilege principle to avoid assigning users more privileges than necessary."
        ],
        "relatedAttackPatterns": [
          115
        ]
      },
      {
        "id": 481,
        "name": "Contradictory Destinations in Traffic Routing Schemes",
        "description": "Adversaries can provide contradictory destinations when sending messages. Traffic is routed in networks using the domain names in various headers available at different levels of the OSI model. In a Content Delivery Network (CDN) multiple domains might be available, and if there are contradictory domain names provided it is possible to route traffic to an inappropriate destination. The technique, called Domain Fronting, involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. An alternative technique, called Domainless Fronting, is similar, but the SNI field is left blank.",
        "prerequisites": [
          "An adversary must be aware that their message will be routed using a CDN, and that both of the contradictory domains are served from that CDN.",
          "If the purpose of the Domain Fronting is to hide redirected C2 traffic, the C2 server must have been created in the CDN."
        ],
        "relatedWeaknesses": [
          923
        ],
        "consequences": [
          "Confidentiality Read Data Modify Data"
        ],
        "mitigations": [
          "Monitor connections, checking headers in traffic for contradictory domain names, or empty domain names."
        ],
        "relatedAttackPatterns": [
          161
        ]
      },
      {
        "id": 482,
        "name": "TCP Flood",
        "description": "An adversary may execute a flooding attack using the TCP protocol with the intent to deny legitimate users access to a service. These attacks exploit the weakness within the TCP protocol where there is some state information for the connection the server needs to maintain. This often involves the use of TCP SYN messages.",
        "prerequisites": [
          "This type of an attack requires the ability to generate a large amount of TCP traffic to send to the target port of a functioning server."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "To mitigate this type of an attack, an organization can monitor incoming packets and look for patterns in the TCP traffic to determine if the network is under an attack. The potential target may implement a rate limit on TCP SYN messages which would provide limited capabilities while under attack."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 484,
        "name": "DEPRECATED: XML Client-Side Attack",
        "description": "This attack pattern has been deprecated as it a generalization of CAPEC-230: XML Nested Payloads and CAPEC-231: XML Oversized Payloads. Please refer to these CAPECs going forward."
      },
      {
        "id": 485,
        "name": "Signature Spoofing by Key Recreation",
        "description": "An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.",
        "prerequisites": [
          "An authoritative signer is using a weak method of random number generation or weak signing software that causes key leakage or permits key inference.",
          "An authoritative signer is using a signature algorithm with a direct weakness or with poorly chosen parameters that enable the key to be recovered using signatures from that signer."
        ],
        "relatedWeaknesses": [
          330
        ],
        "mitigations": [
          "Ensure cryptographic elements have been sufficiently tested for weaknesses."
        ],
        "relatedAttackPatterns": [
          473
        ]
      },
      {
        "id": 486,
        "name": "UDP Flood",
        "description": "An adversary may execute a flooding attack using the UDP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. Additionally, firewalls often open a port for each UDP connection destined for a service with an open UDP port, meaning the firewalls in essence save the connection state thus the high packet nature of a UDP flood can also overwhelm resources allocated to the firewall. UDP attacks can also target services like DNS or VoIP which utilize these protocols. Additionally, due to the session-less nature of the UDP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.",
        "prerequisites": [
          "This type of an attack requires the ability to generate a large amount of UDP traffic to send to the desired port of a target service using UDP."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "To mitigate this type of an attack, modern firewalls drop UDP traffic destined for closed ports, and unsolicited UDP reply packets. A variety of other countermeasures such as universal reverse path forwarding and remote triggered black holing(RFC3704) along with modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 487,
        "name": "ICMP Flood",
        "description": "An adversary may execute a flooding attack using the ICMP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. A typical attack involves a victim server receiving ICMP packets at a high rate from a wide range of source addresses. Additionally, due to the session-less nature of the ICMP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.",
        "prerequisites": [
          "This type of an attack requires the ability to generate a large amount of ICMP traffic to send to the target server."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "To mitigate this type of an attack, an organization can enable ingress filtering. Additionally modifications to BGP like black hole routing and sinkhole routing(RFC3882) help mitigate the spoofed source IP nature of these attacks."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 488,
        "name": "HTTP Flood",
        "description": "An adversary may execute a flooding attack using the HTTP protocol with the intent to deny legitimate users access to a service by consuming resources at the application layer such as web services and their infrastructure. These attacks use legitimate session-based HTTP GET requests designed to consume large amounts of a server's resources. Since these are legitimate sessions this attack is very difficult to detect.",
        "prerequisites": [
          "This type of an attack requires the ability to generate a large amount of HTTP traffic to send to a target server."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "Design: Use a Web Application Firewall (WAF) to help filter out malicious traffic. This can be setup with rules to block IP addresses found in IP reputation databases, which contains lists of known bad IP addresses. Analysts should also monitor when the traffic flow becomes abnormally large, and be able to add on-the-fly rules to block malicious traffic. Special care should be taken to ensure low false positive rates in block rules and functionality should be implemented to allow a legitimate user to resume sending traffic if they have been blocked.",
          "Hire a third party provider to implement a Web Application Firewall (WAF) for your application. Third party providers have dedicated resources and expertise that could allow them to update rules and prevent HTTP Floods very quickly.",
          "Design: Use a load balancer such as nginx to prevent small scale HTTP Floods by dispersing traffic between a group of servers.",
          "Implementation: Make a requesting machine solve some kind of challenge before allowing them to send an HTTP request. This could be a captcha or something similar that works to deter bots."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 489,
        "name": "SSL Flood",
        "description": "An adversary may execute a flooding attack using the SSL protocol with the intent to deny legitimate users access to a service by consuming all the available resources on the server side. These attacks take advantage of the asymmetric relationship between the processing power used by the client and the processing power used by the server to create a secure connection. In this manner the attacker can make a large number of HTTPS requests on a low provisioned machine to tie up a disproportionately large number of resources on the server. The clients then continue to keep renegotiating the SSL connection. When multiplied by a large number of attacking machines, this attack can result in a crash or loss of service to legitimate users.",
        "prerequisites": [
          "This type of an attack requires the ability to generate a large amount of SSL traffic to send a target server."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "To mitigate this type of an attack, an organization can create rule based filters to silently drop connections if too many are attempted in a certain time period."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 490,
        "name": "Amplification",
        "description": "An adversary may execute an amplification where the size of a response is far greater than that of the request that generates it. The goal of this attack is to use a relatively few resources to create a large amount of traffic against a target server. To execute this attack, an adversary send a request to a 3rd party service, spoofing the source address to be that of the target server. The larger response that is generated by the 3rd party service is then sent to the target server. By sending a large number of initial requests, the adversary can generate a tremendous amount of traffic directed at the target. The greater the discrepancy in size between the initial request and the final payload delivered to the target increased the effectiveness of this attack.",
        "prerequisites": [
          "This type of an attack requires the existence of a 3rd party service that generates a response that is significantly larger than the request that triggers it."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "To mitigate this type of an attack, an organization can attempt to identify the 3rd party services being used in an active attack and blocking them until the attack ends. This can be accomplished by filtering traffic for suspicious message patterns such as a spike in traffic where each response contains the same large block of data. Care should be taken to prevent false positive rates so legitimate traffic isn't blocked."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 491,
        "name": "Quadratic Data Expansion",
        "description": "An adversary exploits macro-like substitution to cause a denial of service situation due to excessive memory being allocated to fully expand the data. The result of this denial of service could cause the application to freeze or crash. This involves defining a very large entity and using it multiple times in a single entity substitution. CAPEC-197 is a similar attack pattern, but it is easier to discover and defend against. This attack pattern does not perform multi-level substitution and therefore does not obviously appear to consume extensive resources.",
        "prerequisites": [
          "This type of attack requires a server that accepts serialization data which supports substitution and parses the data."
        ],
        "relatedWeaknesses": [
          770
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption Denial of Service"
        ],
        "mitigations": [
          "Design: Use libraries and templates that minimize unfiltered input. Use methods that limit entity expansion and throw exceptions on attempted entity expansion.",
          "Implementation: For XML based data - disable altogether the use of inline DTD schemas when parsing XML objects. If a DTD must be used, normalize, filter and use an allowlist and parse with methods and routines that will detect entity expansion from untrusted sources."
        ],
        "relatedAttackPatterns": [
          230
        ]
      },
      {
        "id": 492,
        "name": "Regular Expression Exponential Blowup",
        "description": "An adversary may execute an attack on a program that uses a poor Regular Expression(Regex) implementation by choosing input that results in an extreme situation for the Regex. A typical extreme situation operates at exponential time compared to the input size. This is due to most implementations using a Nondeterministic Finite Automaton(NFA) state machine to be built by the Regex algorithm since NFA allows backtracking and thus more complex regular expressions.",
        "prerequisites": [
          "This type of an attack requires the ability to identify hosts running a poorly implemented Regex, and the ability to send crafted input to exploit the regular expression."
        ],
        "relatedWeaknesses": [
          400,
          1333
        ],
        "mitigations": [
          "Test custom written Regex with fuzzing to determine if the Regex is a poor one. Add timeouts to processes that handle the Regex logic. If an evil Regex is found rewrite it as a good Regex."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 493,
        "name": "SOAP Array Blowup",
        "description": "An adversary may execute an attack on a web service that uses SOAP messages in communication. By sending a very large SOAP array declaration to the web service, the attacker forces the web service to allocate space for the array elements before they are parsed by the XML parser. The attacker message is typically small in size containing a large array declaration of say 1,000,000 elements and a couple of array elements. This attack targets exhaustion of the memory resources of the web service.",
        "prerequisites": [
          "This type of an attack requires the attacker to know the endpoint of the web service, and be able to reach the endpoint with a malicious SOAP message."
        ],
        "relatedWeaknesses": [
          770
        ],
        "mitigations": [
          "Enforce strict schema validation. The schema should enforce a maximum number of array elements. If the number of maximum array elements can't be limited another validation method should be used. One such method could be comparing the declared number of items in the array with the existing number of elements of the array. If these numbers don't match drop the SOAP packet at the web service layer."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 494,
        "name": "TCP Fragmentation",
        "description": "An adversary may execute a TCP Fragmentation attack against a target with the intention of avoiding filtering rules of network controls, by attempting to fragment the TCP packet such that the headers flag field is pushed into the second fragment which typically is not filtered.",
        "prerequisites": [
          "This type of an attack requires the target system to be running a vulnerable implementation of IP, and the adversary needs to ability to send TCP packets of arbitrary size with crafted data."
        ],
        "relatedWeaknesses": [
          770,
          404
        ],
        "mitigations": [
          "This attack may be mitigated by enforcing rules at the router following the guidance of RFC1858. The essential part of the guidance is creating the following rule \"IF FO=1 and PROTOCOL=TCP then DROP PACKET\" as this mitigated both tiny fragment and overlapping fragment attacks in IPv4. In IPv6 overlapping(RFC5722) additional steps may be required such as deep packet inspection. The delayed fragments may be mitigated by enforcing a timeout on the transmission to receive all packets by a certain time since the first packet is received. According to RFC2460 IPv6 implementations should enforce a rule to discard all fragments if the fragments are not ALL received within 60 seconds of the FIRST arriving fragment."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 495,
        "name": "UDP Fragmentation",
        "description": "An attacker may execute a UDP Fragmentation attack against a target server in an attempt to consume resources such as bandwidth and CPU. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. Typically the attacker will use large UDP packets over 1500 bytes of data which forces fragmentation as ethernet MTU is 1500 bytes. This attack is a variation on a typical UDP flood but it enables more network bandwidth to be consumed with fewer packets. Additionally it has the potential to consume server CPU resources and fill memory buffers associated with the processing and reassembling of fragmented packets.",
        "prerequisites": [
          "This type of an attack requires the attacker to be able to generate fragmented IP traffic containing crafted data."
        ],
        "relatedWeaknesses": [
          770,
          404
        ],
        "mitigations": [
          "This attack may be mitigated by changing default cache sizes to be larger at the OS level. Additionally rules can be enforced to prune the cache with shorter timeouts for packet reassembly as the cache nears capacity."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 496,
        "name": "ICMP Fragmentation",
        "description": "An attacker may execute a ICMP Fragmentation attack against a target with the intention of consuming resources or causing a crash. The attacker crafts a large number of identical fragmented IP packets containing a portion of a fragmented ICMP message. The attacker these sends these messages to a target host which causes the host to become non-responsive. Another vector may be sending a fragmented ICMP message to a target host with incorrect sizes in the header which causes the host to hang.",
        "prerequisites": [
          "This type of an attack requires the target system to be running a vulnerable implementation of IP, and the attacker needs to ability to send arbitrary sized ICMP packets to the target."
        ],
        "relatedWeaknesses": [
          770,
          404
        ],
        "mitigations": [
          "This attack may be mitigated through egress filtering based on ICMP payload so a network is a \"good neighbor\" to other networks. Bad IP implementations become patched, so using the proper version of a browser or OS is recommended."
        ],
        "relatedAttackPatterns": [
          130
        ]
      },
      {
        "id": 497,
        "name": "File Discovery",
        "description": "An adversary engages in probing and exploration activities to determine if common key files exists. Such files often contain configuration and security parameters of the targeted application, system or network. Using this knowledge may often pave the way for more damaging attacks.",
        "prerequisites": [
          "The adversary must know the location of these common key files."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Leverage file protection mechanisms to render these files accessible only to authorized parties."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 498,
        "name": "Probe iOS Screenshots",
        "description": "An adversary examines screenshot images created by iOS in an attempt to obtain sensitive information. This attack targets temporary screenshots created by the underlying OS while the application remains open in the background.",
        "prerequisites": [
          "This type of an attack requires physical access to a device to either excavate the image files (potentially by leveraging a Jailbreak) or view the screenshots through the multitasking switcher (by double tapping the home button on the device)."
        ],
        "relatedWeaknesses": [
          359
        ],
        "mitigations": [
          "To mitigate this type of an attack, an application that may display sensitive information should clear the screen contents before a screenshot is taken. This can be accomplished by setting the key window's hidden property to YES. This code to hide the contents should be placed in both the applicationWillResignActive() and applicationDidEnterBackground() methods."
        ],
        "relatedAttackPatterns": [
          545
        ]
      },
      {
        "id": 499,
        "name": "Android Intent Intercept",
        "description": "An adversary, through a previously installed malicious application, intercepts messages from a trusted Android-based application in an attempt to achieve a variety of different objectives including denial of service, information disclosure, and data injection. An implicit intent sent from a trusted application can be received by any application that has declared an appropriate intent filter. If the intent is not protected by a permission that the malicious application lacks, then the attacker can gain access to the data contained within the intent. Further, the intent can be either blocked from reaching the intended destination, or modified and potentially forwarded along.",
        "prerequisites": [
          "An adversary must be able install a purpose built malicious application onto the Android device and convince the user to execute it. The malicious application is used to intercept implicit intents."
        ],
        "relatedWeaknesses": [
          925
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Availability Resource Consumption"
        ],
        "mitigations": [
          "To mitigate this type of an attack, explicit intents should be used whenever sensitive data is being sent. An explicit intent is delivered to a specific application as declared within the intent, whereas the Android operating system determines who receives an implicit intent which could potentially be a malicious application. If an implicit intent must be used, then it should be assumed that the intent will be received by an unknown application and any response should be treated accordingly. Implicit intents should never be used for inter-application communication."
        ],
        "relatedAttackPatterns": [
          117
        ]
      },
      {
        "id": 500,
        "name": "WebView Injection",
        "description": "An adversary, through a previously installed malicious application, injects code into the context of a web page displayed by a WebView component. Through the injected code, an adversary is able to manipulate the DOM tree and cookies of the page, expose sensitive information, and can launch attacks against the web application from within the web page.",
        "prerequisites": [
          "An adversary must be able install a purpose built malicious application onto the device and convince the user to execute it. The malicious application is designed to target a specific web application and is used to load the target web pages via the WebView component. For example, an adversary may develop an application that interacts with Facebook via WebView and adds a new feature that a user desires. The user would install this 3rd party app instead of the Facebook app."
        ],
        "relatedWeaknesses": [
          749,
          940
        ],
        "mitigations": [
          "The only known mitigation to this type of attack is to keep the malicious application off the system. There is nothing that can be done to the target application to protect itself from a malicious application that has been installed and executed."
        ],
        "relatedAttackPatterns": [
          253
        ]
      },
      {
        "id": 501,
        "name": "Android Activity Hijack",
        "description": "An adversary intercepts an implicit intent sent to launch a Android-based trusted activity and instead launches a counterfeit activity in its place. The malicious activity is then used to mimic the trusted activity's user interface and prompt the target to enter sensitive data as if they were interacting with the trusted activity.",
        "prerequisites": [
          "The adversary must have previously installed the malicious application onto the Android device that will run in place of the trusted activity."
        ],
        "relatedWeaknesses": [
          923
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "To mitigate this type of an attack, explicit intents should be used whenever sensitive data is being sent. An 'explicit intent' is delivered to a specific application as declared within the intent, whereas an 'implicit intent' is directed to an application as defined by the Android operating system. If an implicit intent must be used, then it should be assumed that the intent will be received by an unknown application and any response should be treated accordingly (i.e., with appropriate security controls).",
          "Never use implicit intents for inter-application communication."
        ],
        "relatedAttackPatterns": [
          499,
          173
        ]
      },
      {
        "id": 502,
        "name": "Intent Spoof",
        "description": "An adversary, through a previously installed malicious application, issues an intent directed toward a specific trusted application's component in an attempt to achieve a variety of different objectives including modification of data, information disclosure, and data injection. Components that have been unintentionally exported and made public are subject to this type of an attack. If the component trusts the intent's action without verififcation, then the target application performs the functionality at the adversary's request, helping the adversary achieve the desired negative technical impact.",
        "prerequisites": [
          "An adversary must be able install a purpose built malicious application onto the Android device and convince the user to execute it. The malicious application will be used to issue spoofed intents."
        ],
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "To limit one's exposure to this type of attack, developers should avoid exporting components unless the component is specifically designed to handle requests from untrusted applications. Developers should be aware that declaring an intent filter will automatically export the component, exposing it to public access. Critical, state-changing actions should not be placed in exported components. If a single component handles both inter- and intra-application requests, the developer should consider dividing that component into separate components. If a component must be exported (e.g., to receive system broadcasts), then the component should dynamically check the caller's identity prior to performing any operations. Requiring Signature or SignatureOrSystem permissions is an effective way of limiting a component's exposure to a set of trusted applications. Finally, the return values of exported components can also leak private data, so developers should check the caller's identity prior to returning sensitive values."
        ],
        "relatedAttackPatterns": [
          148
        ]
      },
      {
        "id": 503,
        "name": "WebView Exposure",
        "description": "An adversary, through a malicious web page, accesses application specific functionality by leveraging interfaces registered through WebView's addJavascriptInterface API. Once an interface is registered to WebView through addJavascriptInterface, it becomes global and all pages loaded in the WebView can call this interface.",
        "prerequisites": [
          "This type of an attack requires the adversary to convince the user to load the malicious web page inside the target application. Once loaded, the malicious web page will have the same permissions as the target application and will have access to all registered interfaces. Both the permission and the interface must be in place for the functionality to be exposed."
        ],
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "To mitigate this type of an attack, an application should limit permissions to only those required and should verify the origin of all web content it loads."
        ],
        "relatedAttackPatterns": [
          122
        ]
      },
      {
        "id": 504,
        "name": "Task Impersonation",
        "description": "An adversary, through a previously installed malicious application, impersonates an expected or routine task in an attempt to steal sensitive information or leverage a user's privileges.",
        "prerequisites": [
          "The adversary must already have access to the target system via some means.",
          "A legitimate task must exist that an adversary can impersonate to glean credentials.",
          "The user's privileges allow them to execute certain tasks with elevated privileges."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "consequences": [
          "Access Control Authentication Gain Privileges"
        ],
        "mitigations": [
          "The only known mitigation to this attack is to avoid installing the malicious application on the device. However, to impersonate a running task the malicious application does need the GET_TASKS permission to be able to query the task list, and being suspicious of applications with that permission can help."
        ],
        "relatedAttackPatterns": [
          173
        ]
      },
      {
        "id": 505,
        "name": "Scheme Squatting",
        "description": "An adversary, through a previously installed malicious application, registers for a URL scheme intended for a target application that has not been installed. Thereafter, messages intended for the target application are handled by the malicious application. Upon receiving a message, the malicious application displays a screen that mimics the target application, thereby convincing the user to enter sensitive information. This type of attack is most often used to obtain sensitive information (e.g., credentials) from the user as they think that they are interacting with the intended target application.",
        "mitigations": [
          "The only known mitigation to this attack is to avoid installing the malicious application on the device. Applications usually have to declare the schemes they wish to register, so detecting this during a review is feasible."
        ],
        "relatedAttackPatterns": [
          616
        ]
      },
      {
        "id": 506,
        "name": "Tapjacking",
        "description": "An adversary, through a previously installed malicious application, displays an interface that misleads the user and convinces them to tap on an attacker desired location on the screen. This is often accomplished by overlaying one screen on top of another while giving the appearance of a single interface. There are two main techniques used to accomplish this. The first is to leverage transparent properties that allow taps on the screen to pass through the visible application to an application running in the background. The second is to strategically place a small object (e.g., a button or text field) on top of the visible screen and make it appear to be a part of the underlying application. In both cases, the user is convinced to tap on the screen but does not realize the application that they are interacting with.",
        "prerequisites": [
          "This pattern of attack requires the ability to execute a malicious application on the user's device. This malicious application is used to present the interface to the user and make the attack possible."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "relatedAttackPatterns": [
          173
        ]
      },
      {
        "id": 507,
        "name": "Physical Theft",
        "description": "An adversary gains physical access to a system or device through theft of the item. Possession of a system or device enables a number of unique attacks to be executed and often provides the adversary with an extended timeframe for which to perform an attack. Most protections put in place to secure sensitive information can be defeated when an adversary has physical access and enough time.",
        "prerequisites": [
          "This type of attack requires the existence of a physical target that an adversary believes hosts something of value."
        ],
        "mitigations": [
          "To mitigate this type of attack, physical security techniques such as locks doors, alarms, and monitoring of targets should be implemented."
        ]
      },
      {
        "id": 508,
        "name": "Shoulder Surfing",
        "description": "In a shoulder surfing attack, an adversary observes an unaware individual's keystrokes, screen content, or conversations with the goal of obtaining sensitive information. One motive for this attack is to obtain sensitive information about the target for financial, personal, political, or other gains. From an insider threat perspective, an additional motive could be to obtain system/application credentials or cryptographic keys. Shoulder surfing attacks are accomplished by observing the content \"over the victim's shoulder\", as implied by the name of this attack.",
        "prerequisites": [
          "The adversary typically requires physical proximity to the target's environment, in order to observe their screen or conversation. This may not be the case if the adversary is able to record the target and obtain sensitive information upon review of the recording."
        ],
        "relatedWeaknesses": [
          200,
          359
        ],
        "consequences": [
          "Confidentiality Read Data High"
        ],
        "mitigations": [
          "Be mindful of your surroundings when discussing or viewing sensitive information in public areas.",
          "Pertaining to insider threats, ensure that sensitive information is not displayed to nor discussed around individuals without need-to-know access to said information."
        ],
        "relatedAttackPatterns": [
          651,
          560
        ]
      },
      {
        "id": 509,
        "name": "Kerberoasting",
        "description": "Through the exploitation of how service accounts leverage Kerberos authentication with Service Principal Names (SPNs), the adversary obtains and subsequently cracks the hashed credentials of a service account target to exploit its privileges. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. As an authenticated user, the adversary may request Active Directory and obtain a service ticket with portions encrypted via RC4 with the private key of the authenticated account. By extracting the local ticket and saving it disk, the adversary can brute force the hashed value to reveal the target account credentials.",
        "prerequisites": [
          "The adversary requires access as an authenticated user on the system. This attack pattern relates to elevating privileges.",
          "The adversary requires use of a third-party credential harvesting tool (e.g., Mimikatz).",
          "The adversary requires a brute force tool."
        ],
        "relatedWeaknesses": [
          522,
          308,
          309,
          294,
          263,
          262,
          521
        ],
        "consequences": [
          "Confidentiality Gain Privileges"
        ],
        "mitigations": [
          "Monitor system and domain logs for abnormal access.",
          "Employ a robust password policy for service accounts. Passwords should be of adequate length and complexity, and they should expire after a period of time.",
          "Employ the principle of least privilege: limit service accounts privileges to what is required for functionality and no more.",
          "Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible."
        ],
        "relatedAttackPatterns": [
          652,
          151
        ]
      },
      {
        "id": 510,
        "name": "SaaS User Request Forgery",
        "description": "An adversary, through a previously installed malicious application, performs malicious actions against a third-party Software as a Service (SaaS) application (also known as a cloud based application) by leveraging the persistent and implicit trust placed on a trusted user's session. This attack is executed after a trusted user is authenticated into a cloud service, \"piggy-backing\" on the authenticated session, and exploiting the fact that the cloud service believes it is only interacting with the trusted user. If successful, the actions embedded in the malicious application will be processed and accepted by the targeted SaaS application and executed at the trusted user's privilege level.",
        "prerequisites": [
          "An adversary must be able install a purpose built malicious application onto the trusted user's system and convince the user to execute it while authenticated to the SaaS application."
        ],
        "relatedWeaknesses": [
          346
        ],
        "mitigations": [
          "To limit one's exposure to this type of attack, tunnel communications through a secure proxy service.",
          "Detection of this type of attack can be done through heuristic analysis of behavioral anomalies (a la credit card fraud detection) which can be used to identify inhuman behavioral patterns. (e.g., spidering)"
        ],
        "relatedAttackPatterns": [
          21
        ]
      },
      {
        "id": 511,
        "name": "Infiltration of Software Development Environment",
        "description": "An attacker uses common delivery mechanisms such as email attachments or removable media to infiltrate the IDE (Integrated Development Environment) of a victim manufacturer with the intent of implanting malware allowing for attack control of the victim IDE environment. The attack then uses this access to exfiltrate sensitive data or information, manipulate said data or information, and conceal these actions. This will allow and aid the attack to meet the goal of future compromise of a recipient of the victim's manufactured product further down in the supply chain.",
        "prerequisites": [
          "The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems).",
          "The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration.",
          "The attacker must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure."
        ],
        "mitigations": [
          "Avoid the common delivery mechanisms of adversaries, such as email attachments, which could introduce the malware."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 516,
        "name": "Hardware Component Substitution During Baselining",
        "description": "An adversary with access to system components during allocated baseline development can substitute a maliciously altered hardware component for a baseline component during the product development and research phases. This can lead to adjustments and calibrations being made in the product so that when the final product, now containing the modified component, is deployed it will not perform as designed and be advantageous to the adversary.",
        "prerequisites": [
          "The adversary will need either physical access or be able to supply malicious hardware components to the product development facility."
        ],
        "mitigations": [
          "Hardware attacks are often difficult to detect, as inserted components can be difficult to identify or remain dormant for an extended period of time.",
          "Acquire hardware and hardware components from trusted vendors. Additionally, determine where vendors purchase components or if any components are created/acquired via subcontractors to determine where supply chain risks may exist."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 517,
        "name": "Documentation Alteration to Circumvent Dial-down",
        "description": "An attacker with access to a manufacturer's documentation, which include descriptions of advanced technology and/or specific components' criticality, alters the documents to circumvent dial-down functionality requirements. This alteration would change the interpretation of implementation and manufacturing techniques, allowing for advanced technologies to remain in place even though these technologies might be restricted to certain customers, such as nations on the terrorist watch list, giving the attacker on the receiving end of a shipped product access to an advanced technology that might otherwise be restricted.",
        "prerequisites": [
          "Advanced knowledge of internal software and hardware components within manufacturer's development environment.",
          "Access to the manufacturer's documentation."
        ],
        "mitigations": [
          "Digitize documents and cryptographically sign them to verify authenticity.",
          "Password protect documents and make them read-only for unauthorized users.",
          "Avoid emailing important documents and configurations.",
          "Ensure deleted files are actually deleted.",
          "Maintain backups of the document for recovery and verification."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 518,
        "name": "Documentation Alteration to Produce Under-performing Systems",
        "description": "An attacker with access to a manufacturer's documentation alters the descriptions of system capabilities with the intent of causing errors in derived system requirements, impacting the overall effectiveness and capability of the system, allowing an attacker to take advantage of the introduced system capability flaw once the system is deployed.",
        "prerequisites": [
          "Advanced knowledge of software and hardware capabilities of a manufacturer's product.",
          "Access to the manufacturer's documentation."
        ],
        "mitigations": [
          "Digitize documents and cryptographically sign them to verify authenticity.",
          "Password protect documents and make them read-only for unauthorized users.",
          "Avoid emailing important documents and configurations.",
          "Ensure deleted files are actually deleted.",
          "Maintain backups of the document for recovery and verification.",
          "Separate need-to-know information from system configuration information depending on the user."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 519,
        "name": "Documentation Alteration to Cause Errors in System Design",
        "description": "An attacker with access to a manufacturer's documentation containing requirements allocation and software design processes maliciously alters the documentation in order to cause errors in system design. This allows the attacker to take advantage of a weakness in a deployed system of the manufacturer for malicious purposes.",
        "prerequisites": [
          "Advanced knowledge of software capabilities of a manufacturer's product.",
          "Access to the manufacturer's documentation."
        ],
        "mitigations": [
          "Digitize documents and cryptographically sign them to verify authenticity.",
          "Password protect documents and make them read-only for unauthorized users.",
          "Avoid emailing important documents and configurations.",
          "Ensure deleted files are actually deleted.",
          "Maintain multiple instances of the document across different privileged users for recovery and verification."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 520,
        "name": "Counterfeit Hardware Component Inserted During Product Assembly",
        "description": "An adversary with either direct access to the product assembly process or to the supply of subcomponents used in the product assembly process introduces counterfeit hardware components into product assembly. The assembly containing the counterfeit components results in a system specifically designed for malicious purposes.",
        "prerequisites": [
          "The adversary will need either physical access or be able to supply malicious hardware components to the product development facility."
        ],
        "mitigations": [
          "Hardware attacks are often difficult to detect, as inserted components can be difficult to identify or remain dormant for an extended period of time.",
          "Acquire hardware and hardware components from trusted vendors. Additionally, determine where vendors purchase components or if any components are created/acquired via subcontractors to determine where supply chain risks may exist."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 521,
        "name": "Hardware Design Specifications Are Altered",
        "description": "An attacker with access to a manufacturer's hardware manufacturing process documentation alters the design specifications, which introduces flaws advantageous to the attacker once the system is deployed.",
        "prerequisites": [
          "Advanced knowledge of hardware capabilities of a manufacturer's product.",
          "Access to the manufacturer's documentation."
        ],
        "mitigations": [
          "Digitize documents and cryptographically sign them to verify authenticity.",
          "Password protect documents and make them read-only for unauthorized users.",
          "Avoid emailing important documents and configurations.",
          "Ensure deleted files are actually deleted.",
          "Maintain backups of the document for recovery and verification.",
          "Separate need-to-know information from system configuration information depending on the user."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 522,
        "name": "Malicious Hardware Component Replacement",
        "description": "An adversary replaces legitimate hardware in the system with faulty counterfeit or tampered hardware in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.",
        "prerequisites": [
          "Physical access to the system after it has left the manufacturer but before it is deployed at the victim location."
        ],
        "mitigations": [
          "Ensure that all contractors and sub-suppliers use trusted means of shipping (e.g., bonded/cleared/vetted and insured couriers) to ensure that components, once purchased, are not subject to compromise during their delivery.",
          "Prevent or detect tampering with critical hardware or firmware components while in transit through use of state-of-the-art anti-tamper devices.",
          "Use tamper-resistant and tamper-evident packaging when shipping critical components (e.g., plastic coating for circuit boards, tamper tape, paint, sensors, and/or seals for cases and containers) and inspect received system components for evidence of tampering."
        ],
        "relatedAttackPatterns": [
          439
        ]
      },
      {
        "id": 523,
        "name": "Malicious Software Implanted",
        "description": "An attacker implants malicious software into the system in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.",
        "prerequisites": [
          "Physical access to the system after it has left the manufacturer but before it is deployed at the victim location."
        ],
        "mitigations": [
          "Deploy strong code integrity policies to allow only authorized apps to run.",
          "Use endpoint detection and response solutions that can automaticalkly detect and remediate suspicious activities.",
          "Maintain a highly secure build and update infrastructure by immediately applying security patches for OS and software, implementing mandatory integrity controls to ensure only trusted tools run, and requiring multi-factor authentication for admins.",
          "Require SSL for update channels and implement certificate transparency based verification.",
          "Sign everything, including configuration files, XML files and packages.",
          "Develop an incident response process, disclose supply chain incidents and notify customers with accurate and timely information."
        ],
        "relatedAttackPatterns": [
          439
        ]
      },
      {
        "id": 524,
        "name": "Rogue Integration Procedures",
        "description": "An attacker alters or establishes rogue processes in an integration facility in order to insert maliciously altered components into the system. The attacker would then supply the malicious components. This would allow for malicious disruption or additional compromise when the system is deployed.",
        "prerequisites": [
          "Physical access to an integration facility that prepares the system before it is deployed at the victim location."
        ],
        "mitigations": [
          "Deploy strong code integrity policies to allow only authorized apps to run.",
          "Use endpoint detection and response solutions that can automaticalkly detect and remediate suspicious activities.",
          "Maintain a highly secure build and update infrastructure by immediately applying security patches for OS and software, implementing mandatory integrity controls to ensure only trusted tools run, and requiring multi-factor authentication for admins.",
          "Require SSL for update channels and implement certificate transparency based verification.",
          "Sign everything, including configuration files, XML files and packages.",
          "Develop an incident response process, disclose supply chain incidents and notify customers with accurate and timely information.",
          "Maintain strong physical system access controls and monitor networks and physical facilities for insider threats."
        ],
        "relatedAttackPatterns": [
          439
        ]
      },
      {
        "id": 528,
        "name": "XML Flood",
        "description": "An adversary may execute a flooding attack using XML messages with the intent to deny legitimate users access to a web service. These attacks are accomplished by sending a large number of XML based requests and letting the service attempt to parse each one. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing.",
        "prerequisites": [
          "The target must receive and process XML transactions.",
          "An adverssary must possess the ability to generate a large amount of XML based messages to send to the target service."
        ],
        "relatedWeaknesses": [
          770
        ],
        "consequences": [
          "Availability Resource Consumption"
        ],
        "mitigations": [
          "Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval.",
          "Implementation: Provide for network flow control and traffic shaping to control access to the resources."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 529,
        "name": "Malware-Directed Internal Reconnaissance",
        "description": "Adversary uses malware or a similarly controlled application installed inside an organizational perimeter to gather information about the composition, configuration, and security mechanisms of a targeted application, system or network.",
        "prerequisites": [
          "The adversary must have internal, logical access to the target network and system."
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Keep patches up to date by installing weekly or daily if possible.",
          "Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 530,
        "name": "Provide Counterfeit Component",
        "description": "An attacker provides a counterfeit component during the procurement process of a lower-tier component supplier to a sub-system developer or integrator, which is then built into the system being upgraded or repaired by the victim, allowing the attacker to cause disruption or additional compromise.",
        "prerequisites": [
          "Advanced knowledge about the target system and sub-components."
        ],
        "mitigations": [
          "There are various methods to detect if the component is a counterfeit. See section II of [REF-703] for many techniques."
        ],
        "relatedAttackPatterns": [
          531
        ]
      },
      {
        "id": 531,
        "name": "Hardware Component Substitution",
        "description": "An attacker substitutes out a tested and approved hardware component for a maliciously-altered hardware component. This type of attack is carried out directly on the system, enabling the attacker to then cause disruption or additional compromise.",
        "prerequisites": [
          "Physical access to the system or the integration facility where hardware components are kept."
        ],
        "relatedAttackPatterns": [
          534
        ]
      },
      {
        "id": 532,
        "name": "Altered Installed BIOS",
        "description": "An attacker with access to download and update system software sends a maliciously altered BIOS to the victim or victim supplier/integrator, which when installed allows for future exploitation.",
        "prerequisites": [
          "Advanced knowledge about the installed target system design.",
          "Advanced knowledge about the download and update installation processes.",
          "Access to the download and update system(s) used to deliver BIOS images."
        ],
        "mitigations": [
          "Deploy strong code integrity policies to allow only authorized apps to run.",
          "Use endpoint detection and response solutions that can automaticalkly detect and remediate suspicious activities.",
          "Maintain a highly secure build and update infrastructure by immediately applying security patches for OS and software, implementing mandatory integrity controls to ensure only trusted tools run, and requiring multi-factor authentication for admins.",
          "Require SSL for update channels and implement certificate transparency based verification.",
          "Sign update packages and BIOS patches.",
          "Use hardware security modules/trusted platform modules to verify authenticity using hardware-based cryptography."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 533,
        "name": "Malicious Manual Software Update",
        "description": "An attacker introduces malicious code to the victim's system by altering the payload of a software update, allowing for additional compromise or site disruption at the victim location. These manual, or user-assisted attacks, vary from requiring the user to download and run an executable, to as streamlined as tricking the user to click a URL. Attacks which aim at penetrating a specific network infrastructure often rely upon secondary attack methods to achieve the desired impact. Spamming, for example, is a common method employed as an secondary attack vector. Thus the attacker has in their arsenal a choice of initial attack vectors ranging from traditional SMTP/POP/IMAP spamming and its varieties, to web-application mechanisms which commonly implement both chat and rich HTML messaging within the user interface.",
        "prerequisites": [
          "Advanced knowledge about the download and update installation processes.",
          "Advanced knowledge about the deployed system and its various software subcomponents and processes."
        ],
        "relatedWeaknesses": [
          494
        ],
        "mitigations": [
          "Only accept software updates from an official source."
        ],
        "relatedAttackPatterns": [
          186
        ]
      },
      {
        "id": 534,
        "name": "Malicious Hardware Update",
        "description": "An adversary introduces malicious hardware during an update or replacement procedure, allowing for additional compromise or site disruption at the victim location. After deployment, it is not uncommon for upgrades and replacements to occur involving hardware and various replaceable parts. These upgrades and replacements are intended to correct defects, provide additional features, and to replace broken or worn-out parts. However, by forcing or tricking the replacement of a good component with a defective or corrupted component, an adversary can leverage known defects to obtain a desired malicious impact.",
        "relatedAttackPatterns": [
          440
        ]
      },
      {
        "id": 535,
        "name": "Malicious Gray Market Hardware",
        "description": "An attacker maliciously alters hardware components that will be sold on the gray market, allowing for victim disruption and compromise when the victim needs replacement hardware components for systems where the parts are no longer in regular supply from original suppliers, or where the hardware components from the attacker seems to be a great benefit from a cost perspective.",
        "prerequisites": [
          "Physical access to a gray market reseller's hardware components supply, or the ability to appear as a gray market reseller to the victim's buyer."
        ],
        "mitigations": [
          "Purchase only from authorized resellers.",
          "Validate serial numbers from multiple sources"
        ],
        "relatedAttackPatterns": [
          531
        ]
      },
      {
        "id": 536,
        "name": "Data Injected During Configuration",
        "description": "An attacker with access to data files and processes on a victim's system injects malicious data into critical operational data during configuration or recalibration, causing the victim's system to perform in a suboptimal manner that benefits the adversary.",
        "prerequisites": [
          "The attacker must have previously compromised the victim's systems or have physical access to the victim's systems.",
          "Advanced knowledge of software and hardware capabilities of a manufacturer's product."
        ],
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Ensure that proper access control is implemented on all systems to prevent unauthorized access to system files and processes."
        ],
        "relatedAttackPatterns": [
          176
        ]
      },
      {
        "id": 537,
        "name": "Infiltration of Hardware Development Environment",
        "description": "An adversary, leveraging the ability to manipulate components of primary support systems and tools within the development and production environments, inserts malicious software within the hardware and/or firmware development environment. The infiltration purpose is to alter developed hardware components in a system destined for deployment at the victim's organization, for the purpose of disruption or further compromise.",
        "prerequisites": [
          "The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems).",
          "The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration.",
          "The adversary must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure."
        ],
        "mitigations": [
          "Verify software downloads and updates to ensure they have not been modified be adversaries",
          "Leverage antivirus tools to detect known malware",
          "Do not download software from untrusted sources",
          "Educate designers, developers, engineers, etc. on social engineering attacks to avoid downloading malicious software via attacks such as phishing attacks"
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 538,
        "name": "Open-Source Library Manipulation",
        "description": "Adversaries implant malicious code in open source software (OSS) libraries to have it widely distributed, as OSS is commonly downloaded by developers and other users to incorporate into software development projects. The adversary can have a particular system in mind to target, or the implantation can be the first stage of follow-on attacks on many systems.",
        "prerequisites": [
          "Access to the open source code base being used by the manufacturer in a system being developed or currently deployed at a victim location."
        ],
        "relatedWeaknesses": [
          494,
          829
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 539,
        "name": "ASIC With Malicious Functionality",
        "description": "An attacker with access to the development environment process of an application-specific integrated circuit (ASIC) for a victim system being developed or maintained after initial deployment can insert malicious functionality into the system for the purpose of disruption or further compromise.",
        "prerequisites": [
          "The attacker must have working knowledge of some if not all of the components involved in the target system as well as the infrastructure and development environment of the manufacturer.",
          "Advanced knowledge about the ASIC installed within the target system."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 540,
        "name": "Overread Buffers",
        "description": "An adversary attacks a target by providing input that causes an application to read beyond the boundary of a defined buffer. This typically occurs when a value influencing where to start or stop reading is set to reflect positions outside of the valid memory location of the buffer. This type of attack may result in exposure of sensitive information, a system crash, or arbitrary code execution.",
        "prerequisites": [
          "For this type of attack to be successful, a few prerequisites must be met. First, the targeted software must be written in a language that enables fine grained buffer control. (e.g., c, c++) Second, the targeted software must actually perform buffer operations and inadequately perform bounds-checking on those buffer operations. Finally, the adversary must have the capability to influence the input that guides these buffer operations."
        ],
        "relatedWeaknesses": [
          125
        ],
        "consequences": [
          "Confidentiality Read Data By reading outside the boundary of the intended buffer, the adversary is potentially able to see any data that is stored on the disk. This could include secret keys, personal information, and sensitive files.",
          "Availability Unreliable Execution Depending on the use of the target buffer, an application or system crash can be achieved."
        ],
        "relatedAttackPatterns": [
          123
        ]
      },
      {
        "id": 541,
        "name": "Application Fingerprinting",
        "description": "An adversary engages in fingerprinting activities to determine the type or version of an application installed on a remote target.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          204,
          205,
          208
        ],
        "relatedAttackPatterns": [
          224
        ]
      },
      {
        "id": 542,
        "name": "Targeted Malware",
        "description": "An adversary develops targeted malware that takes advantage of a known vulnerability in an organizational information technology environment. The malware crafted for these attacks is based specifically on information gathered about the technology environment. Successfully executing the malware enables an adversary to achieve a wide variety of negative technical impacts.",
        "relatedAttackPatterns": [
          549,
          662
        ]
      },
      {
        "id": 543,
        "name": "Counterfeit Websites",
        "description": "Adversary creates duplicates of legitimate websites. When users visit a counterfeit site, the site can gather information or upload malware.",
        "prerequisites": [
          "None"
        ],
        "relatedAttackPatterns": [
          194,
          89
        ]
      },
      {
        "id": 544,
        "name": "Counterfeit Organizations",
        "description": "An adversary creates a false front organizations with the appearance of a legitimate supplier in the critical life cycle path that then injects corrupted/malicious information system components into the organizational supply chain.",
        "prerequisites": [
          "None"
        ],
        "relatedAttackPatterns": [
          194
        ]
      },
      {
        "id": 545,
        "name": "Pull Data from System Resources",
        "description": "An adversary who is authorized or has the ability to search known system resources, does so with the intention of gathering useful information. System resources include files, memory, and other aspects of the target system. In this pattern of attack, the adversary does not necessarily know what they are going to find when they start pulling data. This is different than CAPEC-150 where the adversary knows what they are looking for due to the common location.",
        "relatedWeaknesses": [
          1239,
          1243,
          1258,
          1266,
          1272,
          1278,
          1323,
          1258,
          1330
        ],
        "relatedAttackPatterns": [
          116
        ]
      },
      {
        "id": 546,
        "name": "Incomplete Data Deletion in a Multi-Tenant Environment",
        "description": "An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there.",
        "prerequisites": [
          "The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system."
        ],
        "relatedWeaknesses": [
          284,
          1266,
          1272
        ],
        "consequences": [
          "Confidentiality Read Data A successful attack that probes application memory will compromise the confidentiality of that data."
        ],
        "mitigations": [
          "Cloud providers should completely delete data to render it irrecoverable and inaccessible from any layer and component of infrastructure resources.",
          "Deletion of data should be completed promptly when requested."
        ],
        "relatedAttackPatterns": [
          545
        ]
      },
      {
        "id": 547,
        "name": "Physical Destruction of Device or Component",
        "description": "An adversary conducts a physical attack a device or component, destroying it such that it no longer functions as intended.",
        "relatedAttackPatterns": [
          607
        ]
      },
      {
        "id": 548,
        "name": "Contaminate Resource",
        "description": "An adversary contaminates organizational information systems (including devices and networks) by causing them to handle information of a classification/sensitivity for which they have not been authorized. When this happens, the contaminated information system, device, or network must be brought offline to investigate and mitigate the data spill, which denies availability of the system until the investigation is complete.",
        "prerequisites": [
          "The adversary needs to have real or fake classified/sensitive information to place on a system"
        ],
        "consequences": [
          "Availability Resource Consumption Denial of Service",
          "Confidentiality Read Data Victims of the attack can be exposed to classified materials"
        ],
        "mitigations": [
          "Properly safeguard classified/sensitive data. This includes training cleared individuals to ensure they are handling and disposing of this data properly, as well as ensuring systems only handle information of the classification level they are designed for.",
          "Design systems with redundancy in mind. This could mean creating backing servers that could be switched over to in the event that a server has to be taken down for investigation.",
          "Have a planned and efficient response plan to limit the amount of time a system is offline while the contamination is investigated."
        ],
        "relatedAttackPatterns": [
          607
        ]
      },
      {
        "id": 549,
        "name": "Local Execution of Code",
        "description": "An adversary installs and executes malicious code on the target system in an effort to achieve a negative technical impact. Examples include rootkits, ransomware, spyware, adware, and others.",
        "prerequisites": [
          "Knowledge of the target system's vulnerabilities that can be capitalized on with malicious code.The adversary must be able to place the malicious code on the target system."
        ],
        "relatedWeaknesses": [
          829
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Integrity Availability Other Depending on the type of code executed by the adversary, the consequences of this attack pattern can vary widely."
        ],
        "mitigations": [
          "Employ robust cybersecurity training for all employees.",
          "Implement system antivirus software that scans all attachments before opening them.",
          "Regularly patch all software.",
          "Execute all suspicious files in a sandbox environment."
        ]
      },
      {
        "id": 550,
        "name": "Install New Service",
        "description": "When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Limit privileges of user accounts so new service creation can only be performed by authorized administrators."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 551,
        "name": "Modify Existing Service",
        "description": "When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used.",
        "relatedWeaknesses": [
          284,
          522
        ],
        "mitigations": [
          "Limit privileges of user accounts so service changes can only be performed by authorized administrators. Also monitor any service changes that may occur inadvertently."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 552,
        "name": "Install Rootkit",
        "description": "An adversary exploits a weakness in authentication to install malware that alters the functionality and information provide by targeted operating system API calls. Often referred to as rootkits, it is often used to hide the presence of programs, files, network connections, services, drivers, and other system components.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Prevent adversary access to privileged accounts necessary to install rootkits."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 554,
        "name": "Functionality Bypass",
        "description": "An adversary attacks a system by bypassing some or all functionality intended to protect it. Often, a system user will think that protection is in place, but the functionality behind those protections has been disabled by the adversary.",
        "relatedWeaknesses": [
          424,
          1299
        ]
      },
      {
        "id": 555,
        "name": "Remote Services with Stolen Credentials",
        "description": "This pattern of attack involves an adversary that uses stolen credentials to leverage remote services such as RDP, telnet, SSH, and VNC to log into a system. Once access is gained, any number of malicious activities could be performed.",
        "relatedWeaknesses": [
          522,
          308,
          309,
          294,
          263,
          262,
          521
        ],
        "mitigations": [
          "Disable RDP, telnet, SSH and enable firewall rules to block such traffic. Limit users and accounts that have remote interactive login access. Remove the Local Administrators group from the list of groups allowed to login through RDP. Limit remote user permissions. Use remote desktop gateways and multifactor authentication for remote logins."
        ],
        "relatedAttackPatterns": [
          560,
          151
        ]
      },
      {
        "id": 556,
        "name": "Replace File Extension Handlers",
        "description": "When a file is opened, its file handler is checked to determine which program opens the file. File handlers are configuration properties of many operating systems. Applications can modify the file handler for a given file extension to call an arbitrary program when a file with the given extension is opened.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Inspect registry for changes. Limit privileges of user accounts so changes to default file handlers can only be performed by authorized administrators."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 557,
        "name": "DEPRECATED: Schedule Software To Run",
        "description": "This CAPEC has been deprecated because it is not directly related to a weakness, social engineering, supply chains, or a physical-based attack."
      },
      {
        "id": 558,
        "name": "Replace Trusted Executable",
        "description": "An adversary exploits weaknesses in privilege management or access control to replace a trusted executable with a malicious version and enable the execution of malware when that trusted executable is called.",
        "relatedWeaknesses": [
          284
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 559,
        "name": "Orbital Jamming",
        "description": "In this attack pattern, the adversary sends disruptive signals at a target satellite using a rogue uplink station to disrupt the intended transmission. Those within the satellite's footprint are prevented from reaching the satellite's targeted or neighboring channels. The satellite's footprint size depends upon its position in the sky; higher orbital satellites cover multiple continents.",
        "prerequisites": [
          "This attack requires the knowledge of the satellite's coordinates for targeting."
        ],
        "consequences": [
          "Availability Other A successful attack will deny the availability of the satellite communications for authorized users."
        ],
        "relatedAttackPatterns": [
          601
        ]
      },
      {
        "id": 560,
        "name": "Use of Known Domain Credentials",
        "description": "An adversary guesses or obtains (i.e. steals or purchases) legitimate credentials (e.g. userID/password) to achieve authentication and to perform authorized actions under the guise of an authenticated user or service.",
        "prerequisites": [
          "The system/application uses one factor password based authentication, SSO, and/or cloud-based authentication.",
          "The system/application does not have a sound password policy that is being enforced.",
          "The system/application does not implement an effective password throttling mechanism.",
          "The adversary possesses a list of known user accounts and corresponding passwords that may exist on the target."
        ],
        "relatedWeaknesses": [
          522,
          307,
          308,
          309,
          262,
          263,
          654,
          1273
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network.",
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Ensure users are not reusing username/password combinations for multiple systems, applications, or services.",
          "Do not reuse local administrator account credentials across systems.",
          "Deny remote use of local admin credentials to log into domain systems.",
          "Do not allow accounts to be a local administrator on more than one system.",
          "Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.",
          "Monitor system and domain logs for abnormal credential access."
        ],
        "relatedAttackPatterns": [
          151
        ]
      },
      {
        "id": 561,
        "name": "Windows Admin Shares with Stolen Credentials",
        "description": "An adversary guesses or obtains (i.e. steals or purchases) legitimate Windows administrator credentials (e.g. userID/password) to access Windows Admin Shares on a local machine or within a Windows domain.",
        "prerequisites": [
          "The system/application is connected to the Windows domain.",
          "The target administrative share allows remote use of local admin credentials to log into domain systems.",
          "The adversary possesses a list of known Windows administrator credentials that exist on the target domain."
        ],
        "relatedWeaknesses": [
          522,
          308,
          309,
          294,
          263,
          262,
          521
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Do not reuse local administrator account credentials across systems.",
          "Deny remote use of local admin credentials to log into domain systems.",
          "Do not allow accounts to be a local administrator on more than one system."
        ],
        "relatedAttackPatterns": [
          653,
          151,
          165,
          549,
          545
        ]
      },
      {
        "id": 562,
        "name": "Modify Shared File",
        "description": "An adversary manipulates the files in a shared location by adding malicious programs, scripts, or exploit code to valid content. Once a user opens the shared content, the tainted content is executed.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Disallow shared content. Protect shared folders by minimizing users that have write access. Use utilities that mitigate exploitation like the Microsoft Enhanced Mitigation Experience Toolkit (EMET) to prevent exploits from being run."
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 563,
        "name": "Add Malicious File to Shared Webroot",
        "description": "An adversaries may add malicious content to a website through the open file share and then browse to that content with a web browser to cause the server to execute the content. The malicious content will typically run under the context and permissions of the web server process, often resulting in local system or administrative privileges depending on how the web server is configured.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Ensure proper permissions on directories that are accessible through a web server. Disallow remote access to the web root. Disable execution on directories within the web root. Ensure that permissions of the web server process are only what is required by not using built-in accounts and instead create specific accounts to limit unnecessary access or permissions overlap across multiple systems."
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 564,
        "name": "Run Software at Logon",
        "description": "Operating system allows logon scripts to be run whenever a specific user or users logon to a system. If adversaries can access these scripts, they may insert additional code into the logon script. This code can allow them to maintain persistence or move laterally within an enclave because it is executed every time the affected user or users logon to a computer. Modifying logon scripts can effectively bypass workstation and enclave firewalls. Depending on the access configuration of the logon scripts, either local credentials or a remote administrative account may be necessary.",
        "relatedWeaknesses": [
          284
        ],
        "mitigations": [
          "Restrict write access to logon scripts to necessary administrators."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 565,
        "name": "Password Spraying",
        "description": "In a Password Spraying attack, an adversary tries a small list (e.g. 3-5) of common or expected passwords, often matching the target's complexity policy, against a known list of user accounts to gain valid credentials. The adversary tries a particular password for each user account, before moving onto the next password in the list. This approach assists the adversary in remaining undetected by avoiding rapid or frequent account lockouts. The adversary may then reattempt the process with additional passwords, once enough time has passed to prevent inducing a lockout.",
        "prerequisites": [
          "The system/application uses one factor password based authentication.",
          "The system/application does not have a sound password policy that is being enforced.",
          "The system/application does not implement an effective password throttling mechanism.",
          "The adversary possesses a list of known user accounts on the target system/application."
        ],
        "relatedWeaknesses": [
          521,
          262,
          263,
          654,
          307,
          308,
          309
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.",
          "Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network."
        ],
        "relatedAttackPatterns": [
          49,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 566,
        "name": "DEPRECATED: Dump Password Hashes",
        "description": "This CAPEC has been deprecated because of is not directly related to a weakness, social engineering, supply chains, or a physical-based attack."
      },
      {
        "id": 567,
        "name": "DEPRECATED: Obtain Data via Utilities",
        "description": "This CAPEC has been deprecated because it is not directly related to a weakness, social engineering, supply chains, or a physical-based attack."
      },
      {
        "id": 568,
        "name": "Capture Credentials via Keylogger",
        "description": "An adversary deploys a keylogger in an effort to obtain credentials directly from a system's user. After capturing all the keystrokes made by a user, the adversary can analyze the data and determine which string are likely to be passwords or other credential related information.",
        "prerequisites": [
          "The ability to install the keylogger, either in person or remote."
        ],
        "mitigations": [
          "Strong physical security can help reduce the ability of an adversary to install a keylogger."
        ],
        "relatedAttackPatterns": [
          569,
          600,
          151,
          560,
          561,
          653
        ]
      },
      {
        "id": 569,
        "name": "Collect Data as Provided by Users",
        "description": "An attacker leverages a tool, device, or program to obtain specific information as provided by a user of the target system. This information is often needed by the attacker to launch a follow-on attack. This attack is different than Social Engineering as the adversary is not tricking or deceiving the user. Instead the adversary is putting a mechanism in place that captures the information that a user legitimately enters into a system. Deploying a keylogger, performing a UAC prompt, or wrapping the Windows default credential provider are all examples of such interactions.",
        "relatedAttackPatterns": [
          116
        ]
      },
      {
        "id": 570,
        "name": "DEPRECATED: Signature-Based Avoidance",
        "description": "This CAPEC has been deprecated because it is not directly related to a weakness, social engineering, supply chains, or a physical-based attack."
      },
      {
        "id": 571,
        "name": "Block Logging to Central Repository",
        "description": "An adversary prevents host-generated logs being delivered to a central location in an attempt to hide indicators of compromise.",
        "relatedAttackPatterns": [
          161
        ]
      },
      {
        "id": 572,
        "name": "Artificially Inflate File Sizes",
        "description": "An adversary modifies file contents by adding data to files for several reasons. Many different attacks could “follow” this pattern resulting in numerous outcomes. Adding data to a file could also result in a Denial of Service condition for devices with limited storage capacity.",
        "consequences": [
          "Availability Resource Consumption Denial of Service",
          "Integrity Modify Data"
        ],
        "relatedAttackPatterns": [
          165
        ]
      },
      {
        "id": 573,
        "name": "Process Footprinting",
        "description": "An adversary exploits functionality meant to identify information about the currently running processes on the target system to an authorized user. By knowing what processes are running on the target system, the adversary can learn about the target environment as a means towards further malicious behavior.",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Identify programs that may be used to acquire process information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 574,
        "name": "Services Footprinting",
        "description": "An adversary exploits functionality meant to identify information about the services on the target system to an authorized user. By knowing what services are registered on the target system, the adversary can learn about the target environment as a means towards further malicious behavior. Depending on the operating system, commands that can obtain services information include \"sc\" and \"tasklist/svc\" using Tasklist, and \"net start\" using Net.",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Identify programs that may be used to acquire service information and block them by using a software restriction policy or tools that restrict program execution by uaing a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 575,
        "name": "Account Footprinting",
        "description": "An adversary exploits functionality meant to identify information about the domain accounts and their permissions on the target system to an authorized user. By knowing what accounts are registered on the target system, the adversary can inform further and more targeted malicious behavior. Example Windows commands which can acquire this information are: \"net user\" and \"dsquery\".",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Identify programs that may be used to acquire account information and block them by using a software restriction policy or tools that restrict program execution by uysing a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 576,
        "name": "Group Permission Footprinting",
        "description": "An adversary exploits functionality meant to identify information about user groups and their permissions on the target system to an authorized user. By knowing what users/permissions are registered on the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command which can list local groups is \"net localgroup\".",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Identify programs (such as \"net\") that may be used to enumerate local group permissions and block them by using a software restriction Policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 577,
        "name": "Owner Footprinting",
        "description": "An adversary exploits functionality meant to identify information about the primary users on the target system to an authorized user. They may do this, for example, by reviewing logins or file modification times. By knowing what owners use the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command that may accomplish this is \"dir /A ntuser.dat\". Which will display the last modified time of a user's ntuser.dat file when run within the root folder of a user. This time is synonymous with the last time that user was logged in.",
        "prerequisites": [
          "The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.",
          "Administrator permissions are required to view the home folder of other users."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism Hide Activities"
        ],
        "mitigations": [
          "Ensure that proper permissions on files and folders are enacted to limit accessibility."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 578,
        "name": "Disable Security Software",
        "description": "An adversary exploits a weakness in access control to disable security tools so that detection does not occur. This can take the form of killing processes, deleting registry keys so that tools do not start at run time, deleting log files, or other methods.",
        "prerequisites": [
          "The adversary must have the capability to interact with the configuration of the targeted system."
        ],
        "relatedWeaknesses": [
          284
        ],
        "consequences": [
          "Availability Hide Activities By disabling certain security tools, the adversary can hide malicious activity and avoid detection."
        ],
        "mitigations": [
          "Ensure proper permissions are in place to prevent adversaries from altering the execution status of security tools."
        ],
        "relatedAttackPatterns": [
          176
        ]
      },
      {
        "id": 579,
        "name": "Replace Winlogon Helper DLL",
        "description": "Winlogon is a part of Windows that performs logon actions. In Windows systems prior to Windows Vista, a registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup.",
        "relatedWeaknesses": [
          15
        ],
        "mitigations": [
          "Changes to registry entries in \"HKLM\\Software\\Microsoft\\Windows NT\\Winlogon\\Notify\" that do not correlate with known software, patch cycles, etc are suspicious. New DLLs written to System32 which do not correlate with known good software or patching may be suspicious."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 580,
        "name": "System Footprinting",
        "description": "An adversary engages in active probing and exploration activities to determine security information about a remote target system. Often times adversaries will rely on remote applications that can be probed for system configurations.",
        "prerequisites": [
          "The adversary must have logical access to the target network and system."
        ],
        "relatedWeaknesses": [
          204,
          205,
          208
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Keep patches up to date by installing weekly or daily if possible.",
          "Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 581,
        "name": "Security Software Footprinting",
        "description": "Adversaries may attempt to get a listing of security tools that are installed on the system and their configurations. This may include security related system features (such as a built-in firewall or anti-spyware) as well as third-party security software.",
        "mitigations": [
          "Identify programs that may be used to acquire security tool information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          580
        ]
      },
      {
        "id": 582,
        "name": "Route Disabling",
        "description": "An adversary disables the network route between two targets. The goal is to completely sever the communications channel between two entities. This is often the result of a major error or the use of an \"Internet kill switch\" by those in control of critical infrastructure. This attack pattern differs from most other obstruction patterns by targeting the route itself, as opposed to the data passed over the route.",
        "prerequisites": [
          "The adversary requires knowledge of and access to network route."
        ],
        "consequences": [
          "Availability Other Disabling a network route denies the availability of a service."
        ],
        "relatedAttackPatterns": [
          607
        ]
      },
      {
        "id": 583,
        "name": "Disabling Network Hardware",
        "description": "In this attack pattern, an adversary physically disables networking hardware by powering it down or disconnecting critical equipment. Disabling or shutting off critical system resources prevents them from performing their service as intended, which can have direct and indirect consequences on other systems. This attack pattern is considerably less technical than the selective blocking used in most obstruction attacks.",
        "prerequisites": [
          "The adversary requires physical access to the targeted communications equipment (networking devices, cables, etc.), which may be spread over a wide area."
        ],
        "consequences": [
          "Availability Other Denial of Service"
        ],
        "mitigations": [
          "Ensure rigorous physical defensive measures to keep the adversary from accessing critical systems.."
        ],
        "relatedAttackPatterns": [
          582
        ]
      },
      {
        "id": 584,
        "name": "BGP Route Disabling",
        "description": "An adversary suppresses the Border Gateway Protocol (BGP) advertisement for a route so as to render the underlying network inaccessible. The BGP protocol helps traffic move throughout the Internet by selecting the most efficient route between Autonomous Systems (AS), or routing domains. BGP is the basis for interdomain routing infrastructure, providing connections between these ASs. By suppressing the intended AS routing advertisements and/or forcing less effective routes for traffic to ASs, the adversary can deny availability for the target network.",
        "prerequisites": [
          "The adversary must have control of a router that can modify, drop, or introduce spoofed BGP updates.The adversary can convince"
        ],
        "consequences": [
          "Availability Other Disabling a network route at the routing infrastructure level denies availability of that route."
        ],
        "mitigations": [
          "Implement Ingress filters to check the validity of received routes. However, this relies on the accuracy of Internet Routing Registries (IRRs) databases which are often not well-maintained.",
          "Implement Secure BGP (S-BGP protocol), which improves authorization and authentication capabilities based on public-key cryptography."
        ],
        "relatedAttackPatterns": [
          582
        ]
      },
      {
        "id": 585,
        "name": "DNS Domain Seizure",
        "description": "In this attack pattern, an adversary influences a target's web-hosting company to disable a target domain. The goal is to prevent access to the targeted service provided by that domain. It usually occurs as the result of civil or criminal legal interventions.",
        "prerequisites": [
          "This attack pattern requires that the adversary has cooperation from the registrar of the target domain."
        ],
        "consequences": [
          "Availability Other Disabling a target domain at the infrastructure level denies the availability of its service to the user."
        ],
        "relatedAttackPatterns": [
          582
        ]
      },
      {
        "id": 586,
        "name": "Object Injection",
        "description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
        "prerequisites": [
          "The target application must unserialize data before validation."
        ],
        "relatedWeaknesses": [
          502
        ],
        "consequences": [
          "Availability Resource Consumption If a function is making an assumption on when to terminate, based on a sentry in a string, it could easily never terminate and exhaust available resources.",
          "Integrity Modify Data Attackers can modify objects or data that was assumed to be safe from modification.",
          "Authorization Execute Unauthorized Commands Functions that assume information in the deserialized object is valid could be exploited."
        ],
        "mitigations": [
          "Implementation: Validate object before deserialization process",
          "Design: Limit which types can be deserialized.",
          "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
          "Implementation: Keep session state on the server, when possible."
        ]
      },
      {
        "id": 587,
        "name": "Cross Frame Scripting (XFS)",
        "description": "This attack pattern combines malicious Javascript and a legitimate webpage loaded into a concealed iframe. The malicious Javascript is then able to interact with a legitimate webpage in a manner that is unknown to the user. This attack usually leverages some element of social engineering in that an attacker must convinces a user to visit a web page that the attacker controls.",
        "prerequisites": [
          "The user's browser must have vulnerabilities in its implementation of the same-origin policy. It allows certain data in a loaded page to originate from different servers/domains."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "consequences": [
          "Confidentiality Read Data Cross Frame Scripting allows an adversary to steal sensitive data from a legitimate site."
        ],
        "mitigations": [
          "Avoid clicking on untrusted links.",
          "Employ techniques such as frame busting, which is a method by which developers aim to prevent their site being loaded within a frame."
        ],
        "relatedAttackPatterns": [
          103
        ]
      },
      {
        "id": 588,
        "name": "DOM-Based XSS",
        "description": "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users.",
        "prerequisites": [
          "An application that leverages a client-side web browser with scripting enabled.",
          "An application that manipulates the DOM via client-side scripting.",
          "An application that failS to adequately sanitize or encode untrusted input."
        ],
        "relatedWeaknesses": [
          79,
          20,
          83
        ],
        "consequences": [
          "Confidentiality Read Data A successful DOM-based XSS attack can enable an adversary to exfiltrate sensitive information from the application.",
          "Confidentiality Authorization Access Control Gain Privileges A successful DOM-based XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.",
          "Confidentiality Integrity Availability Execute Unauthorized Commands A successful DOM-based XSS attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application.",
          "Integrity Modify Data A successful DOM-based XSS attack can allow an adversary to tamper with application data."
        ],
        "mitigations": [
          "Use browser technologies that do not allow client-side scripting.",
          "Utilize proper character encoding for all output produced within client-site scripts manipulating the DOM.",
          "Ensure that all user-supplied input is validated before use."
        ],
        "relatedAttackPatterns": [
          63
        ]
      },
      {
        "id": 589,
        "name": "DNS Blocking",
        "description": "An adversary intercepts traffic and intentionally drops DNS requests based on content in the request. In this way, the adversary can deny the availability of specific services or content to the user even if the IP address is changed.",
        "prerequisites": [
          "This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection."
        ],
        "relatedWeaknesses": [
          300
        ],
        "consequences": [
          "Availability Other Preventing DNS from resolving a request denies the availability of a target site or service for the user."
        ],
        "mitigations": [
          "Hard Coded Alternate DNS server in applications",
          "Avoid dependence on DNS",
          "Include \"hosts file\"/IP address in the application.",
          "Ensure best practices with respect to communications channel protections.",
          "Use a .onion domain with Tor support"
        ],
        "relatedAttackPatterns": [
          603
        ]
      },
      {
        "id": 590,
        "name": "IP Address Blocking",
        "description": "An adversary performing this type of attack drops packets destined for a target IP address. The aim is to prevent access to the service hosted at the target IP address.",
        "prerequisites": [
          "This attack requires the ability to conduct deep packet inspection with an In-Path device that can drop the targeted traffic and/or connection."
        ],
        "relatedWeaknesses": [
          300
        ],
        "consequences": [
          "Availability Other Blocking packets intended for a target IP address denies its availability to the user."
        ],
        "mitigations": [
          "Have a large pool of backup IPs built into the application and support proxy capability in the application."
        ],
        "relatedAttackPatterns": [
          603
        ]
      },
      {
        "id": 591,
        "name": "Reflected XSS",
        "description": "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is \"reflected\" off a vulnerable web application and then executed by a victim's browser. The process starts with an adversary delivering a malicious script to a victim and convincing the victim to send the script to the vulnerable web application.",
        "prerequisites": [
          "An application that leverages a client-side web browser with scripting enabled.",
          "An application that fail to adequately sanitize or encode untrusted input."
        ],
        "relatedWeaknesses": [
          79
        ],
        "consequences": [
          "Confidentiality Read Data A successful Reflected XSS attack can enable an adversary to exfiltrate sensitive information from the application.",
          "Confidentiality Authorization Access Control Gain Privileges A successful Reflected XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.",
          "Confidentiality Integrity Availability Execute Unauthorized Commands A successful Reflected attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application.",
          "Integrity Modify Data A successful Reflected attack can allow an adversary to tamper with application data."
        ],
        "mitigations": [
          "Use browser technologies that do not allow client-side scripting.",
          "Utilize strict type, character, and encoding enforcement.",
          "Ensure that all user-supplied input is validated before use."
        ],
        "relatedAttackPatterns": [
          63
        ]
      },
      {
        "id": 592,
        "name": "Stored XSS",
        "description": "An adversary utilizes a form of Cross-site Scripting (XSS) where a malicious script is persistently \"stored\" within the data storage of a vulnerable web application as valid input.",
        "prerequisites": [
          "An application that leverages a client-side web browser with scripting enabled.",
          "An application that fails to adequately sanitize or encode untrusted input.",
          "An application that stores information provided by the user in data storage of some kind."
        ],
        "relatedWeaknesses": [
          79
        ],
        "consequences": [
          "Confidentiality Read Data A successful Stored XSS attack can enable an adversary to exfiltrate sensitive information from the application.",
          "Confidentiality Authorization Access Control Gain Privileges A successful Stored XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access.",
          "Confidentiality Integrity Availability Execute Unauthorized Commands A successful Stored XSS attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application.",
          "Integrity Modify Data A successful Stored XSS attack can allow an adversary to tamper with application data."
        ],
        "mitigations": [
          "Use browser technologies that do not allow client-side scripting.",
          "Utilize strict type, character, and encoding enforcement.",
          "Ensure that all user-supplied input is validated before being stored."
        ],
        "relatedAttackPatterns": [
          63
        ]
      },
      {
        "id": 593,
        "name": "Session Hijacking",
        "description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
        "prerequisites": [
          "An application that leverages sessions to perform authentication."
        ],
        "relatedWeaknesses": [
          287
        ],
        "consequences": [
          "Confidentiality Integrity Availability Gain Privileges A successful attack can enable an adversary to gain unauthorized access to an application."
        ],
        "mitigations": [
          "Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
        ],
        "relatedAttackPatterns": [
          21
        ]
      },
      {
        "id": 594,
        "name": "Traffic Injection",
        "description": "An adversary injects traffic into the target's network connection. The adversary is therefore able to degrade or disrupt the connection, and potentially modify the content. This is not a flooding attack, as the adversary is not focusing on exhausting resources. Instead, the adversary is crafting a specific input to affect the system in a particular way.",
        "prerequisites": [
          "The target application must leverage an open communications channel.",
          "The channel on which the target communicates must be vulnerable to interception (e.g., adversary in the middle attack - CAPEC-94)."
        ],
        "relatedWeaknesses": [
          940
        ],
        "consequences": [
          "Availability Unreliable Execution The injection of specific content into a connection can trigger a disruption in that communications channel, thereby denying availability of the service.",
          "Integrity Other An adversary's injection of additional content into a communication channel negatively impacts the integrity of that channel."
        ]
      },
      {
        "id": 595,
        "name": "Connection Reset",
        "description": "In this attack pattern, an adversary injects a connection reset packet to one or both ends of a target's connection. The attacker is therefore able to have the target and/or the destination server sever the connection without having to directly filter the traffic between them.",
        "prerequisites": [
          "This attack requires the ability to monitor the target's network connection."
        ],
        "relatedWeaknesses": [
          940
        ],
        "relatedAttackPatterns": [
          594
        ]
      },
      {
        "id": 596,
        "name": "TCP RST Injection",
        "description": "An adversary injects one or more TCP RST packets to a target after the target has made a HTTP GET request. The goal of this attack is to have the target and/or destination web server terminate the TCP connection.",
        "prerequisites": [
          "An On/In Path Device"
        ],
        "relatedWeaknesses": [
          940
        ],
        "relatedAttackPatterns": [
          595
        ]
      },
      {
        "id": 597,
        "name": "Absolute Path Traversal",
        "description": "An adversary with access to file system resources, either directly or via application logic, will use various file absolute paths and navigation mechanisms such as \"..\" to extend their range of access to inappropriate areas of the file system. The goal of the adversary is to access directories and files that are intended to be restricted from their access.",
        "prerequisites": [
          "The target must leverage and access an underlying file system."
        ],
        "relatedWeaknesses": [
          36
        ],
        "consequences": [
          "Integrity Confidentiality Availability Execute Unauthorized Commands The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.",
          "Integrity Modify Data The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.",
          "Confidentiality Read Data The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.",
          "Availability Unreliable Execution The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the software."
        ],
        "mitigations": [
          "Design: Configure the access control correctly.",
          "Design: Enforce principle of least privilege.",
          "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
          "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement.",
          "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
          "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
          "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.",
          "Implementation: Perform input validation for all remote content, including remote and user-generated content.",
          "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
          "Implementation: Use indirect references rather than actual file names.",
          "Implementation: Use possible permissions on file access when developing and deploying web applications.",
          "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification using an allowlist approach."
        ],
        "relatedAttackPatterns": [
          126
        ]
      },
      {
        "id": 598,
        "name": "DNS Spoofing",
        "description": "An adversary sends a malicious (\"NXDOMAIN\" (\"No such domain\") code, or DNS A record) response to a target's route request before a legitimate resolver can. This technique requires an On-path or In-path device that can monitor and respond to the target's DNS requests. This attack differs from BGP Tampering in that it directly responds to requests made by the target instead of polluting the routing the target's infrastructure uses.",
        "prerequisites": [
          "On/In Path Device"
        ],
        "mitigations": [
          "Design: Avoid dependence on DNS",
          "Design: Include \"hosts file\"/IP address in the application",
          "Implementation: Utilize a .onion domain with Tor support",
          "Implementation: DNSSEC",
          "Implementation: DNS-hold-open"
        ],
        "relatedAttackPatterns": [
          194
        ]
      },
      {
        "id": 599,
        "name": "Terrestrial Jamming",
        "description": "In this attack pattern, the adversary transmits disruptive signals in the direction of the target's consumer-level satellite dish (as opposed to the satellite itself). The transmission disruption occurs in a more targeted range. Portable terrestrial jammers have a range of 3-5 kilometers in urban areas and 20 kilometers in rural areas. This technique requires a terrestrial jammer that is more powerful than the frequencies sent from the satellite.",
        "consequences": [
          "Availability Other A successful attack will deny, degrade, or disrupt availability of satellite communications for the target by overwhelming its resources to accurately receive authorized transmissions."
        ],
        "relatedAttackPatterns": [
          195
        ]
      },
      {
        "id": 600,
        "name": "Credential Stuffing",
        "description": "An adversary tries known username/password combinations against different systems, applications, or services to gain additional authenticated access. Credential Stuffing attacks rely upon the fact that many users leverage the same username/password combination for multiple systems, applications, and services.",
        "prerequisites": [
          "The system/application uses one factor password based authentication, SSO, and/or cloud-based authentication.",
          "The system/application does not have a sound password policy that is being enforced.",
          "The system/application does not implement an effective password throttling mechanism.",
          "The adversary possesses a list of known user accounts and corresponding passwords that may exist on the target."
        ],
        "relatedWeaknesses": [
          522,
          307,
          308,
          309,
          262,
          263,
          654
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network.",
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Ensure users are not reusing username/password combinations for multiple systems, applications, or services.",
          "Do not reuse local administrator account credentials across systems.",
          "Deny remote use of local admin credentials to log into domain systems.",
          "Do not allow accounts to be a local administrator on more than one system.",
          "Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.",
          "Monitor system and domain logs for abnormal credential access."
        ],
        "relatedAttackPatterns": [
          560,
          151,
          653
        ]
      },
      {
        "id": 601,
        "name": "Jamming",
        "description": "An adversary uses radio noise or signals in an attempt to disrupt communications. By intentionally overwhelming system resources with illegitimate traffic, service is denied to the legitimate traffic of authorized users.",
        "consequences": [
          "Availability Other The jamming of equipment denies the availability of functioning communications services."
        ],
        "relatedAttackPatterns": [
          607
        ]
      },
      {
        "id": 602,
        "name": "DEPRECATED: Degradation",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 603,
        "name": "Blockage",
        "description": "An adversary blocks the delivery of an important system resource causing the system to fail or stop working.",
        "prerequisites": [
          "This attack pattern requires knowledge of where important system resources are logically located as well as how they operate."
        ],
        "consequences": [
          "Availability Other Blocking a resource from functional operation denies its availability to authorized users."
        ],
        "relatedAttackPatterns": [
          607
        ]
      },
      {
        "id": 604,
        "name": "Wi-Fi Jamming",
        "description": "In this attack scenario, the attacker actively transmits on the Wi-Fi channel to prevent users from transmitting or receiving data from the targeted Wi-Fi network. There are several known techniques to perform this attack – for example: the attacker may flood the Wi-Fi access point (e.g. the retransmission device) with deauthentication frames. Another method is to transmit high levels of noise on the RF band used by the Wi-Fi network.",
        "prerequisites": [
          "Lack of anti-jam features in 802.11",
          "Lack of authentication on deauthentication/disassociation packets on 802.11-based networks"
        ],
        "consequences": [
          "Availability Other A successful attack will deny the availability of the Wi-fi network to authorized users.",
          "Availability Resource Consumption The attacker's goal is to prevent users from accessing the wireless network. Denying connectivity to the wireless network prevents the user from being able to transmit or receive any data, which also prevents VOIP calls, however this attack poses no threat to data confidentiality."
        ],
        "mitigations": [
          "Countermeasures have been proposed for both disassociation flooding and RF jamming, however these countermeasures are not standardized and would need to be supported on both the retransmission device and the handset in order to be effective. Commercial products are not currently available that support jamming countermeasures for Wi-Fi."
        ],
        "relatedAttackPatterns": [
          601
        ]
      },
      {
        "id": 605,
        "name": "Cellular Jamming",
        "description": "In this attack scenario, the attacker actively transmits signals to overpower and disrupt the communication between a cellular user device and a cell tower. Several existing techniques are known in the open literature for this attack for 2G, 3G, and 4G LTE cellular technology. For example, some attacks target cell towers by overwhelming them with false status messages, while others introduce high levels of noise on signaling channels.",
        "prerequisites": [
          "Lack of anti-jam features in cellular technology (2G, 3G, 4G, LTE)"
        ],
        "consequences": [
          "Availability Resource Consumption The attacker's goal is to prevent users from accessing the cellular network. Denying connectivity to the cellular network prevents the user from being able to transmit or receive any data, which also prevents VOIP calls, however this attack poses no threat to data confidentiality."
        ],
        "mitigations": [
          "Mitigating this attack requires countermeasures employed on both the retransmission device as well as on the cell tower. Therefore, any system that relies on existing commercial cell towards will likely be vulnerable to this attack. By using a private cellular LTE network (i.e., a custom cell tower), jamming countermeasures could be developed and employed."
        ],
        "relatedAttackPatterns": [
          601
        ]
      },
      {
        "id": 606,
        "name": "Weakening of Cellular Encryption",
        "description": "An attacker, with control of a Cellular Rogue Base Station or through cooperation with a Malicious Mobile Network Operator can force the mobile device (e.g., the retransmission device) to use no encryption (A5/0 mode) or to use easily breakable encryption (A5/1 or A5/2 mode).",
        "prerequisites": [
          "Cellular devices that allow negotiating security modes to facilitate backwards compatibility and roaming on legacy networks."
        ],
        "relatedWeaknesses": [
          757
        ],
        "consequences": [
          "Confidentiality Other Tracking, Network Reconnaissance"
        ],
        "mitigations": [
          "Use of hardened baseband firmware on retransmission device to detect and prevent the use of weak cellular encryption.",
          "Monitor cellular RF interface to detect the usage of weaker-than-expected cellular encryption."
        ],
        "relatedAttackPatterns": [
          620
        ]
      },
      {
        "id": 607,
        "name": "Obstruction",
        "description": "An attacker obstructs the interactions between system components. By interrupting or disabling these interactions, an adversary can often force the system into a degraded state or cause the system to stop working as intended. This can cause the system components to be unavailable until the obstruction mitigated.",
        "consequences": [
          "Availability Resource Consumption"
        ]
      },
      {
        "id": 608,
        "name": "Cryptanalysis of Cellular Encryption",
        "description": "The use of cryptanalytic techniques to derive cryptographic keys or otherwise effectively defeat cellular encryption to reveal traffic content. Some cellular encryption algorithms such as A5/1 and A5/2 (specified for GSM use) are known to be vulnerable to such attacks and commercial tools are available to execute these attacks and decrypt mobile phone conversations in real-time. Newer encryption algorithms in use by UMTS and LTE are stronger and currently believed to be less vulnerable to these types of attacks. Note, however, that an attacker with a Cellular Rogue Base Station can force the use of weak cellular encryption even by newer mobile devices.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          327
        ],
        "consequences": [
          "Confidentiality Other Reveals IMSI and IMEI for tracking of retransmission device and enables further follow-on attacks by revealing black network control messages. (e.g., revealing IP addresses of enterprise servers for VOIP connectivity)"
        ],
        "mitigations": [
          "Use of hardened baseband firmware on retransmission device to detect and prevent the use of weak cellular encryption.",
          "Monitor cellular RF interface to detect the usage of weaker-than-expected cellular encryption."
        ],
        "relatedAttackPatterns": [
          97
        ]
      },
      {
        "id": 609,
        "name": "Cellular Traffic Intercept",
        "description": "Cellular traffic for voice and data from mobile devices and retransmission devices can be intercepted via numerous methods. Malicious actors can deploy their own cellular tower equipment and intercept cellular traffic surreptitiously. Additionally, government agencies of adversaries and malicious actors can intercept cellular traffic via the telecommunications backbone over which mobile traffic is transmitted.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          311
        ],
        "consequences": [
          "Confidentiality Read Data Capture all cellular and RF traffic from mobile and retransmission devices. Move bulk traffic capture to storage area for cryptanalysis of encrypted traffic, and telemetry analysis of non-encrypted data. (packet headers, cellular power data, signal strength, etc.)"
        ],
        "mitigations": [
          "Encryption of all data packets emanating from the smartphone to a retransmission device via two encrypted tunnels with Suite B cryptography, all the way to the VPN gateway at the datacenter."
        ],
        "relatedAttackPatterns": [
          157
        ]
      },
      {
        "id": 610,
        "name": "Cellular Data Injection",
        "description": "Adversaries inject data into mobile technology traffic (data flows or signaling data) to disrupt communications or conduct additional surveillance operations.",
        "prerequisites": [
          "None"
        ],
        "consequences": [
          "Availability Resource Consumption Attackers can disrupt or deny mobile technology communications and operations.",
          "Availability Modify Data Attackers can inject false data into data or signaling system data flows of communications and operations, or re-route data flows or signaling data for the purpose of further data intercept and capture."
        ],
        "mitigations": [
          "Commercial defensive technology to detect and alert to any attempts to modify mobile technology data flows or to inject new data into existing data flows and signaling data."
        ],
        "relatedAttackPatterns": [
          240
        ]
      },
      {
        "id": 611,
        "name": "BitSquatting",
        "description": "An adversary registers a domain name one bit different than a trusted domain. A BitSquatting attack leverages random errors in memory to direct Internet traffic to adversary-controlled destinations. BitSquatting requires no exploitation or complicated reverse engineering, and is operating system and architecture agnostic. Experimental observations show that BitSquatting popular websites could redirect non-trivial amounts of Internet traffic to a malicious entity.",
        "prerequisites": [
          "An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets."
        ],
        "consequences": [
          "Other Other Depending on the intention of the adversary, a successful BitSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials."
        ],
        "mitigations": [
          "Authenticate all servers and perform redundant checks when using DNS hostnames.",
          "When possible, use error-correcting (ECC) memory in local devices as non-ECC memory is significantly more vulnerable to faults."
        ],
        "relatedAttackPatterns": [
          616,
          89,
          543
        ]
      },
      {
        "id": 612,
        "name": "WiFi MAC Address Tracking",
        "description": "In this attack scenario, the attacker passively listens for WiFi messages and logs the associated Media Access Control (MAC) addresses. These addresses are intended to be unique to each wireless device (although they can be configured and changed by software). Once the attacker is able to associate a MAC address with a particular user or set of users (for example, when attending a public event), the attacker can then scan for that MAC address to track that user in the future.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          201,
          300
        ],
        "mitigations": [
          "Automatic randomization of WiFi MAC addresses",
          "Frequent changing of handset and retransmission device"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 613,
        "name": "WiFi SSID Tracking",
        "description": "In this attack scenario, the attacker passively listens for WiFi management frame messages containing the Service Set Identifier (SSID) for the WiFi network. These messages are frequently transmitted by WiFi access points (e.g., the retransmission device) as well as by clients that are accessing the network (e.g., the handset/mobile device). Once the attacker is able to associate an SSID with a particular user or set of users (for example, when attending a public event), the attacker can then scan for this SSID to track that user in the future.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          201,
          300
        ],
        "mitigations": [
          "Do not enable the feature of \"Hidden SSIDs\" (also known as \"Network Cloaking\") – this option disables the usual broadcasting of the SSID by the access point, but forces the mobile handset to send requests on all supported radio channels which contains the SSID. The result is that tracking of the mobile device becomes easier since it is transmitting the SSID more frequently.",
          "Frequently change the SSID to new and unrelated values"
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 614,
        "name": "Rooting SIM Cards",
        "description": "SIM cards are the de facto trust anchor of mobile devices worldwide. The cards protect the mobile identity of subscribers, associate devices with phone numbers, and increasingly store payment credentials, for example in NFC-enabled phones with mobile wallets. This attack leverages over-the-air (OTA) updates deployed via cryptographically-secured SMS messages to deliver executable code to the SIM. By cracking the DES key, an attacker can send properly signed binary SMS messages to a device, which are treated as Java applets and are executed on the SIM. These applets are allowed to send SMS, change voicemail numbers, and query the phone location, among many other predefined functions. These capabilities alone provide plenty of potential for abuse.",
        "prerequisites": [
          "A SIM card that relies on the DES cipher."
        ],
        "relatedWeaknesses": [
          327
        ],
        "consequences": [
          "Confidentiality Integrity Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Upgrade the SIM card to use the state-of-the-art AES or the somewhat outdated 3DES algorithm for OTA."
        ],
        "relatedAttackPatterns": [
          186
        ]
      },
      {
        "id": 615,
        "name": "Evil Twin Wi-Fi Attack",
        "description": "Adversaries install Wi-Fi equipment that acts as a legitimate Wi-Fi network access point. When a device connects to this access point, Wi-Fi data traffic is intercepted, captured, and analyzed. This also allows the adversary to use \"adversary-in-the-middle\" (CAPEC-94) for all communications.",
        "prerequisites": [
          "None"
        ],
        "relatedWeaknesses": [
          300
        ],
        "consequences": [
          "Confidentiality Read Data Intercept and control Wi-Fi data communications to/from mobile device."
        ],
        "mitigations": [
          "Commercial defensive technology that monitors for rogue Wi-Fi access points, adversary-in-the-middle attacks, and anomalous activity with the mobile device baseband radios."
        ],
        "relatedAttackPatterns": [
          616
        ]
      },
      {
        "id": 616,
        "name": "Establish Rogue Location",
        "description": "An adversary provides a malicious version of a resource at a location that is similar to the expected location of a legitimate resource. After establishing the rogue location, the adversary waits for a victim to visit the location and access the malicious resource.",
        "prerequisites": [
          "A resource is expected to available to the user."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Integrity Other Successful attacks of this nature can result in a wide variety of consequences and negatively impact confidentiality and integrity based on the adversary's subsequent actions."
        ],
        "relatedAttackPatterns": [
          154,
          691
        ]
      },
      {
        "id": 617,
        "name": "Cellular Rogue Base Station",
        "description": "In this attack scenario, the attacker imitates a cellular base station with their own \"rogue\" base station equipment. Since cellular devices connect to whatever station has the strongest signal, the attacker can easily convince a targeted cellular device (e.g. the retransmission device) to talk to the rogue base station.",
        "prerequisites": [
          "None"
        ],
        "consequences": [
          "Confidentiality Read Data Intercept and control cellular data communications to/from mobile device."
        ],
        "mitigations": [
          "Passively monitor cellular network connection for real-time threat detection and logging for manual review."
        ],
        "relatedAttackPatterns": [
          616
        ]
      },
      {
        "id": 618,
        "name": "Cellular Broadcast Message Request",
        "description": "In this attack scenario, the attacker uses knowledge of the target’s mobile phone number (i.e., the number associated with the SIM used in the retransmission device) to cause the cellular network to send broadcast messages to alert the mobile device. Since the network knows which cell tower the target’s mobile device is attached to, the broadcast messages are only sent in the Location Area Code (LAC) where the target is currently located. By triggering the cellular broadcast message and then listening for the presence or absence of that message, an attacker could verify that the target is in (or not in) a given location.",
        "prerequisites": [
          "The attacker must have knowledge of the target’s mobile phone number."
        ],
        "relatedWeaknesses": [
          201
        ],
        "consequences": [
          "Other Other An attacker could verify that the target is in (or not in) a given location."
        ],
        "mitigations": [
          "Frequent changing of mobile number."
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 619,
        "name": "Signal Strength Tracking",
        "description": "In this attack scenario, the attacker passively monitors the signal strength of the target’s cellular RF signal or WiFi RF signal and uses the strength of the signal (with directional antennas and/or from multiple listening points at once) to identify the source location of the signal. Obtaining the signal of the target can be accomplished through multiple techniques such as through Cellular Broadcast Message Request or through the use of IMSI Tracking or WiFi MAC Address Tracking.",
        "relatedWeaknesses": [
          201
        ],
        "relatedAttackPatterns": [
          292
        ]
      },
      {
        "id": 620,
        "name": "Drop Encryption Level",
        "description": "An attacker forces the encryption level to be lowered, thus enabling a successful attack against the encrypted data.",
        "relatedWeaknesses": [
          757
        ],
        "consequences": [
          "Access Control Bypass Protection Mechanism"
        ],
        "relatedAttackPatterns": [
          212
        ]
      },
      {
        "id": 621,
        "name": "Analysis of Packet Timing and Sizes",
        "description": "An attacker may intercept and log encrypted transmissions for the purpose of analyzing metadata such as packet timing and sizes. Although the actual data may be encrypted, this metadata may reveal valuable information to an attacker. Note that this attack is applicable to VOIP data as well as application data, especially for interactive apps that require precise timing and low-latency (e.g. thin-clients).",
        "prerequisites": [
          "Use of untrusted communication paths enables an attacker to intercept and log communications, including metadata such as packet timing and sizes."
        ],
        "relatedWeaknesses": [
          201
        ],
        "consequences": [
          "Confidentiality Read Data Derive sensitive information about encrypted data."
        ],
        "mitigations": [
          "Distort packet sizes and timing at VPN layer by adding padding to normalize packet sizes and timing delays to reduce information leakage via timing."
        ],
        "relatedAttackPatterns": [
          189
        ]
      },
      {
        "id": 622,
        "name": "Electromagnetic Side-Channel Attack",
        "description": "In this attack scenario, the attacker passively monitors electromagnetic emanations that are produced by the targeted electronic device as an unintentional side-effect of its processing. From these emanations, the attacker derives information about the data that is being processed (e.g. the attacker can recover cryptographic keys by monitoring emanations associated with cryptographic processing). This style of attack requires proximal access to the device, however attacks have been demonstrated at public conferences that work at distances of up to 10-15 feet. There have not been any significant studies to determine the maximum practical distance for such attacks. Since the attack is passive, it is nearly impossible to detect and the targeted device will continue to operate as normal after a successful attack.",
        "prerequisites": [
          "Proximal access to the device."
        ],
        "relatedWeaknesses": [
          201
        ],
        "consequences": [
          "Confidentiality Read Data Derive sensitive information about encrypted data. For mobile devices, depending on which keys are compromised, the attacker may be able to decrypt VOIP communications, impersonate the targeted caller, or access the enterprise VPN server."
        ],
        "mitigations": [
          "Utilize side-channel resistant implementations of all crypto algorithms.",
          "Strong physical security of all devices that contain secret key information. (even when devices are not in use)"
        ],
        "relatedAttackPatterns": [
          189
        ]
      },
      {
        "id": 623,
        "name": "Compromising Emanations Attack",
        "description": "Compromising Emanations (CE) are defined as unintentional signals which an attacker may intercept and analyze to disclose the information processed by the targeted equipment. Commercial mobile devices and retransmission devices have displays, buttons, microchips, and radios that emit mechanical emissions in the form of sound or vibrations. Capturing these emissions can help an adversary understand what the device is doing.",
        "prerequisites": [
          "Proximal access to the device."
        ],
        "relatedWeaknesses": [
          201
        ],
        "consequences": [
          "Confidentiality Read Data Capture vibrations/emissions from the handset or retransmission device display screen to recreat display information from a distance."
        ],
        "mitigations": [
          "None are known."
        ],
        "relatedAttackPatterns": [
          189
        ]
      },
      {
        "id": 624,
        "name": "Hardware Fault Injection",
        "description": "The adversary uses disruptive signals or events, or alters the physical environment a device operates in, to cause faulty behavior in electronic devices. This can include electromagnetic pulses, laser pulses, clock glitches, ambient temperature extremes, and more. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information.",
        "prerequisites": [
          "Physical access to the system",
          "The adversary must be cognizant of where fault injection vulnerabilities exist in the system in order to leverage them for exploitation."
        ],
        "relatedWeaknesses": [
          1247,
          1248,
          1256,
          1319,
          1332,
          1334,
          1338,
          1351
        ],
        "consequences": [
          "Confidentiality Read Data Bypass Protection Mechanism Hide Activities An adversary capable of successfully collecting and analyzing sensitive, fault/side-channel information, has compromised the confidentiality of that application or information system data.",
          "Integrity Execute Unauthorized Commands If an adversary is able to inject data via a fault or side channel vulnerability towards malicious ends, the integrity of the application or information system will be compromised."
        ],
        "mitigations": [
          "Implement robust physical security countermeasures and monitoring."
        ]
      },
      {
        "id": 625,
        "name": "Mobile Device Fault Injection",
        "description": "Fault injection attacks against mobile devices use disruptive signals or events (e.g. electromagnetic pulses, laser pulses, clock glitches, etc.) to cause faulty behavior. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information. Although this attack usually requires physical control of the mobile device, it is non-destructive, and the device can be used after the attack without any indication that secret keys were compromised.",
        "relatedWeaknesses": [
          1247,
          1248,
          1256,
          1319,
          1332,
          1334,
          1338,
          1351
        ],
        "consequences": [
          "Confidentiality Access Control Read Data Extract long-term secret keys (e.g. keys used for VPN or WiFi authentication and encryption) to enable decryption of intercepted VOIP traffic."
        ],
        "mitigations": [
          "Strong physical security of all devices that contain secret key information. (even when devices are not in use)",
          "Frequent changes to secret keys and certificates."
        ],
        "relatedAttackPatterns": [
          624
        ]
      },
      {
        "id": 626,
        "name": "Smudge Attack",
        "description": "Attacks that reveal the password/passcode pattern on a touchscreen device by detecting oil smudges left behind by the user’s fingers.",
        "prerequisites": [
          "The attacker must have physical access to the device."
        ],
        "consequences": [
          "Access Control Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Strong physical security of the device."
        ],
        "relatedAttackPatterns": [
          395
        ]
      },
      {
        "id": 627,
        "name": "Counterfeit GPS Signals",
        "description": "An adversary attempts to deceive a GPS receiver by broadcasting counterfeit GPS signals, structured to resemble a set of normal GPS signals. These spoofed signals may be structured in such a way as to cause the receiver to estimate its position to be somewhere other than where it actually is, or to be located where it is but at a different time, as determined by the adversary.",
        "prerequisites": [
          "The target must be relying on valid GPS signal to perform critical operations."
        ],
        "consequences": [
          "Integrity Modify Data"
        ],
        "relatedAttackPatterns": [
          148
        ]
      },
      {
        "id": 628,
        "name": "Carry-Off GPS Attack",
        "description": "A common form of a GPS spoofing attack, commonly termed a carry-off attack begins with an adversary broadcasting signals synchronized with the genuine signals observed by the target receiver. The power of the counterfeit signals is then gradually increased and drawn away from the genuine signals. Over time, the adversary can carry the target away from their intended destination and toward a location chosen by the adversary.",
        "prerequisites": [
          "The target must be relying on valid GPS signal to perform critical operations."
        ],
        "relatedAttackPatterns": [
          627
        ]
      },
      {
        "id": 629,
        "name": "DEPRECATED: Unauthorized Use of Device Resources",
        "description": "This attack pattern has been deprecated."
      },
      {
        "id": 630,
        "name": "TypoSquatting",
        "description": "An adversary registers a domain name with at least one character different than a trusted domain. A TypoSquatting attack takes advantage of instances where a user mistypes a URL (e.g. www.goggle.com) or not does visually verify a URL before clicking on it (e.g. phishing attack). As a result, the user is directed to an adversary-controlled destination. TypoSquatting does not require an attack against the trusted domain or complicated reverse engineering.",
        "prerequisites": [
          "An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets."
        ],
        "consequences": [
          "Other Other Depending on the intention of the adversary, a successful TypoSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials."
        ],
        "mitigations": [
          "Authenticate all servers and perform redundant checks when using DNS hostnames.",
          "Purchase potential TypoSquatted domains and forward to legitimate domain."
        ],
        "relatedAttackPatterns": [
          616,
          89,
          543
        ]
      },
      {
        "id": 631,
        "name": "SoundSquatting",
        "description": "An adversary registers a domain name that sounds the same as a trusted domain, but has a different spelling. A SoundSquatting attack takes advantage of a user's confusion of the two words to direct Internet traffic to adversary-controlled destinations. SoundSquatting does not require an attack against the trusted domain or complicated reverse engineering.",
        "prerequisites": [
          "An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets."
        ],
        "consequences": [
          "Other Other Depending on the intention of the adversary, a successful SoundSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials."
        ],
        "mitigations": [
          "Authenticate all servers and perform redundant checks when using DNS hostnames.",
          "Purchase potential SoundSquatted domains and forward to legitimate domain."
        ],
        "relatedAttackPatterns": [
          616,
          89,
          543
        ]
      },
      {
        "id": 632,
        "name": "Homograph Attack via Homoglyphs",
        "description": "An adversary registers a domain name containing a homoglyph, leading the registered domain to appear the same as a trusted domain. A homograph attack leverages the fact that different characters among various character sets look the same to the user. Homograph attacks must generally be combined with other attacks, such as phishing attacks, in order to direct Internet traffic to the adversary-controlled destinations.",
        "prerequisites": [
          "An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets."
        ],
        "relatedWeaknesses": [
          1007
        ],
        "consequences": [
          "Other Other Depending on the intention of the adversary, a successful Homograph attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials."
        ],
        "mitigations": [
          "Authenticate all servers and perform redundant checks when using DNS hostnames.",
          "Utilize browsers that can warn users if URLs contain characters from different character sets."
        ],
        "relatedAttackPatterns": [
          616,
          89,
          543
        ]
      },
      {
        "id": 633,
        "name": "Token Impersonation",
        "description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
        "prerequisites": [
          "This pattern of attack is only applicable when a downstream user leverages tokens to verify identity, and then takes action based on that identity."
        ],
        "relatedWeaknesses": [
          287,
          1270
        ],
        "consequences": [
          "Integrity Alter Execution Logic By faking the source of data or services, an adversary can cause a target to make incorrect decisions about how to proceed.",
          "Integrity Gain Privileges By impersonating identities that have an increased level of access, an adversary gain privilege that they many not have otherwise had.",
          "Integrity Hide Activities Faking the source of data or services can be used to create a false trail in logs as the target will associated any actions with the impersonated identity instead of the adversary."
        ],
        "relatedAttackPatterns": [
          194
        ]
      },
      {
        "id": 634,
        "name": "Probe Audio and Video Peripherals",
        "description": "The adversary exploits the target system's audio and video functionalities through malware or scheduled tasks. The goal is to capture sensitive information about the target for financial, personal, political, or other gains which is accomplished by collecting communication data between two parties via the use of peripheral devices (e.g. microphones and webcams) or applications with audio and video capabilities (e.g. Skype) on a system.",
        "prerequisites": [
          "Knowledge of the target device's or application’s vulnerabilities that can be capitalized on with malicious code. The adversary must be able to place the malicious code on the target device."
        ],
        "relatedWeaknesses": [
          267
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Prevent unknown code from executing on a system through the use of an allowlist policy.",
          "Patch installed applications as soon as new updates become available."
        ],
        "relatedAttackPatterns": [
          651,
          545
        ]
      },
      {
        "id": 635,
        "name": "Alternative Execution Due to Deceptive Filenames",
        "description": "The extension of a file name is often used in various contexts to determine the application that is used to open and use it. If an attacker can cause an alternative application to be used, it may be able to execute malicious code, cause a denial of service or expose sensitive information.",
        "prerequisites": [
          "The use of the file must be controlled by the file extension."
        ],
        "relatedWeaknesses": [
          162
        ],
        "mitigations": [
          "Applications should insure that the content of the file is consistent with format it is expecting, and not depend solely on the file extension."
        ],
        "relatedAttackPatterns": [
          165
        ]
      },
      {
        "id": 636,
        "name": "Hiding Malicious Data or Code within Files",
        "description": "Files on various operating systems can have a complex format which allows for the storage of other data, in addition to its contents. Often this is metadata about the file, such as a cached thumbnail for an image file. Unless utilities are invoked in a particular way, this data is not visible during the normal use of the file. It is possible for an attacker to store malicious data or code using these facilities, which would be difficult to discover.",
        "prerequisites": [
          "The operating system must support a file system that allows for alternate data storage for a file."
        ],
        "relatedWeaknesses": [
          506
        ],
        "mitigations": [
          "Many tools are available to search for the hidden data. Scan regularly for such data using one of these tools."
        ],
        "relatedAttackPatterns": [
          165
        ]
      },
      {
        "id": 637,
        "name": "Collect Data from Clipboard",
        "description": "The adversary exploits an application that allows for the copying of sensitive data or information by collecting information copied to the clipboard. Data copied to the clipboard can be accessed by other applications, such as malware built to exfiltrate or log clipboard contents on a periodic basis. In this way, the adversary aims to garner information to which they are unauthorized.",
        "prerequisites": [
          "The adversary must have a means (i.e., a pre-installed tool or background process) by which to collect data from the clipboard and store it. That is, when the target copies data to the clipboard (e.g., to paste into another application), the adversary needs some means of capturing that data in a third location."
        ],
        "relatedWeaknesses": [
          267
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "While copying and pasting of data with the clipboard is a legitimate and practical function, certain situations and context may require the disabling of this feature. Just as certain applications disable screenshot capability, applications that handle highly sensitive information should consider disabling copy and paste functionality.",
          "Employ a robust identification and audit/blocking via using an allowlist of applications on your system. Malware may contain the functionality associated with this attack pattern."
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 638,
        "name": "Altered Component Firmware",
        "description": "An adversary exploits systems features and/or improperly protected firmware of hardware components, such as Hard Disk Drives (HDD), with the goal of executing malicious code from within the component's Master Boot Record (MBR). Conducting this type of attack entails the adversary infecting the target with firmware altering malware, using known tools, and a payload. Once this malware is executed, the MBR is modified to include instructions to execute the payload at desired intervals and when the system is booted up. A successful attack will obtain persistence within the victim system even if the operating system is reinstalled and/or if the component is formatted or has its data erased.",
        "prerequisites": [
          "Advanced knowledge about the target component's firmware",
          "Advanced knowledge about Master Boot Records (MBR)",
          "Advanced knowledge about tools used to insert firmware altering malware.",
          "Advanced knowledge about component shipments to the target organization."
        ],
        "consequences": [
          "Authentication Authorization Gain Privileges Execute Unauthorized Commands Bypass Protection Mechanism Hide Activities",
          "Confidentiality Access Control Read Data Modify Data"
        ],
        "mitigations": [
          "Leverage hardware components known to not be susceptible to these types of attacks.",
          "Implement hardware RAID infrastructure."
        ],
        "relatedAttackPatterns": [
          452
        ]
      },
      {
        "id": 639,
        "name": "Probe System Files",
        "description": "An adversary obtains unauthorized information due to improperly protected files. If an application stores sensitive information in a file that is not protected by proper access control, then an adversary can access the file and search for sensitive information.",
        "prerequisites": [
          "An adversary has access to the file system of a system."
        ],
        "relatedWeaknesses": [
          552
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Verify that files have proper access controls set, and reduce the storage of sensitive information to only what is necessary."
        ],
        "relatedAttackPatterns": [
          545
        ]
      },
      {
        "id": 640,
        "name": "Inclusion of Code in Existing Process",
        "description": "The adversary takes advantage of a bug in an application failing to verify the integrity of the running process to execute arbitrary code in the address space of a separate live process. The adversary could use running code in the context of another process to try to access process's memory, system/network resources, etc. The goal of this attack is to evade detection defenses and escalate privileges by masking the malicious code under an existing legitimate process. Examples of approaches include but not limited to: dynamic-link library (DLL) injection, portable executable injection, thread execution hijacking, ptrace system calls, VDSO hijacking, function hooking, reflective code loading, and more.",
        "prerequisites": [
          "The targeted application fails to verify the integrity of the running process that allows an adversary to execute arbitrary code."
        ],
        "relatedWeaknesses": [
          114,
          829
        ],
        "consequences": [
          "Integrity Confidentiality Execute Unauthorized Commands Read Data"
        ],
        "mitigations": [
          "Prevent unknown or malicious software from loading through using an allowlist policy.",
          "Properly restrict the location of the software being used.",
          "Leverage security kernel modules providing advanced access control and process restrictions like SELinux.",
          "Monitor API calls like CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, QueueUserAPC, and similar for Windows.",
          "Monitor API calls like ptrace system call, use of LD_PRELOAD environment variable, dlfcn dynamic linking API calls, and similar for Linux.",
          "Monitor API calls like SetWindowsHookEx and SetWinEventHook which install hook procedures for Windows.",
          "Monitor processes and command-line arguments for unknown behavior related to code injection."
        ],
        "relatedAttackPatterns": [
          251
        ]
      },
      {
        "id": 641,
        "name": "DLL Side-Loading",
        "description": "An adversary places a malicious version of a Dynamic-Link Library (DLL) in the Windows Side-by-Side (WinSxS) directory to trick the operating system into loading this malicious DLL instead of a legitimate DLL. Programs specify the location of the DLLs to load via the use of WinSxS manifests or DLL redirection and if they aren't used then Windows searches in a predefined set of directories to locate the file. If the applications improperly specify a required DLL or WinSxS manifests aren't explicit about the characteristics of the DLL to be loaded, they can be vulnerable to side-loading.",
        "prerequisites": [
          "The target must fail to verify the integrity of the DLL before using them."
        ],
        "relatedWeaknesses": [
          706
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Prevent unknown DLLs from loading through using an allowlist policy.",
          "Patch installed applications as soon as new updates become available.",
          "Properly restrict the location of the software being used.",
          "Use of sxstrace.exe on Windows as well as manual inspection of the manifests.",
          "Require code signing and avoid using relative paths for resources."
        ],
        "relatedAttackPatterns": [
          159
        ]
      },
      {
        "id": 642,
        "name": "Replace Binaries",
        "description": "Adversaries know that certain binaries will be regularly executed as part of normal processing. If these binaries are not protected with the appropriate file system permissions, it could be possible to replace them with malware. This malware might be executed at higher system permission levels. A variation of this pattern is to discover self-extracting installation packages that unpack binaries to directories with weak file permissions which it does not clean up appropriately. These binaries can be replaced by malware, which can then be executed.",
        "prerequisites": [
          "The attacker must be able to place the malicious binary on the target machine."
        ],
        "relatedWeaknesses": [
          732
        ],
        "mitigations": [
          "Insure that binaries commonly used by the system have the correct file permissions. Set operating system policies that restrict privilege elevation of non-Administrators. Use auditing tools to observe changes to system services."
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 643,
        "name": "Identify Shared Files/Directories on System",
        "description": "An adversary discovers connections between systems by exploiting the target system's standard practice of revealing them in searchable, common areas. Through the identification of shared folders/drives between systems, the adversary may further their goals of locating and collecting sensitive information/files, or map potential routes for lateral movement within the network.",
        "prerequisites": [
          "The adversary must have obtained logical access to the system by some means (e.g., via obtained credentials or planting malware on the system)."
        ],
        "relatedWeaknesses": [
          267,
          200
        ],
        "consequences": [
          "Confidentiality Read Data The adversary is potentially able to identify the location of sensitive information or lateral pathways through the network."
        ],
        "mitigations": [
          "Identify unnecessary system utilities or potentially malicious software that may contain functionality to identify network share information, and audit and/or block them by using allowlist tools."
        ],
        "relatedAttackPatterns": [
          309,
          561,
          545,
          165
        ]
      },
      {
        "id": 644,
        "name": "Use of Captured Hashes (Pass The Hash)",
        "description": "An adversary obtains (i.e. steals or purchases) legitimate Windows domain credential hash values to access systems within the domain that leverage the Lan Man (LM) and/or NT Lan Man (NTLM) authentication protocols.",
        "prerequisites": [
          "The system/application is connected to the Windows domain.",
          "The system/application leverages the Lan Man (LM) and/or NT Lan Man (NTLM) authentication protocols.",
          "The adversary possesses known Windows credential hash value pairs that exist on the target domain."
        ],
        "relatedWeaknesses": [
          522,
          836,
          308,
          294,
          308
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Prevent the use of Lan Man and NT Lan Man authentication on severs and apply patch KB2871997 to Windows 7 and higher systems.",
          "Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network.",
          "Monitor system and domain logs for abnormal credential access.",
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Leverage system penetration testing and other defense in depth methods to determine vulnerable systems within a domain."
        ],
        "relatedAttackPatterns": [
          653,
          151,
          165,
          549,
          545
        ]
      },
      {
        "id": 645,
        "name": "Use of Captured Tickets (Pass The Ticket)",
        "description": "An adversary uses stolen Kerberos tickets to access systems/resources that leverage the Kerberos authentication protocol. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. An adversary can obtain any one of these tickets (e.g. Service Ticket, Ticket Granting Ticket, Silver Ticket, or Golden Ticket) to authenticate to a system/resource without needing the account's credentials. Depending on the ticket obtained, the adversary may be able to access a particular resource or generate TGTs for any account within an Active Directory Domain.",
        "prerequisites": [
          "The adversary needs physical access to the victim system.",
          "The use of a third-party credential harvesting tool."
        ],
        "relatedWeaknesses": [
          522,
          294,
          308
        ],
        "consequences": [
          "Integrity Gain Privileges"
        ],
        "mitigations": [
          "Reset the built-in KRBTGT account password twice to invalidate the existence of any current Golden Tickets and any tickets derived from them.",
          "Monitor system and domain logs for abnormal access."
        ],
        "relatedAttackPatterns": [
          652,
          151
        ]
      },
      {
        "id": 646,
        "name": "Peripheral Footprinting",
        "description": "Adversaries may attempt to obtain information about attached peripheral devices and components connected to a computer system. Examples may include discovering the presence of iOS devices by searching for backups, analyzing the Windows registry to determine what USB devices have been connected, or infecting a victim system with malware to report when a USB device has been connected. This may allow the adversary to gain additional insight about the system or network environment, which may be useful in constructing further attacks.",
        "prerequisites": [
          "The adversary needs either physical or remote access to the victim system."
        ],
        "relatedWeaknesses": [
          200
        ],
        "mitigations": [
          "Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 647,
        "name": "Collect Data from Registries",
        "description": "An adversary exploits a weakness in authorization to gather system-specific data and sensitive information within a registry (e.g., Windows Registry, Mac plist). These contain information about the system configuration, software, operating system, and security. The adversary can leverage information gathered in order to carry out further attacks.",
        "prerequisites": [
          "The adversary must have obtained logical access to the system by some means (e.g., via obtained credentials or planting malware on the system).",
          "The adversary must have capability to navigate the operating system to peruse the registry."
        ],
        "relatedWeaknesses": [
          285
        ],
        "consequences": [
          "Confidentiality Read Data The adversary is able to read sensitive information about the system in the registry."
        ],
        "mitigations": [
          "Employ a robust and layered defensive posture in order to prevent unauthorized users on your system.",
          "Employ robust identification and audit/blocking via using an allowlist of applications on your system. Unnecessary applications, utilities, and configurations will have a presence in the system registry that can be leveraged by an adversary through this attack pattern."
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 648,
        "name": "Collect Data from Screen Capture",
        "description": "An adversary gathers sensitive information by exploiting the system's screen capture functionality. Through screenshots, the adversary aims to see what happens on the screen over the course of an operation. The adversary can leverage information gathered in order to carry out further attacks.",
        "prerequisites": [
          "The adversary must have obtained logical access to the system by some means (e.g., via obtained credentials or planting malware on the system)."
        ],
        "relatedWeaknesses": [
          267
        ],
        "consequences": [
          "Confidentiality Read Data The adversary is able to capture potentially sensitive information and processes as they appear on the screen."
        ],
        "mitigations": [
          "Identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using allowlist tools.",
          "While screen capture is a legitimate and practical function, certain situations and context may require the disabling of this feature."
        ],
        "relatedAttackPatterns": [
          150
        ]
      },
      {
        "id": 649,
        "name": "Adding a Space to a File Extension",
        "description": "An adversary adds a space character to the end of a file extension and takes advantage of an application that does not properly neutralize trailing special elements in file names. This extra space, which can be difficult for a user to notice, affects which default application is used to operate on the file and can be leveraged by the adversary to control execution.",
        "prerequisites": [
          "The use of the file must be controlled by the file extension."
        ],
        "relatedWeaknesses": [
          46
        ],
        "consequences": [
          "Confidentiality Integrity Availability Execute Unauthorized Commands"
        ],
        "mitigations": [
          "File extensions should be checked to see if non-visible characters are being included."
        ],
        "relatedAttackPatterns": [
          635
        ]
      },
      {
        "id": 650,
        "name": "Upload a Web Shell to a Web Server",
        "description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
        "prerequisites": [
          "The web server is susceptible to one of the various web application exploits that allows for uploading a shell file."
        ],
        "relatedWeaknesses": [
          287,
          553
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Integrity Availability Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Make sure your web server is up-to-date with all patches to protect against known vulnerabilities.",
          "Ensure that the file permissions in directories on the web server from which files can be execute is set to the \"least privilege\" settings, and that those directories contents is controlled by an allowlist."
        ],
        "relatedAttackPatterns": [
          17
        ]
      },
      {
        "id": 651,
        "name": "Eavesdropping",
        "description": "An adversary intercepts a form of communication (e.g. text, audio, video) by way of software (e.g., microphone and audio recording application), hardware (e.g., recording equipment), or physical means (e.g., physical proximity). The goal of eavesdropping is typically to gain unauthorized access to sensitive information about the target for financial, personal, political, or other gains. Eavesdropping is different from a sniffing attack as it does not take place on a network-based communication channel (e.g., IP traffic). Instead, it entails listening in on the raw audio source of a conversation between two or more parties.",
        "prerequisites": [
          "The adversary typically requires physical proximity to the target's environment, whether for physical eavesdropping or for placing recording equipment. This is not always the case for software-based eavesdropping, if the adversary has the capability to install malware on the target system that can activate a microphone and record audio digitally."
        ],
        "relatedWeaknesses": [
          200
        ],
        "consequences": [
          "Confidentiality Other The adversary gains unauthorized access to information."
        ],
        "mitigations": [
          "Be mindful of your surroundings when discussing sensitive information in public areas.",
          "Implement proper software restriction policies to only allow authorized software on your environment. Use of anti-virus and other security monitoring and detecting tools can aid in this too. Closely monitor installed software for unusual behavior or activity, and implement patches as soon as they become available.",
          "If possible, physically disable the microphone on your machine if it is not needed."
        ],
        "relatedAttackPatterns": [
          117
        ]
      },
      {
        "id": 652,
        "name": "Use of Known Kerberos Credentials",
        "description": "An adversary obtains (i.e. steals or purchases) legitimate Kerberos credentials (e.g. Kerberos service account userID/password or Kerberos Tickets) with the goal of achieving authenticated access to additional systems, applications, or services within the domain.",
        "prerequisites": [
          "The system/application leverages Kerberos authentication.",
          "The system/application uses one factor password-based authentication, SSO, and/or cloud-based authentication for Kerberos service accounts.",
          "The system/application does not have a sound password policy that is being enforced for Kerberos service accounts.",
          "The system/application does not implement an effective password throttling mechanism for authenticating to Kerberos service accounts.",
          "The targeted network allows for network sniffing attacks to succeed."
        ],
        "relatedWeaknesses": [
          522,
          307,
          308,
          309,
          262,
          263,
          654,
          294,
          836
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Create a strong password policy and ensure that your system enforces this policy for Kerberos service accounts.",
          "Ensure Kerberos service accounts are not reusing username/password combinations for multiple systems, applications, or services.",
          "Do not reuse Kerberos service account credentials across systems.",
          "Deny remote use of Kerberos service account credentials to log into domain systems.",
          "Do not allow Kerberos service accounts to be a local administrator on more than one system.",
          "Enable at least AES Kerberos encryption for tickets.",
          "Monitor system and domain logs for abnormal credential access."
        ],
        "relatedAttackPatterns": [
          560,
          151
        ]
      },
      {
        "id": 653,
        "name": "Use of Known Operating System Credentials",
        "description": "An adversary guesses or obtains (i.e. steals or purchases) legitimate operating system credentials (e.g. userID/password) to achieve authentication and to perform authorized actions on the system, under the guise of an authenticated user or service. This applies to any Operating System.",
        "prerequisites": [
          "The system/application uses one factor password-based authentication, SSO, and/or cloud-based authentication.",
          "The system/application does not have a sound password policy that is being enforced.",
          "The system/application does not implement an effective password throttling mechanism.",
          "The adversary possesses a list of known user accounts and corresponding passwords that may exist on the target."
        ],
        "relatedWeaknesses": [
          522,
          307,
          308,
          309,
          262,
          263,
          654
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges",
          "Confidentiality Authorization Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the network.",
          "Create a strong password policy and ensure that your system enforces this policy.",
          "Ensure users are not reusing username/password combinations for multiple systems, applications, or services.",
          "Do not reuse local administrator account credentials across systems.",
          "Deny remote use of local admin credentials to log into domain systems.",
          "Do not allow accounts to be a local administrator on more than one system.",
          "Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.",
          "Monitor system and domain logs for abnormal credential access."
        ],
        "relatedAttackPatterns": [
          560,
          151
        ]
      },
      {
        "id": 654,
        "name": "Credential Prompt Impersonation",
        "description": "An adversary, through a previously installed malicious application, impersonates a credential prompt in an attempt to steal a user's credentials.",
        "prerequisites": [
          "The adversary must already have access to the target system via some means.",
          "A legitimate task must exist that an adversary can impersonate to glean credentials."
        ],
        "relatedWeaknesses": [
          1021
        ],
        "consequences": [
          "Access Control Authentication Gain Privileges"
        ],
        "mitigations": [
          "The only known mitigation to this attack is to avoid installing the malicious application on the device. However, to impersonate a running task the malicious application does need the GET_TASKS permission to be able to query the task list, and being suspicious of applications with that permission can help."
        ],
        "relatedAttackPatterns": [
          504
        ]
      },
      {
        "id": 655,
        "name": "Avoid Security Tool Identification by Adding Data",
        "description": "An adversary adds data to a file to increase the file size beyond what security tools are capable of handling in an attempt to mask their actions. In addition to this, adding data to a file also changes the file's hash, frustrating security tools that look for known bad files by their hash.",
        "consequences": [
          "Accountability Hide Activities Bypass Protection Mechanism",
          "Integrity Modify Data"
        ],
        "relatedAttackPatterns": [
          572
        ]
      },
      {
        "id": 656,
        "name": "Voice Phishing",
        "description": "An adversary targets users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Voice Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a voice call, rather than email. The user is enticed to provide sensitive information by the adversary, who masquerades as a legitimate employee of the alleged organization. Voice Phishing attacks deviate from standard Phishing attacks, in that a user doesn't typically interact with a compromised website to provide sensitive information and instead provides this information verbally. Voice Phishing attacks can also be initiated by either the adversary in the form of a \"cold call\" or by the victim if calling an illegitimate telephone number.",
        "prerequisites": [
          "An adversary needs phone numbers to initiate contact with the victim, in addition to a legitimate-looking telephone number to call the victim from.",
          "An adversary needs to correctly guess the entity with which the victim does business and impersonate it. Most of the time phishers just use the most popular banks/services and send out their \"hooks\" to many potential victims.",
          "An adversary needs to have a sufficiently compelling call to action to prompt the user to take action.",
          "If passively conducting this attack via a spoofed website, replicated website needs to look extremely similar to the original website and the URL used to get to that website needs to look like the real URL of the said business entity."
        ],
        "consequences": [
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Do not accept calls from unknown numbers or from numbers that may be flagged as spam. Also, do not call numbers that appear on-screen after being unexpectedly redirected to potentially malicious websites. In either case, do not provide sensitive information over voice calls that are not legitimately initiated. Instead, call your Bank, PayPal, eBay, etc., via the number on their public-facing website and inquire about the problem."
        ],
        "relatedAttackPatterns": [
          98
        ]
      },
      {
        "id": 657,
        "name": "Malicious Automated Software Update via Spoofing",
        "description": "An attackers uses identify or content spoofing to trick a client into performing an automated software update from a malicious source. A malicious automated software update that leverages spoofing can include content or identity spoofing as well as protocol spoofing. Content or identity spoofing attacks can trigger updates in software by embedding scripted mechanisms within a malicious web page, which masquerades as a legitimate update source. Scripting mechanisms communicate with software components and trigger updates from locations specified by the attackers' server. The result is the client believing there is a legitimate software update available but instead downloading a malicious update from the attacker.",
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Access Control Availability Confidentiality Execute Unauthorized Commands"
        ],
        "relatedAttackPatterns": [
          186
        ]
      },
      {
        "id": 660,
        "name": "Root/Jailbreak Detection Evasion via Hooking",
        "description": "An adversary forces a non-restricted mobile application to load arbitrary code or code files, via Hooking, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Adversaries may further leverage these capabilities to escalate privileges or bypass access control on legitimate applications. Although many mobile applications check if a mobile device is Rooted/Jailbroken prior to authorized use of the application, adversaries may be able to \"hook\" code in order to circumvent these checks. Successfully evading Root/Jailbreak detection allows an adversary to execute administrative commands, obtain confidential data, impersonate legitimate users of the application, and more.",
        "prerequisites": [
          "The targeted application must be non-restricted to allow code hooking."
        ],
        "relatedWeaknesses": [
          829
        ],
        "consequences": [
          "Integrity Authorization Execute Unauthorized Commands Through Root/Jailbreak Detection Evasion via Hooking, the adversary compromises the integrity of the application.",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Access Control Read Data An adversary may leverage Root/Jailbreak Detection Evasion via Hooking in order to obtain sensitive information."
        ],
        "mitigations": [
          "Ensure mobile applications are signed appropriately to avoid code inclusion via hooking.",
          "Inspect the application's memory for suspicious artifacts, such as shared objects/JARs or dylibs, after other Root/Jailbreak detection methods.",
          "Inspect the application's stack trace for suspicious method calls.",
          "Allow legitimate native methods, and check for non-allowed native methods during Root/Jailbreak detection methods.",
          "For iOS applications, ensure application methods do not originate from outside of Apple's SDK."
        ],
        "relatedAttackPatterns": [
          251
        ]
      },
      {
        "id": 661,
        "name": "Root/Jailbreak Detection Evasion via Debugging",
        "description": "An adversary inserts a debugger into the program entry point of a mobile application to modify the application binary, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Rooting/Jailbreaking a mobile device also provides users with access to system debuggers and disassemblers, which can be leveraged to exploit applications by dumping the application's memory at runtime in order to remove or bypass signature verification methods. This further allows the adversary to evade Root/Jailbreak detection mechanisms, which can result in execution of administrative commands, obtaining confidential data, impersonating legitimate users of the application, and more.",
        "prerequisites": [
          "A debugger must be able to be inserted into the targeted application."
        ],
        "relatedWeaknesses": [
          489
        ],
        "consequences": [
          "Integrity Authorization Execute Unauthorized Commands Through Root/Jailbreak Detection Evasion via Debugging, the adversary compromises the integrity of the application.",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Access Control Read Data An adversary may leverage Root/Jailbreak Detection Evasion via Debugging in order to obtain sensitive information."
        ],
        "mitigations": [
          "Instantiate checks within the application code that ensures debuggers are not attached."
        ],
        "relatedAttackPatterns": [
          121,
          68,
          660
        ]
      },
      {
        "id": 662,
        "name": "Adversary in the Browser (AiTB)",
        "description": "An adversary exploits security vulnerabilities or inherent functionalities of a web browser, in order to manipulate traffic between two endpoints.",
        "prerequisites": [
          "The adversary must install or convince a user to install a Trojan.",
          "There are two components communicating with each other.",
          "An attacker is able to identify the nature and mechanism of communication between the two target components.",
          "Strong mutual authentication is not used between the two target components yielding opportunity for adversarial interposition.",
          "For browser pivoting, the SeDebugPrivilege and a high-integrity process must both exist to execute this attack."
        ],
        "relatedWeaknesses": [
          300,
          494
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Access Control Authorization Gain Privileges",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Ensure software and applications are only downloaded from legitimate and reputable sources, in addition to conducting integrity checks on the downloaded component.",
          "Leverage anti-malware tools, which can detect Trojan Horse malware.",
          "Use strong, out-of-band mutual authentication to always fully authenticate both ends of any communications channel.",
          "Limit user permissions to prevent browser pivoting.",
          "Ensure browser sessions are regularly terminated and when their effective lifetime ends."
        ],
        "relatedAttackPatterns": [
          94
        ]
      },
      {
        "id": 663,
        "name": "Exploitation of Transient Instruction Execution",
        "description": "An adversary exploits a hardware design flaw in a CPU implementation of transient instruction execution to expose sensitive data and bypass/subvert access control over restricted resources. Typically, the adversary conducts a covert channel attack to target non-discarded microarchitectural changes caused by transient executions such as speculative execution, branch prediction, instruction pipelining, and/or out-of-order execution. The transient execution results in a series of instructions (gadgets) which construct covert channel and access/transfer the secret data.",
        "prerequisites": [
          "The adversary needs at least user execution access to a system and a maliciously crafted program/application/process with unprivileged code to misuse transient instruction set execution of the CPU."
        ],
        "relatedWeaknesses": [
          1037,
          1303,
          1264
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Access Control Bypass Protection Mechanism",
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Implementation: DAWG (Dynamically Allocated Way Guard) - processor cache properly divided between different programs/processes that don't share resources",
          "Implementation: KPTI (Kernel Page-Table Isolation) to completely separate user-space and kernel space page tables",
          "Configuration: Architectural Design of Microcode to limit abuse of speculative execution and out-of-order execution",
          "Configuration: Disable SharedArrayBuffer for Web Browsers",
          "Configuration: Disable Copy-on-Write between Cloud VMs",
          "Configuration: Privilege Checks on Cache Flush Instructions",
          "Implementation: Non-inclusive Cache Memories to prevent Flush+Reload Attacks"
        ],
        "relatedAttackPatterns": [
          74,
          184,
          141,
          212,
          124,
          180
        ]
      },
      {
        "id": 664,
        "name": "Server Side Request Forgery",
        "description": "An adversary exploits improper input validation by submitting maliciously crafted input to a target application running on a server, with the goal of forcing the server to make a request either to itself, to web services running in the server’s internal network, or to external third parties. If successful, the adversary’s request will be made with the server’s privilege level, bypassing its authentication controls. This ultimately allows the adversary to access sensitive data, execute commands on the server’s network, and make external requests with the stolen identity of the server. Server Side Request Forgery attacks differ from Cross Site Request Forgery attacks in that they target the server itself, whereas CSRF attacks exploit an insecure user authentication mechanism to perform unauthorized actions on the user's behalf.",
        "prerequisites": [
          "Server must be running a web application that processes HTTP requests."
        ],
        "relatedWeaknesses": [
          918,
          20
        ],
        "consequences": [
          "Integrity Confidentiality Availability Modify Data",
          "Confidentiality Read Data",
          "Availability Resource Consumption"
        ],
        "mitigations": [
          "Handling incoming requests securely is the first line of action to mitigate this vulnerability. This can be done through URL validation.",
          "Further down the process flow, examining the response and verifying that it is as expected before sending would be another way to secure the server.",
          "Allowlist the DNS name or IP address of every service the web application is required to access is another effective security measure. This ensures the server cannot make external requests to arbitrary services.",
          "Requiring authentication for local services adds another layer of security between the adversary and internal services running on the server. By enforcing local authentication, an adversary will not gain access to all internal services only with access to the server.",
          "Enforce the usage of relevant URL schemas. By limiting requests be made only through HTTP or HTTPS, for example, attacks made through insecure schemas such as file://, ftp://, etc. can be prevented."
        ],
        "relatedAttackPatterns": [
          115
        ]
      },
      {
        "id": 665,
        "name": "Exploitation of Thunderbolt Protection Flaws",
        "description": "An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
        "prerequisites": [
          "The adversary needs at least a few minutes of physical access to a system with an open Thunderbolt port, version 3 or lower, and an external thunderbolt device controlled by the adversary with maliciously crafted software and firmware, via an SPI Programming device, to exploit weaknesses in security protections."
        ],
        "relatedWeaknesses": [
          345,
          353,
          288,
          1188,
          862
        ],
        "consequences": [
          "Access Control Bypass Protection Mechanism",
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Implementation: Kernel Direct Memory Access Protection",
          "Configuration: Enable UEFI option USB Passthrough mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface",
          "Configuration: Enable UEFI option DisplayPort mode - Thunderbolt 3 system port operates as video-only DP interface",
          "Configuration: Enable UEFI option Mixed USB/DisplayPort mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface with support for DP mode",
          "Configuration: Set Security Level to SL3 for Thunderbolt 2 system port",
          "Configuration: Disable PCIe tunneling to set Security Level to SL3",
          "Configuration: Disable Boot Camp upon MacOS systems"
        ],
        "relatedAttackPatterns": [
          276,
          390,
          458,
          148,
          151
        ]
      },
      {
        "id": 666,
        "name": "BlueSmacking",
        "description": "An adversary uses Bluetooth flooding to transfer large packets to Bluetooth enabled devices over the L2CAP protocol with the goal of creating a DoS. This attack must be carried out within close proximity to a Bluetooth enabled device.",
        "prerequisites": [
          "The system/application has Bluetooth enabled."
        ],
        "relatedWeaknesses": [
          404
        ],
        "consequences": [
          "Availability Unreliable Execution Resource Consumption"
        ],
        "mitigations": [
          "Disable Bluetooth when not being used.",
          "When using Bluetooth, set it to hidden or non-discoverable mode."
        ],
        "relatedAttackPatterns": [
          125
        ]
      },
      {
        "id": 667,
        "name": "Bluetooth Impersonation AttackS (BIAS)",
        "description": "An adversary disguises the MAC address of their Bluetooth enabled device to one for which there exists an active and trusted connection and authenticates successfully. The adversary can then perform malicious actions on the target Bluetooth device depending on the target’s capabilities.",
        "prerequisites": [
          "Knowledge of a target device's list of trusted connections."
        ],
        "relatedWeaknesses": [
          290
        ],
        "consequences": [
          "Integrity An adversary will be impersonating another Bluetooth device, and may gain access to information pertaining to that user along with the ability to manipulate other information.",
          "Confidentiality An adversary will have unauthorized access to information."
        ],
        "mitigations": [
          "Disable Bluetooth in public places.",
          "Verify incoming Bluetooth connections; do not automatically trust.",
          "Change default PIN passwords and always use one when connecting."
        ],
        "relatedAttackPatterns": [
          616
        ]
      },
      {
        "id": 668,
        "name": "Key Negotiation of Bluetooth Attack (KNOB)",
        "description": "An adversary can exploit a flaw in Bluetooth key negotiation allowing them to decrypt information sent between two devices communicating via Bluetooth. The adversary uses an Adversary in the Middle setup to modify packets sent between the two devices during the authentication process, specifically the entropy bits. Knowledge of the number of entropy bits will allow the attacker to easily decrypt information passing over the line of communication.",
        "prerequisites": [
          "Person in the Middle network setup."
        ],
        "relatedWeaknesses": [
          425,
          285,
          693
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Bypass Protection Mechanism",
          "Integrity Modify Data"
        ],
        "mitigations": [
          "Newer Bluetooth firmwares ensure that the KNOB is not negotaited in plaintext. Update your device."
        ],
        "relatedAttackPatterns": [
          115,
          148
        ]
      },
      {
        "id": 669,
        "name": "Alteration of a Software Update",
        "description": "An adversary with access to an organization’s software update infrastructure inserts malware into the content of an outgoing update to fielded systems where a wide range of malicious effects are possible. With the same level of access, the adversary can alter a software update to perform specific malicious acts including granting the adversary control over the software’s normal functionality.",
        "prerequisites": [
          "An adversary would need to have penetrated an organization’s software update infrastructure including gaining access to components supporting the configuration management of software versions and updates related to the software maintenance of customer systems."
        ],
        "consequences": [
          "Access Control Gain Privileges",
          "Authorization Execute Unauthorized Commands",
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Have a Software Assurance Plan that includes maintaining strict configuration management control of source code, object code and software development, build and distribution tools; manual code reviews and static code analysis for developmental software; and tracking of all storage and movement of code.",
          "Require elevated privileges for distribution of software and software updates."
        ],
        "relatedAttackPatterns": [
          184,
          673
        ]
      },
      {
        "id": 670,
        "name": "Software Development Tools Maliciously Altered",
        "description": "An adversary with the ability to alter tools used in a development environment causes software to be developed with maliciously modified tools. Such tools include requirements management and database tools, software design tools, configuration management tools, compilers, system build tools, and software performance testing and load testing tools. The adversary then carries out malicious acts once the software is deployed including malware infection of other systems to support further compromises.",
        "prerequisites": [
          "An adversary would need to have access to a targeted developer’s development environment and in particular to tools used to design, create, test and manage software, where the adversary could ensure malicious code is included in software packages built through alteration or substitution of tools in the environment used in the development of software."
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands",
          "Access Control Gain Privileges",
          "Confidentiality Modify Data Read Data"
        ],
        "mitigations": [
          "Have a security concept of operations (CONOPS) for the development environment that includes: Maintaining strict security administration and configuration management of requirements management and database tools, software design tools, configuration management tools, compilers, system build tools, and software performance testing and load testing tools.",
          "Avoid giving elevated privileges to developers."
        ],
        "relatedAttackPatterns": [
          444,
          669
        ]
      },
      {
        "id": 671,
        "name": "Requirements for ASIC Functionality Maliciously Altered",
        "description": "An adversary with access to functional requirements for an application specific integrated circuit (ASIC), a chip designed/customized for a singular particular use, maliciously alters requirements derived from originating capability needs. In the chip manufacturing process, requirements drive the chip design which, when the chip is fully manufactured, could result in an ASIC which may not meet the user’s needs, contain malicious functionality, or exhibit other anomalous behaviors thereby affecting the intended use of the ASIC.",
        "prerequisites": [
          "An adversary would need to have access to a foundry’s or chip maker’s requirements management system that stores customer requirements for ASICs, requirements upon which the design of the ASIC is based."
        ],
        "consequences": [
          "Integrity Alter Execution Logic"
        ],
        "mitigations": [
          "Utilize DMEA’s (Defense Microelectronics Activity) Trusted Foundry Program members for acquisition of microelectronic components.",
          "Ensure that each supplier performing hardware development implements comprehensive, security-focused configuration management including for hardware requirements and design.",
          "Require that provenance of COTS microelectronic components be known whenever procured.",
          "Conduct detailed vendor assessment before acquiring COTS hardware."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 672,
        "name": "Malicious Code Implanted During Chip Programming",
        "description": "During the programming step of chip manufacture, an adversary with access and necessary technical skills maliciously alters a chip’s intended program logic to produce an effect intended by the adversary when the fully manufactured chip is deployed and in operational use. Intended effects can include the ability of the adversary to remotely control a host system to carry out malicious acts.",
        "prerequisites": [
          "An adversary would need to have access to a foundry’s or chip maker’s development/production environment where programs for specific chips are developed, managed and uploaded into targeted chips prior to distribution or sale."
        ],
        "consequences": [
          "Integrity Alter Execution Logic"
        ],
        "mitigations": [
          "Utilize DMEA’s (Defense Microelectronics Activity) Trusted Foundry Program members for acquisition of microelectronic components.",
          "Ensure that each supplier performing hardware development implements comprehensive, security-focused configuration management of microcode and microcode generating tools and software.",
          "Require that provenance of COTS microelectronic components be known whenever procured.",
          "Conduct detailed vendor assessment before acquiring COTS hardware."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 673,
        "name": "Developer Signing Maliciously Altered Software",
        "description": "Software produced by a reputable developer is clandestinely infected with malicious code and then digitally signed by the unsuspecting developer, where the software has been altered via a compromised software development or build process prior to being signed. The receiver or user of the software has no reason to believe that it is anything but legitimate and proceeds to deploy it to organizational systems. This attack differs from CAPEC-206, since the developer is inadvertently signing malicious code they believe to be legitimate and which they are unware of any malicious modifications.",
        "prerequisites": [
          "An adversary would need to have access to a targeted developer’s software development environment, including to their software build processes, where the adversary could ensure code maliciously tainted prior to a build process is included in software packages built."
        ],
        "consequences": [
          "Integrity Confidentiality Read Data Modify Data",
          "Access Control Authorization Gain Privileges Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Have a security concept of operations (CONOPS) for the IDE that includes: Protecting the IDE via logical isolation using firewall and DMZ technologies/architectures; Maintaining strict security administration and configuration management of configuration management tools, developmental software and dependency code repositories, compilers, and system build tools.",
          "Employ intrusion detection and malware detection capabilities on IDE systems where feasible."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 674,
        "name": "Design for FPGA Maliciously Altered",
        "description": "An adversary alters the functionality of a field-programmable gate array (FPGA) by causing an FPGA configuration memory chip reload in order to introduce a malicious function that could result in the FPGA performing or enabling malicious functions on a host system. Prior to the memory chip reload, the adversary alters the program for the FPGA by adding a function to impact system operation.",
        "prerequisites": [
          "An adversary would need to have access to FPGA programming/configuration-related systems in a chip maker’s development environment where FPGAs can be initially configured prior to delivery to a customer or have access to such systems in a customer facility where end-user FPGA configuration/reconfiguration can be performed."
        ],
        "consequences": [
          "Integrity Alter Execution Logic"
        ],
        "mitigations": [
          "Utilize DMEA’s (Defense Microelectronics Activity) Trusted Foundry Program members for acquisition of microelectronic components.",
          "Ensure that each supplier performing hardware development implements comprehensive, security-focused configuration management including for FPGA programming and program uploads to FPGA chips.",
          "Require that provenance of COTS microelectronic components be known whenever procured.",
          "Conduct detailed vendor assessment before acquiring COTS hardware."
        ],
        "relatedAttackPatterns": [
          447
        ]
      },
      {
        "id": 675,
        "name": "Retrieve Data from Decommissioned Devices",
        "description": "An adversary obtains decommissioned, recycled, or discarded systems and devices that can include an organization’s intellectual property, employee data, and other types of controlled information. Systems and devices that have reached the end of their lifecycles may be subject to recycle or disposal where they can be exposed to adversarial attempts to retrieve information from internal memory chips and storage devices that are part of the system.",
        "prerequisites": [
          "An adversary needs to have access to electronic data processing equipment being recycled or disposed of (e.g., laptops, servers) at a collection location and the ability to take control of it for the purpose of exploiting its content."
        ],
        "relatedWeaknesses": [
          1266
        ],
        "consequences": [
          "Accountability Bypass Protection Mechanism"
        ],
        "mitigations": [
          "Backup device data before erasure to retain intellectual property and inside knowledge.",
          "Overwrite data on device rather than deleting. Deleted data can still be recovered, even if the device trash can is emptied. Rewriting data removes any trace of the old data. Performing multiple overwrites followed by a zeroing of the device (overwriting with all zeros) is good practice.",
          "Use a secure erase software.",
          "Physically destroy the device if it is not intended to be reused. Using a specialized service to disintegrate, burn, melt or pulverize the device can be effective, but if those services are inaccessible, drilling nails or holes, or smashing the device with a hammer can be effective. Do not burn, microwave, or pour acid on a hard drive.",
          "Physically destroy memory and SIM cards for mobile devices not intended to be reused.",
          "Ensure that the user account has been terminated or switched to a new device before destroying."
        ],
        "relatedAttackPatterns": [
          116,
          37
        ]
      },
      {
        "id": 676,
        "name": "NoSQL Injection",
        "description": "An adversary targets software that constructs NoSQL statements based on user input or with parameters vulnerable to operator replacement in order to achieve a variety of technical impacts such as escalating privileges, bypassing authentication, and/or executing code.",
        "prerequisites": [
          "Awareness of the technology stack being leveraged by the target application.",
          "NoSQL queries used by the application to store, retrieve, or modify data.",
          "User-controllable input that is not properly validated by the application as part of NoSQL queries.",
          "Target potentially susceptible to operator replacement attacks."
        ],
        "relatedWeaknesses": [
          943,
          1286
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as relevant NoSQL and JavaScript content. NoSQL-specific keywords, such as $ne, $eq or $gt for MongoDB, must be filtered in addition to characters such as a single-quote(') or semicolons (;) based on the context in which they appear. Validation should also extend to expected types.",
          "If possible, leverage safe APIs (e.g., PyMongo and Flask-PyMongo for Python and MongoDB) for queries as opposed to building queries from strings.",
          "Ensure the most recent version of a NoSQL database and it's corresponding API are used by the application.",
          "Use of custom error pages - Adversaries can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.",
          "Exercise the principle of Least Privilege with regards to application accounts to minimize damage if a NoSQL injection attack is successful.",
          "If using MongoDB, disable server-side JavaScript execution and leverage a sanitization module such as \"mongo-sanitize\".",
          "If using PHP with MongoDB, ensure all special query operators (starting with $) use single quotes to prevent operator replacement attacks.",
          "Additional mitigations will depend on the NoSQL database, API, and programming language leveraged by the application."
        ],
        "relatedAttackPatterns": [
          248
        ]
      },
      {
        "id": 677,
        "name": "Server Motherboard Compromise",
        "description": "Malware is inserted in a server motherboard (e.g., in the flash memory) in order to alter server functionality from that intended. The development environment or hardware/software support activity environment is susceptible to an adversary inserting malicious software into hardware components during development or update.",
        "prerequisites": [
          "An adversary with access to hardware/software processes and tools within the development or hardware/software support environment can insert malicious software into hardware components during development or update/maintenance."
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Purchase IT systems, components and parts from government approved vendors whenever possible.",
          "Establish diversity among suppliers.",
          "Conduct rigorous threat assessments of suppliers.",
          "Require that Bills of Material (BoM) for critical parts and components be certified.",
          "Utilize contract language requiring contractors and subcontractors to flow down to subcontractors and suppliers SCRM and SCRA (Supply Chain Risk Assessment) requirements.",
          "Establish trusted supplier networks."
        ],
        "relatedAttackPatterns": [
          534
        ]
      },
      {
        "id": 678,
        "name": "System Build Data Maliciously Altered",
        "description": "During the system build process, the system is deliberately misconfigured by the alteration of the build data. Access to system configuration data files and build processes is susceptible to deliberate misconfiguration of the system.",
        "prerequisites": [
          "An adversary has access to the data files and processes used for executing system configuration and performing the build."
        ],
        "consequences": [
          "Integrity Execute Unauthorized Commands",
          "Access Control Gain Privileges",
          "Confidentiality Modify Data Read Data"
        ],
        "mitigations": [
          "Implement configuration management security practices that protect the integrity of software and associated data.",
          "Monitor and control access to the configuration management system.",
          "Harden centralized repositories against attack.",
          "Establish acceptance criteria for configuration management check-in to assure integrity.",
          "Plan for and audit the security of configuration management administration processes.",
          "Maintain configuration control over operational systems."
        ],
        "relatedAttackPatterns": [
          444
        ]
      },
      {
        "id": 679,
        "name": "Exploitation of Improperly Configured or Implemented Memory Protections",
        "description": "An adversary takes advantage of missing or incorrectly configured access control within memory to read/write data or inject malicious code into said memory.",
        "prerequisites": [
          "Access to the hardware being leveraged."
        ],
        "relatedWeaknesses": [
          1222,
          1252,
          1257,
          1260,
          1274,
          1282,
          1312,
          1316,
          1326
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Integrity Availability Execute Unauthorized Commands Run Arbitrary Code",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Ensure that protected and unprotected memory ranges are isolated and do not overlap.",
          "If memory regions must overlap, leverage memory priority schemes if memory regions can overlap.",
          "Ensure that original and mirrored memory regions apply the same protections.",
          "Ensure immutable code or data is programmed into ROM or write-once memory."
        ],
        "relatedAttackPatterns": [
          1,
          180
        ]
      },
      {
        "id": 680,
        "name": "Exploitation of Improperly Controlled Registers",
        "description": "An adversary exploits missing or incorrectly configured access control within registers to read/write data that is not meant to be obtained or modified by a user.",
        "prerequisites": [
          "Awareness of the hardware being leveraged.",
          "Access to the hardware being leveraged."
        ],
        "relatedWeaknesses": [
          1224,
          1231,
          1233,
          1262,
          1283
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Design proper access control policies for hardware register access from software and ensure these policies are implemented in accordance with the specified design.",
          "Ensure security lock bit protections are reviewed for design inconsistencies and common weaknesses.",
          "Test security lock programming flow in both pre-silicon and post-silicon environments.",
          "Leverage automated tools to test that values are not reprogrammable and that write-once fields lock on writing zeros.",
          "Ensure that measurement data is stored in registers that are read-only or otherwise have access controls that prevent modification by an untrusted agent."
        ],
        "relatedAttackPatterns": [
          1,
          180
        ]
      },
      {
        "id": 681,
        "name": "Exploitation of Improperly Controlled Hardware Security Identifiers",
        "description": "An adversary takes advantage of missing or incorrectly configured security identifiers (e.g., tokens), which are used for access control within a System-on-Chip (SoC), to read/write data or execute a given action.",
        "prerequisites": [
          "Awareness of the hardware being leveraged.",
          "Access to the hardware being leveraged."
        ],
        "relatedWeaknesses": [
          1259,
          1267,
          1270,
          1294,
          1302
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Confidentiality Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Review generation of security identifiers for design inconsistencies and common weaknesses.",
          "Review security identifier decoders for design inconsistencies and common weaknesses.",
          "Test security identifier definition, access, and programming flow in both pre-silicon and post-silicon environments."
        ],
        "relatedAttackPatterns": [
          1,
          180
        ]
      },
      {
        "id": 682,
        "name": "Exploitation of Firmware or ROM Code with Unpatchable Vulnerabilities",
        "description": "An adversary may exploit vulnerable code (i.e., firmware or ROM) that is unpatchable. Unpatchable devices exist due to manufacturers intentionally or inadvertently designing devices incapable of updating their software. Additionally, with updatable devices, the manufacturer may decide not to support the device and stop making updates to their software.",
        "prerequisites": [
          "Awareness of the hardware being leveraged.",
          "Access to the hardware being leveraged, either physically or remotely."
        ],
        "relatedWeaknesses": [
          1277,
          1310
        ],
        "consequences": [
          "Integrity Modify Data",
          "Confidentiality Read Data",
          "Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Design systems and products with the ability to patch firmware or ROM code after deployment to fix vulnerabilities.",
          "Make use of OTA (Over-the-air) updates so that firmware can be patched remotely either through manual or automatic means"
        ],
        "relatedAttackPatterns": [
          212
        ]
      },
      {
        "id": 690,
        "name": "Metadata Spoofing",
        "description": "An adversary alters the metadata of a resource (e.g., file, directory, repository, etc.) to present a malicious resource as legitimate/credible.",
        "prerequisites": [
          "Identification of a resource whose metadata is to be spoofed"
        ],
        "consequences": [
          "Integrity Modify Data",
          "Accountability Hide Activities",
          "Access Control Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Validate metadata of resources such as authors, timestamps, and statistics.",
          "Confirm the pedigree of open source packages and ensure the code being downloaded does not originate from another source.",
          "Even if the metadata is properly checked and a user believes it to be legitimate, there may still be a chance that they've been duped. Therefore, leverage automated testing techniques to determine where malicious areas of the code may exist."
        ]
      },
      {
        "id": 691,
        "name": "Spoof Open-Source Software Metadata",
        "description": "An adversary spoofs open-source software metadata in an attempt to masquerade malicious software as popular, maintained, and trusted.",
        "prerequisites": [
          "Identification of a popular open-source component whose metadata is to be spoofed."
        ],
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Integrity Modify Data",
          "Accountability Hide Activities",
          "Access Control Authorization Execute Unauthorized Commands Alter Execution Logic Gain Privileges"
        ],
        "mitigations": [
          "Before downloading open-source software, perform precursory metadata checks to determine the author(s), frequency of updates, when the software was last updated, and if the software is widely leveraged.",
          "Within package managers, look for conflicting or non-unique repository references to determine if multiple packages share the same repository reference.",
          "Reference vulnerability databases to determine if the software contains known vulnerabilities.",
          "Only download open-source software from reputable hosting sites or package managers.",
          "Only download open-source software that has been adequately signed by the developer(s). For repository commits/tags, look for the \"Verified\" status and for developers leveraging \"Vigilant Mode\" (GitHub) or similar modes.",
          "After downloading open-source software, ensure integrity values have not changed.",
          "Before executing or incorporating the software, leverage automated testing techniques (e.g., static and dynamic analysis) to determine if the software behaves maliciously."
        ],
        "relatedAttackPatterns": [
          690,
          184,
          444,
          630
        ]
      },
      {
        "id": 692,
        "name": "Spoof Version Control System Commit Metadata",
        "description": "An adversary spoofs metadata pertaining to a Version Control System (VCS) (e.g., Git) repository's commits to deceive users into believing that the maliciously provided software is frequently maintained and originates from a trusted source.",
        "prerequisites": [
          "Identification of a popular open-source repository whose metadata is to be spoofed."
        ],
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Integrity Modify Data",
          "Accountability Hide Activities",
          "Access Control Authorization Execute Unauthorized Commands Alter Execution Logic Gain Privileges"
        ],
        "mitigations": [
          "Before downloading open-source software, perform precursory metadata checks to determine the author(s), frequency of updates, when the software was last updated, and if the software is widely leveraged.",
          "Reference vulnerability databases to determine if the software contains known vulnerabilities.",
          "Only download open-source software from reputable hosting sites or package managers.",
          "Only download open-source software that has been adequately signed by the developer(s). For repository commits/tags, look for the \"Verified\" status and for developers leveraging \"Vigilant Mode\" (GitHub) or similar modes.",
          "After downloading open-source software, ensure integrity values have not changed.",
          "Before executing or incorporating the software, leverage automated testing techniques (e.g., static and dynamic analysis) to determine if the software behaves maliciously."
        ],
        "relatedAttackPatterns": [
          691
        ]
      },
      {
        "id": 693,
        "name": "StarJacking",
        "description": "An adversary spoofs software popularity metadata to deceive users into believing that a maliciously provided package is widely used and originates from a trusted source.",
        "prerequisites": [
          "Identification of a popular open-source package whose popularity metadata is to be used for the malicious package."
        ],
        "relatedWeaknesses": [
          494
        ],
        "consequences": [
          "Integrity Modify Data",
          "Accountability Hide Activities",
          "Access Control Authorization Execute Unauthorized Commands Alter Execution Logic Gain Privileges"
        ],
        "mitigations": [
          "Before downloading open-source packages, perform precursory metadata checks to determine the author(s), frequency of updates, when the software was last updated, and if the software is widely leveraged.",
          "Look for conflicting or non-unique repository references to determine if multiple packages share the same repository reference.",
          "Reference vulnerability databases to determine if the software contains known vulnerabilities.",
          "Only download open-source packages from reputable package managers.",
          "After downloading open-source packages, ensure integrity values have not changed.",
          "Before executing or incorporating the package, leverage automated testing techniques (e.g., static and dynamic analysis) to determine if the software behaves maliciously."
        ],
        "relatedAttackPatterns": [
          691
        ]
      },
      {
        "id": 694,
        "name": "System Location Discovery",
        "description": "An adversary collects information about the target system in an attempt to identify the system's geographical location. Information gathered could include keyboard layout, system language, and timezone. This information may benefit an adversary in confirming the desired target and/or tailoring further attacks.",
        "prerequisites": [
          "The adversary must have some level of access to the system and have a basic understanding of the operating system in order to query the appropriate sources for relevant information."
        ],
        "relatedWeaknesses": [
          497
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "To reduce the amount of information gathered, one could disable various geolocation features of the operating system not required for system operation."
        ],
        "relatedAttackPatterns": [
          169
        ]
      },
      {
        "id": 695,
        "name": "Repo Jacking",
        "description": "An adversary takes advantage of the redirect property of directly linked Version Control System (VCS) repositories to trick users into incorporating malicious code into their applications.",
        "prerequisites": [
          "Identification of a popular repository that may be directly referenced in numerous software applications",
          "A repository owner/maintainer who has recently changed their username or deleted their account"
        ],
        "relatedWeaknesses": [
          494,
          829
        ],
        "consequences": [
          "Integrity Read Data Modify Data",
          "Access Control Authorization Execute Unauthorized Commands Alter Execution Logic Gain Privileges"
        ],
        "mitigations": [
          "Leverage dedicated package managers instead of directly linking to VCS repositories.",
          "Utilize version pinning and lock files to prevent use of maliciously modified repositories.",
          "Implement \"vendoring\" (i.e., including third-party dependencies locally) and leverage automated testing techniques (e.g., static analysis) to determine if the software behaves maliciously.",
          "Leverage automated tools, such as Checkmarx's \"ChainJacking\" tool, to determine susceptibility to Repo Jacking attacks."
        ],
        "relatedAttackPatterns": [
          616
        ]
      },
      {
        "id": 696,
        "name": "Load Value Injection",
        "description": "An adversary exploits a hardware design flaw in a CPU implementation of transient instruction execution in which a faulting or assisted load instruction transiently forwards adversary-controlled data from microarchitectural buffers. By inducing a page fault or microcode assist during victim execution, an adversary can force legitimate victim execution to operate on the adversary-controlled data which is stored in the microarchitectural buffers. The adversary can then use existing code gadgets and side channel analysis to discover victim secrets that have not yet been flushed from microarchitectural state or hijack the system control flow.",
        "prerequisites": [
          "The adversary needs at least user execution access to a system and a maliciously crafted program/application/process with unprivileged code to misuse transient instruction set execution of the CPU.",
          "The CPU incorrectly transiently forwards values from microarchitectural buffers after faulting or assisted loads",
          "The adversary needs the ability to induce page faults or microcode assists on the target system.",
          "Code gadgets exist that allow the adversary to hijack transient execution and encode secrets into the microarchitectural state."
        ],
        "relatedWeaknesses": [
          1342
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Access Control Bypass Protection Mechanism",
          "Authorization Execute Unauthorized Commands"
        ],
        "mitigations": [
          "Do not allow the forwarding of data resulting from a faulting or assisted instruction. Some current mitigations claim to zero out the forwarded data, but this mitigation still does not suffice.",
          "Insert explicit “lfence” speculation barriers in software before potentially faulting or assisted loads. This halts transient execution until all previous instructions have been executed and ensures that the architecturally correct value is forwarded."
        ],
        "relatedAttackPatterns": [
          663
        ]
      },
      {
        "id": 697,
        "name": "DHCP Spoofing",
        "description": "An adversary masquerades as a legitimate Dynamic Host Configuration Protocol (DHCP) server by spoofing DHCP traffic, with the goal of redirecting network traffic or denying service to DHCP.",
        "prerequisites": [
          "The adversary must have access to a machine within the target LAN which can send DHCP offers to the target."
        ],
        "relatedWeaknesses": [
          923
        ],
        "consequences": [
          "Confidentiality Access Control Read Data",
          "Integrity Access Control Modify Data Execute Unauthorized Commands",
          "Availability Resource Consumption"
        ],
        "mitigations": [
          "Design: MAC-Forced Forwarding",
          "Implementation: Port Security and DHCP snooping",
          "Implementation: Network-based Intrusion Detection Systems"
        ],
        "relatedAttackPatterns": [
          194,
          158,
          94
        ]
      },
      {
        "id": 698,
        "name": "Install Malicious Extension",
        "description": "An adversary directly installs or tricks a user into installing a malicious extension into existing trusted software, with the goal of achieving a variety of negative technical impacts.",
        "prerequisites": [
          "The adversary must craft malware based on the type of software and system(s) they intend to exploit.",
          "If the adversary intends to install the malicious extension themself, they must first compromise the target machine via some other means."
        ],
        "relatedWeaknesses": [
          507,
          829
        ],
        "consequences": [
          "Confidentiality Access Control Read Data",
          "Integrity Access Control Modify Data",
          "Authorization Access Control Execute Unauthorized Commands Alter Execution Logic Gain Privileges"
        ],
        "mitigations": [
          "Only install extensions/plugins from official/verifiable sources.",
          "Confirm extensions/plugins are legitimate and not malware masquerading as a legitimate extension/plugin.",
          "Ensure the underlying software leveraging the extension/plugin (including operating systems) is up-to-date.",
          "Implement an extension/plugin allow list, based on the given security policy.",
          "If applicable, confirm extensions/plugins are properly signed by the official developers.",
          "For web browsers, close sessions when finished to prevent malicious extensions/plugins from executing the the background."
        ],
        "relatedAttackPatterns": [
          542
        ]
      },
      {
        "id": 699,
        "name": "Eavesdropping on a Monitor",
        "description": "An Adversary can eavesdrop on the content of an external monitor through the air without modifying any cable or installing software, just capturing this signal emitted by the cable or video port, with this the attacker will be able to impact the confidentiality of the data without being detected by traditional security tools",
        "prerequisites": [
          "Victim should use an external monitor device",
          "Physical access to the target location and devices"
        ],
        "relatedWeaknesses": [
          1300
        ],
        "consequences": [
          "Confidentiality Read Data"
        ],
        "mitigations": [
          "Enhance: Increase the number of electromagnetic shield layers in the display ports and cables to contain or reduce the intensity of the leaked signal.",
          "Implement: Use a protocol that encrypts the video signal; in case the signal is intercepted the signal is protected by the encryption.",
          "Design: Lock away the video cables, making it difficult for the attacker to access the cables and place the antenna near them (If the distance condition between the antenna and display port/cable is not satisfied, the attack will not be possible).",
          "Implement: Use wireless technologies to connect to external display devices."
        ],
        "relatedAttackPatterns": [
          651
        ]
      },
      {
        "id": 700,
        "name": "Network Boundary Bridging",
        "description": "An adversary which has gained elevated access to network boundary devices may use these devices to create a channel to bridge trusted and untrusted networks. Boundary devices do not necessarily have to be on the network’s edge, but rather must serve to segment portions of the target network the adversary wishes to cross into.",
        "prerequisites": [
          "The adversary must have control of a network boundary device."
        ],
        "consequences": [
          "Confidentiality Access Control Read Data Bypass Protection Mechanism",
          "Integrity Authorization Alter Execution Logic Hide Activities"
        ],
        "mitigations": [
          "Design: Ensure network devices are storing credentials in encrypted stores",
          "Design: Follow the principle of least privilege and restrict administrative duties to as few accounts as possible. Ensure these privileged accounts are secured with strong credentials which do not overlap with other network devices.",
          "Configuration: When possible, configure network boundary devices to use MFA.",
          "Configuration: Change the default configuration for network devices to harden their security profiles. Default configurations are often enabled with insecure features to allow ease of installation and management. However, these configurations can be easily discovered and exploited by adversaries.",
          "Implementation: Perform integrity checks on audit logs for network device management and review them to identify abnormalities in configurations.",
          "Implementation: Prevent network boundary devices from being physically accessed by unauthorized personnel to prevent tampering."
        ],
        "relatedAttackPatterns": [
          161,
          70,
          560
        ]
      },
      {
        "id": 701,
        "name": "Browser in the Middle (BiTM)",
        "description": "An adversary exploits the inherent functionalities of a web browser, in order to establish an unnoticed remote desktop connection in the victim's browser to the adversary's system. The adversary must deploy a web client with a remote desktop session that the victim can access.",
        "prerequisites": [
          "The adversary must create a convincing web client to establish the connection. The victim then needs to be lured onto the adversary's webpage. In addition, the victim's machine must not use local authentication APIs, a hardware token, or a Trusted Platform Module (TPM) to authenticate."
        ],
        "relatedWeaknesses": [
          294,
          345
        ],
        "consequences": [
          "Confidentiality Access Control Authentication Gain Privileges High",
          "Confidentiality Authorization Read Data High",
          "Integrity Modify Data Medium"
        ],
        "mitigations": [
          "Implementation: Use strong, mutual authentication to fully authenticate with both ends of any communications channel"
        ],
        "relatedAttackPatterns": [
          94,
          151,
          148,
          98
        ]
      },
      {
        "id": 702,
        "name": "Exploiting Incorrect Chaining or Granularity of Hardware Debug Components",
        "description": "An adversary exploits incorrect chaining or granularity of hardware debug components in order to gain unauthorized access to debug functionality on a chip. This happens when authorization is not checked on a per function basis and is assumed for a chain or group of debug functionality.",
        "prerequisites": [
          "Hardware device has an exposed debug interface"
        ],
        "relatedWeaknesses": [
          1296
        ],
        "consequences": [
          "Confidentiality Read Data",
          "Integrity Modify Data",
          "Access Control Authorization Gain Privileges"
        ],
        "mitigations": [
          "Implement: Ensure that debug components are properly chained, and their granularity is maintained at different authorization levels",
          "Perform Post-silicon validation tests at various authorization levels to ensure that debug components are only accessible to authorized users"
        ],
        "relatedAttackPatterns": [
          180
        ]
      }
    ],
    "attack": {
      "techniques": [
        {
          "id": "T1055.011",
          "name": "Extra Window Memory Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1053.005",
          "name": "Scheduled Task",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1205.002",
          "name": "Socket Filters",
          "tactics": [
            "defense-evasion",
            "persistence",
            "command-and-control"
          ]
        },
        {
          "id": "T1066",
          "name": "Indicator Removal from Tools",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1560.001",
          "name": "Archive via Utility",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1021.005",
          "name": "VNC",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1047",
          "name": "Windows Management Instrumentation",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1156",
          "name": "Malicious Shell Modification",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1113",
          "name": "Screen Capture",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1027.011",
          "name": "Fileless Storage",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1067",
          "name": "Bootkit",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1037",
          "name": "Boot or Logon Initialization Scripts",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1557",
          "name": "Adversary-in-the-Middle",
          "tactics": [
            "credential-access",
            "collection"
          ]
        },
        {
          "id": "T1033",
          "name": "System Owner/User Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1583",
          "name": "Acquire Infrastructure",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1218.011",
          "name": "Rundll32",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1613",
          "name": "Container and Resource Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1583.007",
          "name": "Serverless",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1143",
          "name": "Hidden Window",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1161",
          "name": "LC_LOAD_DYLIB Addition",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1132.001",
          "name": "Standard Encoding",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1027.009",
          "name": "Embedded Payloads",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1150",
          "name": "Plist Modification",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1556.003",
          "name": "Pluggable Authentication Modules",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1578.004",
          "name": "Revert Cloud Instance",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1148",
          "name": "HISTCONTROL",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1592",
          "name": "Gather Victim Host Information",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1596.003",
          "name": "Digital Certificates",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1056.001",
          "name": "Keylogging",
          "tactics": [
            "collection",
            "credential-access"
          ]
        },
        {
          "id": "T1564.012",
          "name": "File/Path Exclusions",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1222.002",
          "name": "Linux and Mac File and Directory Permissions Modification",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1110.001",
          "name": "Password Guessing",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1216.001",
          "name": "PubPrn",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1597.002",
          "name": "Purchase Technical Data",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1003",
          "name": "OS Credential Dumping",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1129",
          "name": "Shared Modules",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1602",
          "name": "Data from Configuration Repository",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1561.002",
          "name": "Disk Structure Wipe",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1498.001",
          "name": "Direct Network Flood",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1492",
          "name": "Stored Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1574.007",
          "name": "Path Interception by PATH Environment Variable",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1213.002",
          "name": "Sharepoint",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1006",
          "name": "Direct Volume Access",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1044",
          "name": "File System Permissions Weakness",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1588.007",
          "name": "Artificial Intelligence",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1666",
          "name": "Modify Cloud Resource Hierarchy",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1564.008",
          "name": "Email Hiding Rules",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1491.002",
          "name": "External Defacement",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1027.013",
          "name": "Encrypted/Encoded File",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1171",
          "name": "LLMNR/NBT-NS Poisoning and Relay",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1590.005",
          "name": "IP Addresses",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1499.001",
          "name": "OS Exhaustion Flood",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1014",
          "name": "Rootkit",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1546.013",
          "name": "PowerShell Profile",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1059.007",
          "name": "JavaScript",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1590.002",
          "name": "DNS",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1501",
          "name": "Systemd Service",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1485.001",
          "name": "Lifecycle-Triggered Deletion",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1514",
          "name": "Elevated Execution with Prompt",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1123",
          "name": "Audio Capture",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1543",
          "name": "Create or Modify System Process",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1133",
          "name": "External Remote Services",
          "tactics": [
            "persistence",
            "initial-access"
          ]
        },
        {
          "id": "T1109",
          "name": "Component Firmware",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1546.006",
          "name": "LC_LOAD_DYLIB Addition",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1539",
          "name": "Steal Web Session Cookie",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1053.007",
          "name": "Container Orchestration Job",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1568.002",
          "name": "Domain Generation Algorithms",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1036.007",
          "name": "Double File Extension",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1548.002",
          "name": "Bypass User Account Control",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1099",
          "name": "Timestomp",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1496.003",
          "name": "SMS Pumping",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1016.001",
          "name": "Internet Connection Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1548.003",
          "name": "Sudo and Sudo Caching",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1560.003",
          "name": "Archive via Custom Method",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1578",
          "name": "Modify Cloud Compute Infrastructure",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1584.008",
          "name": "Network Devices",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1583.008",
          "name": "Malvertising",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1069",
          "name": "Permission Groups Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1114",
          "name": "Email Collection",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1003.002",
          "name": "Security Account Manager",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1596.002",
          "name": "WHOIS",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1542.001",
          "name": "System Firmware",
          "tactics": [
            "persistence",
            "defense-evasion"
          ]
        },
        {
          "id": "T1594",
          "name": "Search Victim-Owned Websites",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1069.003",
          "name": "Cloud Groups",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1574.011",
          "name": "Services Registry Permissions Weakness",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1596.001",
          "name": "DNS/Passive DNS",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1499.003",
          "name": "Application Exhaustion Flood",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1163",
          "name": "Rc.common",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1195.001",
          "name": "Compromise Software Dependencies and Development Tools",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1588.004",
          "name": "Digital Certificates",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1583.002",
          "name": "DNS Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1561",
          "name": "Disk Wipe",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1071.004",
          "name": "DNS",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1552.005",
          "name": "Cloud Instance Metadata API",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1555.002",
          "name": "Securityd Memory",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1615",
          "name": "Group Policy Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1542.003",
          "name": "Bootkit",
          "tactics": [
            "persistence",
            "defense-evasion"
          ]
        },
        {
          "id": "T1025",
          "name": "Data from Removable Media",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1116",
          "name": "Code Signing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1218.013",
          "name": "Mavinject",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1522",
          "name": "Cloud Instance Metadata API",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1093",
          "name": "Process Hollowing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1074.001",
          "name": "Local Data Staging",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1036.005",
          "name": "Match Legitimate Resource Name or Location",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1172",
          "name": "Domain Fronting",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1587.003",
          "name": "Digital Certificates",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1565.001",
          "name": "Stored Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1110.002",
          "name": "Password Cracking",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1178",
          "name": "SID-History Injection",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1114.001",
          "name": "Local Email Collection",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1555.001",
          "name": "Keychain",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1547",
          "name": "Boot or Logon Autostart Execution",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1003.004",
          "name": "LSA Secrets",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1013",
          "name": "Port Monitors",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1600",
          "name": "Weaken Encryption",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1606.002",
          "name": "SAML Tokens",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1192",
          "name": "Spearphishing Link",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1036.008",
          "name": "Masquerade File Type",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1489",
          "name": "Service Stop",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1587.001",
          "name": "Malware",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1121",
          "name": "Regsvcs/Regasm",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1652",
          "name": "Device Driver Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1206",
          "name": "Sudo Caching",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1087.002",
          "name": "Domain Account",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1547.014",
          "name": "Active Setup",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1564",
          "name": "Hide Artifacts",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1559.002",
          "name": "Dynamic Data Exchange",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1204.002",
          "name": "Malicious File",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1591.003",
          "name": "Identify Business Tempo",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1063",
          "name": "Security Software Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1071.005",
          "name": "Publish/Subscribe Protocols",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1592.001",
          "name": "Hardware",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1080",
          "name": "Taint Shared Content",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1484.002",
          "name": "Trust Modification",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1573.001",
          "name": "Symmetric Cryptography",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1087.001",
          "name": "Local Account",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1167",
          "name": "Securityd Memory",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1586.001",
          "name": "Social Media Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1176.001",
          "name": "Browser Extensions",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1527",
          "name": "Application Access Token",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1562.009",
          "name": "Safe Mode Boot",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1180",
          "name": "Screensaver",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1542.005",
          "name": "TFTP Boot",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1543.003",
          "name": "Windows Service",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1568.001",
          "name": "Fast Flux DNS",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1497.001",
          "name": "System Checks",
          "tactics": [
            "defense-evasion",
            "discovery"
          ]
        },
        {
          "id": "T1053.003",
          "name": "Cron",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1069.002",
          "name": "Domain Groups",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1588.006",
          "name": "Vulnerabilities",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1566.002",
          "name": "Spearphishing Link",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1165",
          "name": "Startup Items",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1070.002",
          "name": "Clear Linux or Mac System Logs",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1499.004",
          "name": "Application or System Exploitation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1137",
          "name": "Office Application Startup",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1218.004",
          "name": "InstallUtil",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1598.003",
          "name": "Spearphishing Link",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1021.004",
          "name": "SSH",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1098.003",
          "name": "Additional Cloud Roles",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1547.012",
          "name": "Print Processors",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1089",
          "name": "Disabling Security Tools",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1487",
          "name": "Disk Structure Wipe",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1566.001",
          "name": "Spearphishing Attachment",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1214",
          "name": "Credentials in Registry",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1027.008",
          "name": "Stripped Payloads",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1559.001",
          "name": "Component Object Model",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1574.001",
          "name": "DLL",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1119",
          "name": "Automated Collection",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1115",
          "name": "Clipboard Data",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1003.007",
          "name": "Proc Filesystem",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1583.005",
          "name": "Botnet",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1555.005",
          "name": "Password Managers",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1103",
          "name": "AppInit DLLs",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1553.001",
          "name": "Gatekeeper Bypass",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1675",
          "name": "ESXi Administration Command",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1608.004",
          "name": "Drive-by Target",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1007",
          "name": "System Service Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1040",
          "name": "Network Sniffing",
          "tactics": [
            "credential-access",
            "discovery"
          ]
        },
        {
          "id": "T1017",
          "name": "Application Deployment Software",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1553.002",
          "name": "Code Signing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1530",
          "name": "Data from Cloud Storage",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1565.003",
          "name": "Runtime Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1552.002",
          "name": "Credentials in Registry",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1135",
          "name": "Network Share Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1120",
          "name": "Peripheral Device Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1036.009",
          "name": "Break Process Trees",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1590.004",
          "name": "Network Topology",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1587.002",
          "name": "Code Signing Certificates",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1222.001",
          "name": "Windows File and Directory Permissions Modification",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1137.006",
          "name": "Add-ins",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1505.002",
          "name": "Transport Agent",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1082",
          "name": "System Information Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1071",
          "name": "Application Layer Protocol",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1574.014",
          "name": "AppDomainManager",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1074.002",
          "name": "Remote Data Staging",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1098.006",
          "name": "Additional Container Cluster Roles",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1053",
          "name": "Scheduled Task/Job",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1218.007",
          "name": "Msiexec",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1162",
          "name": "Login Item",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1590.003",
          "name": "Network Trust Dependencies",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1498.002",
          "name": "Reflection Amplification",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1556.002",
          "name": "Password Filter DLL",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1505.005",
          "name": "Terminal Services DLL",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1059.002",
          "name": "AppleScript",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1176",
          "name": "Software Extensions",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1499.002",
          "name": "Service Exhaustion Flood",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1195.003",
          "name": "Compromise Hardware Supply Chain",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1106",
          "name": "Native API",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1558.005",
          "name": "Ccache Files",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1070.007",
          "name": "Clear Network Connection History and Configurations",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1558.004",
          "name": "AS-REP Roasting",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1058",
          "name": "Service Registry Permissions Weakness",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1584.003",
          "name": "Virtual Private Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1059.010",
          "name": "AutoHotKey & AutoIT",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1600.001",
          "name": "Reduce Key Space",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1070.003",
          "name": "Clear Command History",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1202",
          "name": "Indirect Command Execution",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1024",
          "name": "Custom Cryptographic Protocol",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1536",
          "name": "Revert Cloud Instance",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1091",
          "name": "Replication Through Removable Media",
          "tactics": [
            "lateral-movement",
            "initial-access"
          ]
        },
        {
          "id": "T1005",
          "name": "Data from Local System",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1140",
          "name": "Deobfuscate/Decode Files or Information",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1137.005",
          "name": "Outlook Rules",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1562",
          "name": "Impair Defenses",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1586.003",
          "name": "Cloud Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1586.002",
          "name": "Email Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1098.007",
          "name": "Additional Local or Domain Groups",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1608.001",
          "name": "Upload Malware",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1195",
          "name": "Supply Chain Compromise",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1190",
          "name": "Exploit Public-Facing Application",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1558",
          "name": "Steal or Forge Kerberos Tickets",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1555",
          "name": "Credentials from Password Stores",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1567",
          "name": "Exfiltration Over Web Service",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1219",
          "name": "Remote Access Tools",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1583.001",
          "name": "Domains",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1560.002",
          "name": "Archive via Library",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1055.003",
          "name": "Thread Execution Hijacking",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1079",
          "name": "Multilayer Encryption",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1036",
          "name": "Masquerading",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1546.011",
          "name": "Application Shimming",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1552",
          "name": "Unsecured Credentials",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1547.010",
          "name": "Port Monitors",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1070.008",
          "name": "Clear Mailbox Data",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1037.002",
          "name": "Login Hook",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1659",
          "name": "Content Injection",
          "tactics": [
            "initial-access",
            "command-and-control"
          ]
        },
        {
          "id": "T1055",
          "name": "Process Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1567.004",
          "name": "Exfiltration Over Webhook",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1139",
          "name": "Bash History",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1205",
          "name": "Traffic Signaling",
          "tactics": [
            "defense-evasion",
            "persistence",
            "command-and-control"
          ]
        },
        {
          "id": "T1021.008",
          "name": "Direct Cloud VM Connections",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1503",
          "name": "Credentials from Web Browsers",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1218",
          "name": "System Binary Proxy Execution",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1153",
          "name": "Source",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1038",
          "name": "DLL Search Order Hijacking",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1050",
          "name": "New Service",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1070.006",
          "name": "Timestomp",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1557.004",
          "name": "Evil Twin",
          "tactics": [
            "credential-access",
            "collection"
          ]
        },
        {
          "id": "T1620",
          "name": "Reflective Code Loading",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1016.002",
          "name": "Wi-Fi Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1480.002",
          "name": "Mutual Exclusion",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1564.011",
          "name": "Ignore Process Interrupts",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1611",
          "name": "Escape to Host",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1547.009",
          "name": "Shortcut Modification",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1010",
          "name": "Application Window Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1569.003",
          "name": "Systemctl",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1032",
          "name": "Standard Cryptographic Protocol",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1087.003",
          "name": "Email Account",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1062",
          "name": "Hypervisor",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1497.003",
          "name": "Time Based Evasion",
          "tactics": [
            "defense-evasion",
            "discovery"
          ]
        },
        {
          "id": "T1182",
          "name": "AppCert DLLs",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1218.003",
          "name": "CMSTP",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1563.001",
          "name": "SSH Hijacking",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1562.002",
          "name": "Disable Windows Event Logging",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1029",
          "name": "Scheduled Transfer",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1021.002",
          "name": "SMB/Windows Admin Shares",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1525",
          "name": "Implant Internal Image",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1572",
          "name": "Protocol Tunneling",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1218.002",
          "name": "Control Panel",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1599.001",
          "name": "Network Address Translation Traversal",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1608.002",
          "name": "Upload Tool",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1547.005",
          "name": "Security Support Provider",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1036.011",
          "name": "Overwrite Process Arguments",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1004",
          "name": "Winlogon Helper DLL",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1009",
          "name": "Binary Padding",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1550",
          "name": "Use Alternate Authentication Material",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1076",
          "name": "Remote Desktop Protocol",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1597.001",
          "name": "Threat Intel Vendors",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1011",
          "name": "Exfiltration Over Other Network Medium",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1602.002",
          "name": "Network Device Configuration Dump",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1589",
          "name": "Gather Victim Identity Information",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1131",
          "name": "Authentication Package",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1181",
          "name": "Extra Window Memory Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1562.004",
          "name": "Disable or Modify System Firewall",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1560",
          "name": "Archive Collected Data",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1152",
          "name": "Launchctl",
          "tactics": [
            "defense-evasion",
            "execution",
            "persistence"
          ]
        },
        {
          "id": "T1553.003",
          "name": "SIP and Trust Provider Hijacking",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1483",
          "name": "Domain Generation Algorithms",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1185",
          "name": "Browser Session Hijacking",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1021",
          "name": "Remote Services",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1071.003",
          "name": "Mail Protocols",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1556.007",
          "name": "Hybrid Identity",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1595.002",
          "name": "Vulnerability Scanning",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1059.009",
          "name": "Cloud API",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1596",
          "name": "Search Open Technical Databases",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1218.015",
          "name": "Electron Applications",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1562.012",
          "name": "Disable or Modify Linux Audit System",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1207",
          "name": "Rogue Domain Controller",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1553.006",
          "name": "Code Signing Policy Modification",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1610",
          "name": "Deploy Container",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1107",
          "name": "File Deletion",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1145",
          "name": "Private Keys",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1112",
          "name": "Modify Registry",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1543.004",
          "name": "Launch Daemon",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1580",
          "name": "Cloud Infrastructure Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1555.003",
          "name": "Credentials from Web Browsers",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1574.008",
          "name": "Path Interception by Search Order Hijacking",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1491",
          "name": "Defacement",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1535",
          "name": "Unused/Unsupported Cloud Regions",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1557.003",
          "name": "DHCP Spoofing",
          "tactics": [
            "credential-access",
            "collection"
          ]
        },
        {
          "id": "T1155",
          "name": "AppleScript",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1563",
          "name": "Remote Service Session Hijacking",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1564.013",
          "name": "Bind Mounts",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1027.001",
          "name": "Binary Padding",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1505.003",
          "name": "Web Shell",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1484.001",
          "name": "Group Policy Modification",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1217",
          "name": "Browser Information Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1552.004",
          "name": "Private Keys",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1583.004",
          "name": "Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1021.006",
          "name": "Windows Remote Management",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1011.001",
          "name": "Exfiltration Over Bluetooth",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1078.001",
          "name": "Default Accounts",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation",
            "initial-access"
          ]
        },
        {
          "id": "T1547.003",
          "name": "Time Providers",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1183",
          "name": "Image File Execution Options Injection",
          "tactics": [
            "privilege-escalation",
            "persistence",
            "defense-evasion"
          ]
        },
        {
          "id": "T1085",
          "name": "Rundll32",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1031",
          "name": "Modify Existing Service",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1546.005",
          "name": "Trap",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1574.006",
          "name": "Dynamic Linker Hijacking",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1136.001",
          "name": "Local Account",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1674",
          "name": "Input Injection",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1092",
          "name": "Communication Through Removable Media",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1070.001",
          "name": "Clear Windows Event Logs",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1585.002",
          "name": "Email Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1557.001",
          "name": "LLMNR/NBT-NS Poisoning and SMB Relay",
          "tactics": [
            "credential-access",
            "collection"
          ]
        },
        {
          "id": "T1222",
          "name": "File and Directory Permissions Modification",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1003.001",
          "name": "LSASS Memory",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1053.001",
          "name": "At (Linux)",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1176.002",
          "name": "IDE Extensions",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1179",
          "name": "Hooking",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "credential-access"
          ]
        },
        {
          "id": "T1595",
          "name": "Active Scanning",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1027.016",
          "name": "Junk Code Insertion",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1547.011",
          "name": "Plist Modification",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1548",
          "name": "Abuse Elevation Control Mechanism",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1134.002",
          "name": "Create Process with Token",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1548.001",
          "name": "Setuid and Setgid",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1547.004",
          "name": "Winlogon Helper DLL",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1019",
          "name": "System Firmware",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1021.003",
          "name": "Distributed Component Object Model",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1042",
          "name": "Change Default File Association",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1117",
          "name": "Regsvr32",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1110.003",
          "name": "Password Spraying",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1090.002",
          "name": "External Proxy",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1056.003",
          "name": "Web Portal Capture",
          "tactics": [
            "collection",
            "credential-access"
          ]
        },
        {
          "id": "T1589.002",
          "name": "Email Addresses",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1164",
          "name": "Re-opened Applications",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1054",
          "name": "Indicator Blocking",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1598.004",
          "name": "Spearphishing Voice",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1108",
          "name": "Redundant Access",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1193",
          "name": "Spearphishing Attachment",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1003.005",
          "name": "Cached Domain Credentials",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1098.004",
          "name": "SSH Authorized Keys",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1673",
          "name": "Virtual Machine Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1215",
          "name": "Kernel Modules and Extensions",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1101",
          "name": "Security Support Provider",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1590.006",
          "name": "Network Security Appliances",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1546.012",
          "name": "Image File Execution Options Injection",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1218.008",
          "name": "Odbcconf",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1593.002",
          "name": "Search Engines",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1177",
          "name": "LSASS Driver",
          "tactics": [
            "execution",
            "persistence"
          ]
        },
        {
          "id": "T1591.002",
          "name": "Business Relationships",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1548.005",
          "name": "Temporary Elevated Cloud Access",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1125",
          "name": "Video Capture",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1144",
          "name": "Gatekeeper Bypass",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1045",
          "name": "Software Packing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1055.013",
          "name": "Process Doppelgänging",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1016",
          "name": "System Network Configuration Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1578.003",
          "name": "Delete Cloud Instance",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1593.003",
          "name": "Code Repositories",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1574.005",
          "name": "Executable Installer File Permissions Weakness",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1546.008",
          "name": "Accessibility Features",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1496.002",
          "name": "Bandwidth Hijacking",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1504",
          "name": "PowerShell Profile",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1198",
          "name": "SIP and Trust Provider Hijacking",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1087",
          "name": "Account Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1090",
          "name": "Proxy",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1059",
          "name": "Command and Scripting Interpreter",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1562.006",
          "name": "Indicator Blocking",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1136.002",
          "name": "Domain Account",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1564.014",
          "name": "Extended Attributes",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1589.003",
          "name": "Employee Names",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1482",
          "name": "Domain Trust Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1558.001",
          "name": "Golden Ticket",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1175",
          "name": "Component Object Model and Distributed COM",
          "tactics": [
            "lateral-movement",
            "execution"
          ]
        },
        {
          "id": "T1020",
          "name": "Automated Exfiltration",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1592.004",
          "name": "Client Configurations",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1562.007",
          "name": "Disable or Modify Cloud Firewall",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1219.001",
          "name": "IDE Tunneling",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1036.002",
          "name": "Right-to-Left Override",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1588.001",
          "name": "Malware",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1027.017",
          "name": "SVG Smuggling",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1542.002",
          "name": "Component Firmware",
          "tactics": [
            "persistence",
            "defense-evasion"
          ]
        },
        {
          "id": "T1070",
          "name": "Indicator Removal",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1048.001",
          "name": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1137.001",
          "name": "Office Template Macros",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1583.003",
          "name": "Virtual Private Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1213.001",
          "name": "Confluence",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1550.003",
          "name": "Pass the Ticket",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1609",
          "name": "Container Administration Command",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1083",
          "name": "File and Directory Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1568",
          "name": "Dynamic Resolution",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1036.004",
          "name": "Masquerade Task or Service",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1055.004",
          "name": "Asynchronous Procedure Call",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1020.001",
          "name": "Traffic Duplication",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1138",
          "name": "Application Shimming",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1647",
          "name": "Plist File Modification",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1127.003",
          "name": "JamPlus",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1546.009",
          "name": "AppCert DLLs",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1191",
          "name": "CMSTP",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1188",
          "name": "Multi-hop Proxy",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1114.003",
          "name": "Email Forwarding Rule",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1074",
          "name": "Data Staged",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1649",
          "name": "Steal or Forge Authentication Certificates",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1098.005",
          "name": "Device Registration",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1049",
          "name": "System Network Connections Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1584",
          "name": "Compromise Infrastructure",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1553.005",
          "name": "Mark-of-the-Web Bypass",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1600.002",
          "name": "Disable Crypto Hardware",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1542",
          "name": "Pre-OS Boot",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1064",
          "name": "Scripting",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1612",
          "name": "Build Image on Host",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1051",
          "name": "Shared Webroot",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1055.002",
          "name": "Portable Executable Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1218.012",
          "name": "Verclsid",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1586",
          "name": "Compromise Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1569.001",
          "name": "Launchctl",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1584.005",
          "name": "Botnet",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1059.008",
          "name": "Network Device CLI",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1552.003",
          "name": "Bash History",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1562.010",
          "name": "Downgrade Attack",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1559.003",
          "name": "XPC Services",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1497",
          "name": "Virtualization/Sandbox Evasion",
          "tactics": [
            "defense-evasion",
            "discovery"
          ]
        },
        {
          "id": "T1102",
          "name": "Web Service",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1552.001",
          "name": "Credentials In Files",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1568.003",
          "name": "DNS Calculation",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1218.005",
          "name": "Mshta",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1547.015",
          "name": "Login Items",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1608",
          "name": "Stage Capabilities",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1608.005",
          "name": "Link Target",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1104",
          "name": "Multi-Stage Channels",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1657",
          "name": "Financial Theft",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1480",
          "name": "Execution Guardrails",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1619",
          "name": "Cloud Storage Object Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1606.001",
          "name": "Web Cookies",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1654",
          "name": "Log Enumeration",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1134.001",
          "name": "Token Impersonation/Theft",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1567.001",
          "name": "Exfiltration to Code Repository",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1021.007",
          "name": "Cloud Services",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1205.001",
          "name": "Port Knocking",
          "tactics": [
            "defense-evasion",
            "persistence",
            "command-and-control"
          ]
        },
        {
          "id": "T1027.012",
          "name": "LNK Icon Smuggling",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1583.006",
          "name": "Web Services",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1528",
          "name": "Steal Application Access Token",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1598.002",
          "name": "Spearphishing Attachment",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1098.001",
          "name": "Additional Cloud Credentials",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1204",
          "name": "User Execution",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1491.001",
          "name": "Internal Defacement",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1564.002",
          "name": "Hidden Users",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1134.003",
          "name": "Make and Impersonate Token",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1552.006",
          "name": "Group Policy Preferences",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1196",
          "name": "Control Panel Items",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1048.002",
          "name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1087.004",
          "name": "Cloud Account",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1057",
          "name": "Process Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1562.003",
          "name": "Impair Command History Logging",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1053.004",
          "name": "Launchd",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1556.008",
          "name": "Network Provider DLL",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1546.003",
          "name": "Windows Management Instrumentation Event Subscription",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1596.004",
          "name": "CDNs",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1497.002",
          "name": "User Activity Based Checks",
          "tactics": [
            "defense-evasion",
            "discovery"
          ]
        },
        {
          "id": "T1141",
          "name": "Input Prompt",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1496.004",
          "name": "Cloud Service Hijacking",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1585.003",
          "name": "Cloud Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1072",
          "name": "Software Deployment Tools",
          "tactics": [
            "execution",
            "lateral-movement"
          ]
        },
        {
          "id": "T1041",
          "name": "Exfiltration Over C2 Channel",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1134.004",
          "name": "Parent PID Spoofing",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1591",
          "name": "Gather Victim Org Information",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1060",
          "name": "Registry Run Keys / Startup Folder",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1606",
          "name": "Forge Web Credentials",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1621",
          "name": "Multi-Factor Authentication Request Generation",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1554",
          "name": "Compromise Host Software Binary",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1552.008",
          "name": "Chat Messages",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1059.001",
          "name": "PowerShell",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1023",
          "name": "Shortcut Modification",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1546.001",
          "name": "Change Default File Association",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1055.014",
          "name": "VDSO Hijacking",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1026",
          "name": "Multiband Communication",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1071.002",
          "name": "File Transfer Protocols",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1122",
          "name": "Component Object Model Hijacking",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1015",
          "name": "Accessibility Features",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1212",
          "name": "Exploitation for Credential Access",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1546.014",
          "name": "Emond",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1102.003",
          "name": "One-Way Communication",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1590",
          "name": "Gather Victim Network Information",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1210",
          "name": "Exploitation of Remote Services",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1502",
          "name": "Parent PID Spoofing",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1142",
          "name": "Keychain",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1534",
          "name": "Internal Spearphishing",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1169",
          "name": "Sudo",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1574.010",
          "name": "Services File Permissions Weakness",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1547.001",
          "name": "Registry Run Keys / Startup Folder",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1199",
          "name": "Trusted Relationship",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1136.003",
          "name": "Cloud Account",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1069.001",
          "name": "Local Groups",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1149",
          "name": "LC_MAIN Hijacking",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1593",
          "name": "Search Open Websites/Domains",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1098",
          "name": "Account Manipulation",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1170",
          "name": "Mshta",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1048",
          "name": "Exfiltration Over Alternative Protocol",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1547.006",
          "name": "Kernel Modules and Extensions",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1056.002",
          "name": "GUI Input Capture",
          "tactics": [
            "collection",
            "credential-access"
          ]
        },
        {
          "id": "T1097",
          "name": "Pass the Ticket",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1588.002",
          "name": "Tool",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1052.001",
          "name": "Exfiltration over USB",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1574.013",
          "name": "KernelCallbackTable",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1597",
          "name": "Search Closed Sources",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1053.006",
          "name": "Systemd Timers",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1566",
          "name": "Phishing",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1061",
          "name": "Graphical User Interface",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1542.004",
          "name": "ROMMONkit",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1218.001",
          "name": "Compiled HTML File",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1496.001",
          "name": "Compute Hijacking",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1070.005",
          "name": "Network Share Connection Removal",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1090.003",
          "name": "Multi-hop Proxy",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1110",
          "name": "Brute Force",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1059.004",
          "name": "Unix Shell",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1137.003",
          "name": "Outlook Forms",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1219.003",
          "name": "Remote Access Hardware",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1157",
          "name": "Dylib Hijacking",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1562.001",
          "name": "Disable or Modify Tools",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1565",
          "name": "Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1559",
          "name": "Inter-Process Communication",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1001",
          "name": "Data Obfuscation",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1039",
          "name": "Data from Network Shared Drive",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1584.006",
          "name": "Web Services",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1601",
          "name": "Modify System Image",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1574",
          "name": "Hijack Execution Flow",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1059.011",
          "name": "Lua",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1027.005",
          "name": "Indicator Removal from Tools",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1204.003",
          "name": "Malicious Image",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1543.005",
          "name": "Container Service",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1078",
          "name": "Valid Accounts",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation",
            "initial-access"
          ]
        },
        {
          "id": "T1571",
          "name": "Non-Standard Port",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1585.001",
          "name": "Social Media Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1073",
          "name": "DLL Side-Loading",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1055.012",
          "name": "Process Hollowing",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1068",
          "name": "Exploitation for Privilege Escalation",
          "tactics": [
            "privilege-escalation"
          ]
        },
        {
          "id": "T1564.009",
          "name": "Resource Forking",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1531",
          "name": "Account Access Removal",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1110.004",
          "name": "Credential Stuffing",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1208",
          "name": "Kerberoasting",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1027",
          "name": "Obfuscated Files or Information",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1556.006",
          "name": "Multi-Factor Authentication",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1114.002",
          "name": "Remote Email Collection",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1505.004",
          "name": "IIS Components",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1036.001",
          "name": "Invalid Code Signature",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1564.006",
          "name": "Run Virtual Instance",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1154",
          "name": "Trap",
          "tactics": [
            "execution",
            "persistence"
          ]
        },
        {
          "id": "T1027.014",
          "name": "Polymorphic Code",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1201",
          "name": "Password Policy Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1546",
          "name": "Event Triggered Execution",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1546.004",
          "name": "Unix Shell Configuration Modification",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1187",
          "name": "Forced Authentication",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1134.005",
          "name": "SID-History Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1599",
          "name": "Network Boundary Bridging",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1486",
          "name": "Data Encrypted for Impact",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1488",
          "name": "Disk Content Wipe",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1553",
          "name": "Subvert Trust Controls",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1548.004",
          "name": "Elevated Execution with Prompt",
          "tactics": [
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1592.003",
          "name": "Firmware",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1573",
          "name": "Encrypted Channel",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1174",
          "name": "Password Filter DLL",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1547.002",
          "name": "Authentication Package",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1218.010",
          "name": "Regsvr32",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1002",
          "name": "Data Compressed",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1567.003",
          "name": "Exfiltration to Text Storage Sites",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1081",
          "name": "Credentials in Files",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1592.002",
          "name": "Software",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1128",
          "name": "Netsh Helper DLL",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1056",
          "name": "Input Capture",
          "tactics": [
            "collection",
            "credential-access"
          ]
        },
        {
          "id": "T1566.004",
          "name": "Spearphishing Voice",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1587.004",
          "name": "Exploits",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1593.001",
          "name": "Social Media",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1213.004",
          "name": "Customer Relationship Management Software",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1546.015",
          "name": "Component Object Model Hijacking",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1589.001",
          "name": "Credentials",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1195.002",
          "name": "Compromise Software Supply Chain",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1036.003",
          "name": "Rename Legitimate Utilities",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1102.002",
          "name": "Bidirectional Communication",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1203",
          "name": "Exploitation for Client Execution",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1595.003",
          "name": "Wordlist Scanning",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1667",
          "name": "Email Bombing",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1562.011",
          "name": "Spoof Security Alerting",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1137.004",
          "name": "Outlook Home Page",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1573.002",
          "name": "Asymmetric Cryptography",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1567.002",
          "name": "Exfiltration to Cloud Storage",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1570",
          "name": "Lateral Tool Transfer",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1574.009",
          "name": "Path Interception by Unquoted Path",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1608.003",
          "name": "Install Digital Certificate",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1168",
          "name": "Local Job Scheduling",
          "tactics": [
            "persistence",
            "execution"
          ]
        },
        {
          "id": "T1166",
          "name": "Setuid and Setgid",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1037.005",
          "name": "Startup Items",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1100",
          "name": "Web Shell",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1186",
          "name": "Process Doppelgänging",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1184",
          "name": "SSH Hijacking",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1614.001",
          "name": "System Language Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1095",
          "name": "Non-Application Layer Protocol",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1075",
          "name": "Pass the Hash",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1027.003",
          "name": "Steganography",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1584.002",
          "name": "DNS Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1671",
          "name": "Cloud Application Integration",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1001.003",
          "name": "Protocol or Service Impersonation",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1012",
          "name": "Query Registry",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1030",
          "name": "Data Transfer Size Limits",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1028",
          "name": "Windows Remote Management",
          "tactics": [
            "execution",
            "lateral-movement"
          ]
        },
        {
          "id": "T1550.004",
          "name": "Web Session Cookie",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1078.002",
          "name": "Domain Accounts",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation",
            "initial-access"
          ]
        },
        {
          "id": "T1218.009",
          "name": "Regsvcs/Regasm",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1034",
          "name": "Path Interception",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1506",
          "name": "Web Session Cookie",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1553.004",
          "name": "Install Root Certificate",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1037.003",
          "name": "Network Logon Script",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1499",
          "name": "Endpoint Denial of Service",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1027.004",
          "name": "Compile After Delivery",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1065",
          "name": "Uncommonly Used Port",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1614",
          "name": "System Location Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1564.007",
          "name": "VBA Stomping",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1197",
          "name": "BITS Jobs",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1127.001",
          "name": "MSBuild",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1656",
          "name": "Impersonation",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1578.005",
          "name": "Modify Cloud Compute Configurations",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1088",
          "name": "Bypass User Account Control",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1494",
          "name": "Runtime Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1090.004",
          "name": "Domain Fronting",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1557.002",
          "name": "ARP Cache Poisoning",
          "tactics": [
            "credential-access",
            "collection"
          ]
        },
        {
          "id": "T1562.008",
          "name": "Disable or Modify Cloud Logs",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1518.001",
          "name": "Security Software Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1564.003",
          "name": "Hidden Window",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1493",
          "name": "Transmitted Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1127.002",
          "name": "ClickOnce",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1059.006",
          "name": "Python",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1070.010",
          "name": "Relocate Malware",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1591.004",
          "name": "Identify Roles",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1132",
          "name": "Data Encoding",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1546.010",
          "name": "AppInit DLLs",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1598",
          "name": "Phishing for Information",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1496",
          "name": "Resource Hijacking",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1585",
          "name": "Establish Accounts",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1588",
          "name": "Obtain Capabilities",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1546.002",
          "name": "Screensaver",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1147",
          "name": "Hidden Users",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1556.009",
          "name": "Conditional Access Policies",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1578.002",
          "name": "Create Cloud Instance",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1500",
          "name": "Compile After Delivery",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1555.006",
          "name": "Cloud Secrets Management Stores",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1213.003",
          "name": "Code Repositories",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1565.002",
          "name": "Transmitted Data Manipulation",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1003.008",
          "name": "/etc/passwd and /etc/shadow",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1543.001",
          "name": "Launch Agent",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1569",
          "name": "System Services",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1059.003",
          "name": "Windows Command Shell",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1055.009",
          "name": "Proc Memory",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1223",
          "name": "Compiled HTML File",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1650",
          "name": "Acquire Access",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1601.001",
          "name": "Patch System Image",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1558.002",
          "name": "Silver Ticket",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1213",
          "name": "Data from Information Repositories",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1070.009",
          "name": "Clear Persistence",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1059.012",
          "name": "Hypervisor CLI",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1146",
          "name": "Clear Command History",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1555.004",
          "name": "Windows Credential Manager",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1036.010",
          "name": "Masquerade Account Name",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1519",
          "name": "Emond",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1194",
          "name": "Spearphishing via Service",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1200",
          "name": "Hardware Additions",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1219.002",
          "name": "Remote Desktop Software",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1505",
          "name": "Server Software Component",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1485",
          "name": "Data Destruction",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1132.002",
          "name": "Non-Standard Encoding",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1556.001",
          "name": "Domain Controller Authentication",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1537",
          "name": "Transfer Data to Cloud Account",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1027.006",
          "name": "HTML Smuggling",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1556.005",
          "name": "Reversible Encryption",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1027.010",
          "name": "Command Obfuscation",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1130",
          "name": "Install Root Certificate",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1022",
          "name": "Data Encrypted",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1070.004",
          "name": "File Deletion",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1189",
          "name": "Drive-by Compromise",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1498",
          "name": "Network Denial of Service",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1651",
          "name": "Cloud Administration Command",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1546.016",
          "name": "Installer Packages",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1595.001",
          "name": "Scanning IP Blocks",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1158",
          "name": "Hidden Files and Directories",
          "tactics": [
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1221",
          "name": "Template Injection",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1037.004",
          "name": "RC Scripts",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1134",
          "name": "Access Token Manipulation",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1209",
          "name": "Time Providers",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1111",
          "name": "Multi-Factor Authentication Interception",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1159",
          "name": "Launch Agent",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1027.002",
          "name": "Software Packing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1584.007",
          "name": "Serverless",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1071.001",
          "name": "Web Protocols",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1059.005",
          "name": "Visual Basic",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1564.005",
          "name": "Hidden File System",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1543.002",
          "name": "Systemd Service",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1668",
          "name": "Exclusive Control",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1563.002",
          "name": "RDP Hijacking",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1136",
          "name": "Create Account",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1547.013",
          "name": "XDG Autostart Entries",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1584.004",
          "name": "Server",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1672",
          "name": "Email Spoofing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1526",
          "name": "Cloud Service Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1204.004",
          "name": "Malicious Copy and Paste",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1151",
          "name": "Space after Filename",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1018",
          "name": "Remote System Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1046",
          "name": "Network Service Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1590.001",
          "name": "Domain Properties",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1518",
          "name": "Software Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1538",
          "name": "Cloud Service Dashboard",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1055.005",
          "name": "Thread Local Storage",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1622",
          "name": "Debugger Evasion",
          "tactics": [
            "defense-evasion",
            "discovery"
          ]
        },
        {
          "id": "T1036.006",
          "name": "Space after Filename",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1547.007",
          "name": "Re-opened Applications",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1608.006",
          "name": "SEO Poisoning",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1550.002",
          "name": "Pass the Hash",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1052",
          "name": "Exfiltration Over Physical Medium",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1574.002",
          "name": "DLL Side-Loading",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1105",
          "name": "Ingress Tool Transfer",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1216.002",
          "name": "SyncAppvPublishingServer",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1098.002",
          "name": "Additional Email Delegate Permissions",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1588.003",
          "name": "Code Signing Certificates",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1126",
          "name": "Network Share Connection Removal",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1648",
          "name": "Serverless Execution",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1548.006",
          "name": "TCC Manipulation",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1084",
          "name": "Windows Management Instrumentation Event Subscription",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1160",
          "name": "Launch Daemon",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1055.008",
          "name": "Ptrace System Calls",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1653",
          "name": "Power Settings",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1027.007",
          "name": "Dynamic API Resolution",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1021.001",
          "name": "Remote Desktop Protocol",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1037.001",
          "name": "Logon Script (Windows)",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1055.015",
          "name": "ListPlanting",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1665",
          "name": "Hide Infrastructure",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1484",
          "name": "Domain or Tenant Policy Modification",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1220",
          "name": "XSL Script Processing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1596.005",
          "name": "Scan Databases",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1564.001",
          "name": "Hidden Files and Directories",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1578.001",
          "name": "Create Snapshot",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1591.001",
          "name": "Determine Physical Locations",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1137.002",
          "name": "Office Test",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1587",
          "name": "Develop Capabilities",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1173",
          "name": "Dynamic Data Exchange",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1003.003",
          "name": "NTDS",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1602.001",
          "name": "SNMP (MIB Dump)",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1001.002",
          "name": "Steganography",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1204.001",
          "name": "Malicious Link",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1550.001",
          "name": "Application Access Token",
          "tactics": [
            "defense-evasion",
            "lateral-movement"
          ]
        },
        {
          "id": "T1547.008",
          "name": "LSASS Driver",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1569.002",
          "name": "Service Execution",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1078.004",
          "name": "Cloud Accounts",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation",
            "initial-access"
          ]
        },
        {
          "id": "T1480.001",
          "name": "Environmental Keying",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1008",
          "name": "Fallback Channels",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1564.004",
          "name": "NTFS File Attributes",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1558.003",
          "name": "Kerberoasting",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1096",
          "name": "NTFS File Attributes",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1003.006",
          "name": "DCSync",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1124",
          "name": "System Time Discovery",
          "tactics": [
            "discovery"
          ]
        },
        {
          "id": "T1053.002",
          "name": "At",
          "tactics": [
            "execution",
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1035",
          "name": "Service Execution",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1055.001",
          "name": "Dynamic-link Library Injection",
          "tactics": [
            "defense-evasion",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1086",
          "name": "PowerShell",
          "tactics": [
            "execution"
          ]
        },
        {
          "id": "T1588.005",
          "name": "Exploits",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1556",
          "name": "Modify Authentication Process",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1546.017",
          "name": "Udev Rules",
          "tactics": [
            "persistence",
            "privilege-escalation"
          ]
        },
        {
          "id": "T1056.004",
          "name": "Credential API Hooking",
          "tactics": [
            "collection",
            "credential-access"
          ]
        },
        {
          "id": "T1495",
          "name": "Firmware Corruption",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1490",
          "name": "Inhibit System Recovery",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1546.007",
          "name": "Netsh Helper DLL",
          "tactics": [
            "privilege-escalation",
            "persistence"
          ]
        },
        {
          "id": "T1566.003",
          "name": "Spearphishing via Service",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1090.001",
          "name": "Internal Proxy",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1216",
          "name": "System Script Proxy Execution",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1094",
          "name": "Custom Command and Control Protocol",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1102.001",
          "name": "Dead Drop Resolver",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1118",
          "name": "InstallUtil",
          "tactics": [
            "defense-evasion",
            "execution"
          ]
        },
        {
          "id": "T1001.001",
          "name": "Junk Data",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1598.001",
          "name": "Spearphishing Service",
          "tactics": [
            "reconnaissance"
          ]
        },
        {
          "id": "T1043",
          "name": "Commonly Used Port",
          "tactics": [
            "command-and-control"
          ]
        },
        {
          "id": "T1505.006",
          "name": "vSphere Installation Bundles",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1552.007",
          "name": "Container API",
          "tactics": [
            "credential-access"
          ]
        },
        {
          "id": "T1584.001",
          "name": "Domains",
          "tactics": [
            "resource-development"
          ]
        },
        {
          "id": "T1505.001",
          "name": "SQL Stored Procedures",
          "tactics": [
            "persistence"
          ]
        },
        {
          "id": "T1556.004",
          "name": "Network Device Authentication",
          "tactics": [
            "credential-access",
            "defense-evasion",
            "persistence"
          ]
        },
        {
          "id": "T1561.001",
          "name": "Disk Content Wipe",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1213.005",
          "name": "Messaging Applications",
          "tactics": [
            "collection"
          ]
        },
        {
          "id": "T1048.003",
          "name": "Exfiltration Over Unencrypted Non-C2 Protocol",
          "tactics": [
            "exfiltration"
          ]
        },
        {
          "id": "T1027.015",
          "name": "Compression",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1574.004",
          "name": "Dylib Hijacking",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        },
        {
          "id": "T1601.002",
          "name": "Downgrade System Image",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1078.003",
          "name": "Local Accounts",
          "tactics": [
            "defense-evasion",
            "persistence",
            "privilege-escalation",
            "initial-access"
          ]
        },
        {
          "id": "T1669",
          "name": "Wi-Fi Networks",
          "tactics": [
            "initial-access"
          ]
        },
        {
          "id": "T1211",
          "name": "Exploitation for Defense Evasion",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1127",
          "name": "Trusted Developer Utilities Proxy Execution",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1529",
          "name": "System Shutdown/Reboot",
          "tactics": [
            "impact"
          ]
        },
        {
          "id": "T1218.014",
          "name": "MMC",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1564.010",
          "name": "Process Argument Spoofing",
          "tactics": [
            "defense-evasion"
          ]
        },
        {
          "id": "T1077",
          "name": "Windows Admin Shares",
          "tactics": [
            "lateral-movement"
          ]
        },
        {
          "id": "T1574.012",
          "name": "COR_PROFILER",
          "tactics": [
            "persistence",
            "privilege-escalation",
            "defense-evasion"
          ]
        }
      ],
      "tactics": [
        {
          "id": "TA0006",
          "name": "Credential Access"
        },
        {
          "id": "TA0002",
          "name": "Execution"
        },
        {
          "id": "TA0040",
          "name": "Impact"
        },
        {
          "id": "TA0003",
          "name": "Persistence"
        },
        {
          "id": "TA0004",
          "name": "Privilege Escalation"
        },
        {
          "id": "TA0008",
          "name": "Lateral Movement"
        },
        {
          "id": "TA0005",
          "name": "Defense Evasion"
        },
        {
          "id": "TA0010",
          "name": "Exfiltration"
        },
        {
          "id": "TA0007",
          "name": "Discovery"
        },
        {
          "id": "TA0009",
          "name": "Collection"
        },
        {
          "id": "TA0042",
          "name": "Resource Development"
        },
        {
          "id": "TA0043",
          "name": "Reconnaissance"
        },
        {
          "id": "TA0011",
          "name": "Command and Control"
        },
        {
          "id": "TA0001",
          "name": "Initial Access"
        }
      ]
    }
  }
}